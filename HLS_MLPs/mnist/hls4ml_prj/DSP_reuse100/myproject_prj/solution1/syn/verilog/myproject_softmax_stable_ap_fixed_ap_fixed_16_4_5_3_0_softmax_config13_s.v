// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module myproject_softmax_stable_ap_fixed_ap_fixed_16_4_5_3_0_softmax_config13_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] p_read;
input  [15:0] p_read1;
input  [15:0] p_read2;
input  [15:0] p_read3;
input  [15:0] p_read4;
input  [15:0] p_read5;
input  [15:0] p_read6;
input  [15:0] p_read7;
input  [15:0] p_read8;
input  [15:0] p_read9;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;
output  [15:0] ap_return_3;
output  [15:0] ap_return_4;
output  [15:0] ap_return_5;
output  [15:0] ap_return_6;
output  [15:0] ap_return_7;
output  [15:0] ap_return_8;
output  [15:0] ap_return_9;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_pp0_stage0_subdone;
wire   [9:0] exp_table_address0;
reg    exp_table_ce0;
wire   [17:0] exp_table_q0;
wire   [9:0] exp_table_address1;
reg    exp_table_ce1;
wire   [17:0] exp_table_q1;
wire   [9:0] exp_table_address2;
reg    exp_table_ce2;
wire   [17:0] exp_table_q2;
wire   [9:0] exp_table_address3;
reg    exp_table_ce3;
wire   [17:0] exp_table_q3;
wire   [9:0] exp_table_address4;
reg    exp_table_ce4;
wire   [17:0] exp_table_q4;
wire   [9:0] exp_table_address5;
reg    exp_table_ce5;
wire   [17:0] exp_table_q5;
wire   [9:0] exp_table_address6;
reg    exp_table_ce6;
wire   [17:0] exp_table_q6;
wire   [9:0] exp_table_address7;
reg    exp_table_ce7;
wire   [17:0] exp_table_q7;
wire   [9:0] exp_table_address8;
reg    exp_table_ce8;
wire   [17:0] exp_table_q8;
wire   [9:0] exp_table_address9;
reg    exp_table_ce9;
wire   [17:0] exp_table_q9;
wire   [9:0] invert_table_address0;
reg    invert_table_ce0;
wire   [17:0] invert_table_q0;
reg  signed [15:0] p_read_1_reg_1459;
wire    ap_block_pp0_stage0_11001;
reg  signed [15:0] p_read_1_reg_1459_pp0_iter1_reg;
reg  signed [15:0] p_read_1_reg_1459_pp0_iter2_reg;
reg  signed [15:0] p_read_1_reg_1459_pp0_iter3_reg;
reg  signed [15:0] p_read_2_reg_1466;
reg  signed [15:0] p_read_2_reg_1466_pp0_iter1_reg;
reg  signed [15:0] p_read_2_reg_1466_pp0_iter2_reg;
reg  signed [15:0] p_read_2_reg_1466_pp0_iter3_reg;
reg  signed [15:0] p_read_3_reg_1473;
reg  signed [15:0] p_read_3_reg_1473_pp0_iter1_reg;
reg  signed [15:0] p_read_3_reg_1473_pp0_iter2_reg;
reg  signed [15:0] p_read_3_reg_1473_pp0_iter3_reg;
reg  signed [15:0] p_read_4_reg_1479;
reg  signed [15:0] p_read_4_reg_1479_pp0_iter1_reg;
reg  signed [15:0] p_read_4_reg_1479_pp0_iter2_reg;
reg  signed [15:0] p_read_4_reg_1479_pp0_iter3_reg;
reg  signed [15:0] p_read_5_reg_1485;
reg  signed [15:0] p_read_5_reg_1485_pp0_iter1_reg;
reg  signed [15:0] p_read_5_reg_1485_pp0_iter2_reg;
reg  signed [15:0] p_read_5_reg_1485_pp0_iter3_reg;
reg  signed [15:0] p_read_6_reg_1491;
reg  signed [15:0] p_read_6_reg_1491_pp0_iter1_reg;
reg  signed [15:0] p_read_6_reg_1491_pp0_iter2_reg;
reg  signed [15:0] p_read_6_reg_1491_pp0_iter3_reg;
reg  signed [15:0] p_read_7_reg_1497;
reg  signed [15:0] p_read_7_reg_1497_pp0_iter1_reg;
reg  signed [15:0] p_read_7_reg_1497_pp0_iter2_reg;
reg  signed [15:0] p_read_7_reg_1497_pp0_iter3_reg;
reg  signed [15:0] p_read_8_reg_1503;
reg  signed [15:0] p_read_8_reg_1503_pp0_iter1_reg;
reg  signed [15:0] p_read_8_reg_1503_pp0_iter2_reg;
reg  signed [15:0] p_read_8_reg_1503_pp0_iter3_reg;
reg  signed [15:0] p_read_9_reg_1509;
reg  signed [15:0] p_read_9_reg_1509_pp0_iter1_reg;
reg  signed [15:0] p_read_9_reg_1509_pp0_iter2_reg;
reg  signed [15:0] p_read_9_reg_1509_pp0_iter3_reg;
reg  signed [15:0] p_read_10_reg_1515;
reg  signed [15:0] p_read_10_reg_1515_pp0_iter1_reg;
reg  signed [15:0] p_read_10_reg_1515_pp0_iter2_reg;
reg  signed [15:0] p_read_10_reg_1515_pp0_iter3_reg;
wire   [0:0] icmp_ln1549_fu_260_p2;
reg   [0:0] icmp_ln1549_reg_1521;
wire   [0:0] icmp_ln1549_1_fu_266_p2;
reg   [0:0] icmp_ln1549_1_reg_1526;
wire   [0:0] icmp_ln1549_3_fu_272_p2;
reg   [0:0] icmp_ln1549_3_reg_1531;
wire   [0:0] icmp_ln1549_4_fu_278_p2;
reg   [0:0] icmp_ln1549_4_reg_1536;
wire   [15:0] select_ln65_2_fu_318_p3;
reg   [15:0] select_ln65_2_reg_1541;
wire   [15:0] select_ln65_5_fu_360_p3;
reg   [15:0] select_ln65_5_reg_1547;
wire   [15:0] select_ln65_6_fu_378_p3;
reg   [15:0] select_ln65_6_reg_1553;
wire   [0:0] icmp_ln1549_7_fu_384_p2;
reg   [0:0] icmp_ln1549_7_reg_1559;
wire   [15:0] x_max_V_fu_410_p3;
reg   [15:0] x_max_V_reg_1564;
wire   [9:0] y_fu_868_p3;
reg   [9:0] y_reg_1569;
reg   [9:0] y_reg_1569_pp0_iter5_reg;
wire   [9:0] y_1_fu_894_p3;
reg   [9:0] y_1_reg_1574;
wire   [9:0] y_2_fu_920_p3;
reg   [9:0] y_2_reg_1579;
wire   [9:0] y_3_fu_946_p3;
reg   [9:0] y_3_reg_1584;
wire   [9:0] y_4_fu_972_p3;
reg   [9:0] y_4_reg_1589;
reg   [9:0] y_4_reg_1589_pp0_iter5_reg;
wire   [9:0] y_5_fu_998_p3;
reg   [9:0] y_5_reg_1594;
reg   [9:0] y_5_reg_1594_pp0_iter5_reg;
wire   [9:0] y_6_fu_1024_p3;
reg   [9:0] y_6_reg_1599;
reg   [9:0] y_6_reg_1599_pp0_iter5_reg;
wire   [9:0] y_7_fu_1050_p3;
reg   [9:0] y_7_reg_1604;
reg   [9:0] y_7_reg_1604_pp0_iter5_reg;
wire   [9:0] y_8_fu_1076_p3;
reg   [9:0] y_8_reg_1609;
reg   [9:0] y_8_reg_1609_pp0_iter5_reg;
reg   [9:0] y_8_reg_1609_pp0_iter6_reg;
wire   [9:0] y_9_fu_1102_p3;
reg   [9:0] y_9_reg_1614;
reg   [9:0] y_9_reg_1614_pp0_iter5_reg;
reg   [9:0] y_9_reg_1614_pp0_iter6_reg;
reg  signed [17:0] exp_res_V_1_reg_1639;
reg  signed [17:0] exp_res_V_1_reg_1639_pp0_iter7_reg;
reg  signed [17:0] exp_res_V_1_reg_1639_pp0_iter8_reg;
reg  signed [17:0] exp_res_V_1_reg_1639_pp0_iter9_reg;
reg  signed [17:0] exp_res_V_1_reg_1639_pp0_iter10_reg;
reg  signed [17:0] exp_res_V_1_reg_1639_pp0_iter11_reg;
reg  signed [17:0] exp_res_V_2_reg_1645;
reg  signed [17:0] exp_res_V_2_reg_1645_pp0_iter7_reg;
reg  signed [17:0] exp_res_V_2_reg_1645_pp0_iter8_reg;
reg  signed [17:0] exp_res_V_2_reg_1645_pp0_iter9_reg;
reg  signed [17:0] exp_res_V_2_reg_1645_pp0_iter10_reg;
reg  signed [17:0] exp_res_V_2_reg_1645_pp0_iter11_reg;
reg  signed [17:0] exp_res_V_3_reg_1651;
reg  signed [17:0] exp_res_V_3_reg_1651_pp0_iter7_reg;
reg  signed [17:0] exp_res_V_3_reg_1651_pp0_iter8_reg;
reg  signed [17:0] exp_res_V_3_reg_1651_pp0_iter9_reg;
reg  signed [17:0] exp_res_V_3_reg_1651_pp0_iter10_reg;
reg  signed [17:0] exp_res_V_3_reg_1651_pp0_iter11_reg;
reg  signed [17:0] exp_res_V_0_reg_1677;
reg  signed [17:0] exp_res_V_0_reg_1677_pp0_iter8_reg;
reg  signed [17:0] exp_res_V_0_reg_1677_pp0_iter9_reg;
reg  signed [17:0] exp_res_V_0_reg_1677_pp0_iter10_reg;
reg  signed [17:0] exp_res_V_0_reg_1677_pp0_iter11_reg;
reg  signed [17:0] exp_res_V_4_reg_1683;
reg  signed [17:0] exp_res_V_4_reg_1683_pp0_iter8_reg;
reg  signed [17:0] exp_res_V_4_reg_1683_pp0_iter9_reg;
reg  signed [17:0] exp_res_V_4_reg_1683_pp0_iter10_reg;
reg  signed [17:0] exp_res_V_4_reg_1683_pp0_iter11_reg;
reg  signed [17:0] exp_res_V_5_reg_1689;
reg  signed [17:0] exp_res_V_5_reg_1689_pp0_iter8_reg;
reg  signed [17:0] exp_res_V_5_reg_1689_pp0_iter9_reg;
reg  signed [17:0] exp_res_V_5_reg_1689_pp0_iter10_reg;
reg  signed [17:0] exp_res_V_5_reg_1689_pp0_iter11_reg;
reg  signed [17:0] exp_res_V_6_reg_1695;
reg  signed [17:0] exp_res_V_6_reg_1695_pp0_iter8_reg;
reg  signed [17:0] exp_res_V_6_reg_1695_pp0_iter9_reg;
reg  signed [17:0] exp_res_V_6_reg_1695_pp0_iter10_reg;
reg  signed [17:0] exp_res_V_6_reg_1695_pp0_iter11_reg;
reg  signed [17:0] exp_res_V_7_reg_1701;
reg  signed [17:0] exp_res_V_7_reg_1701_pp0_iter8_reg;
reg  signed [17:0] exp_res_V_7_reg_1701_pp0_iter9_reg;
reg  signed [17:0] exp_res_V_7_reg_1701_pp0_iter10_reg;
reg  signed [17:0] exp_res_V_7_reg_1701_pp0_iter11_reg;
wire   [17:0] add_ln712_6_fu_1154_p2;
reg   [17:0] add_ln712_6_reg_1717;
reg  signed [17:0] exp_res_V_8_reg_1722;
reg  signed [17:0] exp_res_V_8_reg_1722_pp0_iter9_reg;
reg  signed [17:0] exp_res_V_8_reg_1722_pp0_iter10_reg;
reg  signed [17:0] exp_res_V_8_reg_1722_pp0_iter11_reg;
reg  signed [17:0] exp_res_V_9_reg_1727;
reg  signed [17:0] exp_res_V_9_reg_1727_pp0_iter9_reg;
reg  signed [17:0] exp_res_V_9_reg_1727_pp0_iter10_reg;
reg  signed [17:0] exp_res_V_9_reg_1727_pp0_iter11_reg;
wire   [17:0] add_ln712_fu_1159_p2;
reg   [17:0] add_ln712_reg_1732;
wire   [17:0] add_ln712_2_fu_1169_p2;
reg   [17:0] add_ln712_2_reg_1737;
wire   [17:0] add_ln712_7_fu_1178_p2;
reg   [17:0] add_ln712_7_reg_1742;
reg   [9:0] y_10_reg_1747;
reg   [17:0] inv_exp_sum_V_reg_1757;
wire  signed [27:0] sext_ln1171_fu_1206_p1;
wire   [63:0] zext_ln255_1_fu_1110_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln255_2_fu_1114_p1;
wire   [63:0] zext_ln255_3_fu_1118_p1;
wire   [63:0] zext_ln255_fu_1122_p1;
wire   [63:0] zext_ln255_4_fu_1126_p1;
wire   [63:0] zext_ln255_5_fu_1130_p1;
wire   [63:0] zext_ln255_6_fu_1134_p1;
wire   [63:0] zext_ln255_7_fu_1138_p1;
wire   [63:0] zext_ln255_8_fu_1142_p1;
wire   [63:0] zext_ln255_9_fu_1146_p1;
wire   [63:0] zext_ln265_fu_1202_p1;
wire  signed [15:0] icmp_ln1549_fu_260_p0;
wire  signed [15:0] icmp_ln1549_fu_260_p1;
wire  signed [15:0] icmp_ln1549_1_fu_266_p0;
wire  signed [15:0] icmp_ln1549_1_fu_266_p1;
wire  signed [15:0] icmp_ln1549_3_fu_272_p0;
wire  signed [15:0] icmp_ln1549_3_fu_272_p1;
wire  signed [15:0] icmp_ln1549_4_fu_278_p0;
wire  signed [15:0] icmp_ln1549_4_fu_278_p1;
wire   [0:0] xor_ln1549_fu_284_p2;
wire   [0:0] xor_ln1549_1_fu_295_p2;
wire   [15:0] select_ln65_fu_289_p3;
wire   [15:0] select_ln65_1_fu_300_p3;
wire   [0:0] icmp_ln1549_2_fu_306_p2;
wire   [0:0] xor_ln1549_2_fu_312_p2;
wire   [0:0] xor_ln1549_3_fu_326_p2;
wire   [0:0] xor_ln1549_4_fu_337_p2;
wire   [15:0] select_ln65_3_fu_331_p3;
wire   [15:0] select_ln65_4_fu_342_p3;
wire   [0:0] icmp_ln1549_5_fu_348_p2;
wire   [0:0] xor_ln1549_5_fu_354_p2;
wire   [0:0] icmp_ln1549_6_fu_368_p2;
wire   [0:0] xor_ln1549_6_fu_372_p2;
wire   [0:0] xor_ln1549_7_fu_388_p2;
wire   [15:0] select_ln65_7_fu_393_p3;
wire   [0:0] icmp_ln1549_8_fu_399_p2;
wire   [0:0] xor_ln1549_8_fu_404_p2;
wire  signed [16:0] sext_ln1246_fu_417_p1;
wire  signed [16:0] sext_ln1246_1_fu_420_p1;
wire   [16:0] ret_V_fu_423_p2;
wire   [0:0] p_Result_11_fu_429_p3;
wire   [0:0] p_Result_12_fu_437_p3;
wire   [0:0] xor_ln794_fu_445_p2;
wire  signed [16:0] sext_ln1246_2_fu_463_p1;
wire   [16:0] ret_V_1_fu_466_p2;
wire   [0:0] p_Result_13_fu_472_p3;
wire   [0:0] p_Result_14_fu_480_p3;
wire   [0:0] xor_ln794_1_fu_488_p2;
wire  signed [16:0] sext_ln1246_3_fu_506_p1;
wire   [16:0] ret_V_2_fu_509_p2;
wire   [0:0] p_Result_15_fu_515_p3;
wire   [0:0] p_Result_16_fu_523_p3;
wire   [0:0] xor_ln794_2_fu_531_p2;
wire  signed [16:0] sext_ln1246_4_fu_549_p1;
wire   [16:0] ret_V_3_fu_552_p2;
wire   [0:0] p_Result_17_fu_558_p3;
wire   [0:0] p_Result_18_fu_566_p3;
wire   [0:0] xor_ln794_3_fu_574_p2;
wire  signed [16:0] sext_ln1246_5_fu_592_p1;
wire   [16:0] ret_V_4_fu_595_p2;
wire   [0:0] p_Result_19_fu_601_p3;
wire   [0:0] p_Result_20_fu_609_p3;
wire   [0:0] xor_ln794_4_fu_617_p2;
wire  signed [16:0] sext_ln1246_6_fu_635_p1;
wire   [16:0] ret_V_5_fu_638_p2;
wire   [0:0] p_Result_21_fu_644_p3;
wire   [0:0] p_Result_22_fu_652_p3;
wire   [0:0] xor_ln794_5_fu_660_p2;
wire  signed [16:0] sext_ln1246_7_fu_678_p1;
wire   [16:0] ret_V_6_fu_681_p2;
wire   [0:0] p_Result_23_fu_687_p3;
wire   [0:0] p_Result_24_fu_695_p3;
wire   [0:0] xor_ln794_6_fu_703_p2;
wire  signed [16:0] sext_ln1246_8_fu_721_p1;
wire   [16:0] ret_V_7_fu_724_p2;
wire   [0:0] p_Result_25_fu_730_p3;
wire   [0:0] p_Result_26_fu_738_p3;
wire   [0:0] xor_ln794_7_fu_746_p2;
wire  signed [16:0] sext_ln1246_9_fu_764_p1;
wire   [16:0] ret_V_8_fu_767_p2;
wire   [0:0] p_Result_27_fu_773_p3;
wire   [0:0] p_Result_28_fu_781_p3;
wire   [0:0] xor_ln794_8_fu_789_p2;
wire  signed [16:0] sext_ln1246_10_fu_807_p1;
wire   [16:0] ret_V_9_fu_810_p2;
wire   [0:0] p_Result_29_fu_816_p3;
wire   [0:0] p_Result_30_fu_824_p3;
wire   [0:0] xor_ln794_9_fu_832_p2;
wire   [0:0] overflow_fu_451_p2;
wire   [0:0] xor_ln340_fu_457_p2;
wire   [9:0] select_ln384_fu_850_p3;
wire   [9:0] tmp_fu_858_p4;
wire   [0:0] overflow_1_fu_494_p2;
wire   [0:0] xor_ln340_1_fu_500_p2;
wire   [9:0] select_ln384_1_fu_876_p3;
wire   [9:0] tmp_1_fu_884_p4;
wire   [0:0] overflow_2_fu_537_p2;
wire   [0:0] xor_ln340_2_fu_543_p2;
wire   [9:0] select_ln384_2_fu_902_p3;
wire   [9:0] tmp_2_fu_910_p4;
wire   [0:0] overflow_3_fu_580_p2;
wire   [0:0] xor_ln340_3_fu_586_p2;
wire   [9:0] select_ln384_3_fu_928_p3;
wire   [9:0] tmp_3_fu_936_p4;
wire   [0:0] overflow_4_fu_623_p2;
wire   [0:0] xor_ln340_4_fu_629_p2;
wire   [9:0] select_ln384_4_fu_954_p3;
wire   [9:0] tmp_4_fu_962_p4;
wire   [0:0] overflow_5_fu_666_p2;
wire   [0:0] xor_ln340_5_fu_672_p2;
wire   [9:0] select_ln384_5_fu_980_p3;
wire   [9:0] tmp_5_fu_988_p4;
wire   [0:0] overflow_6_fu_709_p2;
wire   [0:0] xor_ln340_6_fu_715_p2;
wire   [9:0] select_ln384_6_fu_1006_p3;
wire   [9:0] tmp_6_fu_1014_p4;
wire   [0:0] overflow_7_fu_752_p2;
wire   [0:0] xor_ln340_7_fu_758_p2;
wire   [9:0] select_ln384_7_fu_1032_p3;
wire   [9:0] tmp_7_fu_1040_p4;
wire   [0:0] overflow_8_fu_795_p2;
wire   [0:0] xor_ln340_8_fu_801_p2;
wire   [9:0] select_ln384_8_fu_1058_p3;
wire   [9:0] tmp_8_fu_1066_p4;
wire   [0:0] overflow_9_fu_838_p2;
wire   [0:0] xor_ln340_9_fu_844_p2;
wire   [9:0] select_ln384_9_fu_1084_p3;
wire   [9:0] tmp_9_fu_1092_p4;
wire   [17:0] add_ln712_5_fu_1150_p2;
wire  signed [17:0] add_ln712_fu_1159_p0;
wire  signed [17:0] add_ln712_fu_1159_p1;
wire   [17:0] add_ln712_1_fu_1165_p2;
wire   [17:0] add_ln712_4_fu_1174_p2;
wire   [17:0] add_ln712_3_fu_1183_p2;
wire   [17:0] exp_sum_V_fu_1187_p2;
wire  signed [27:0] grp_fu_1389_p2;
wire  signed [27:0] grp_fu_1396_p2;
wire  signed [27:0] grp_fu_1403_p2;
wire  signed [27:0] grp_fu_1410_p2;
wire  signed [27:0] grp_fu_1417_p2;
wire  signed [27:0] grp_fu_1424_p2;
wire  signed [27:0] grp_fu_1431_p2;
wire  signed [27:0] grp_fu_1438_p2;
wire  signed [27:0] grp_fu_1445_p2;
wire  signed [27:0] grp_fu_1452_p2;
wire  signed [17:0] grp_fu_1389_p0;
wire  signed [17:0] grp_fu_1396_p0;
wire  signed [17:0] grp_fu_1403_p0;
wire  signed [17:0] grp_fu_1410_p0;
wire  signed [17:0] grp_fu_1417_p0;
wire  signed [17:0] grp_fu_1424_p0;
wire  signed [17:0] grp_fu_1431_p0;
wire  signed [17:0] grp_fu_1438_p0;
wire  signed [17:0] grp_fu_1445_p0;
wire  signed [17:0] grp_fu_1452_p0;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to13;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
end

myproject_softmax_stable_ap_fixed_ap_fixed_16_4_5_3_0_softmax_config13_s_exp_table #(
    .DataWidth( 18 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
exp_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(exp_table_address0),
    .ce0(exp_table_ce0),
    .q0(exp_table_q0),
    .address1(exp_table_address1),
    .ce1(exp_table_ce1),
    .q1(exp_table_q1),
    .address2(exp_table_address2),
    .ce2(exp_table_ce2),
    .q2(exp_table_q2),
    .address3(exp_table_address3),
    .ce3(exp_table_ce3),
    .q3(exp_table_q3),
    .address4(exp_table_address4),
    .ce4(exp_table_ce4),
    .q4(exp_table_q4),
    .address5(exp_table_address5),
    .ce5(exp_table_ce5),
    .q5(exp_table_q5),
    .address6(exp_table_address6),
    .ce6(exp_table_ce6),
    .q6(exp_table_q6),
    .address7(exp_table_address7),
    .ce7(exp_table_ce7),
    .q7(exp_table_q7),
    .address8(exp_table_address8),
    .ce8(exp_table_ce8),
    .q8(exp_table_q8),
    .address9(exp_table_address9),
    .ce9(exp_table_ce9),
    .q9(exp_table_q9)
);

myproject_softmax_stable_ap_fixed_ap_fixed_16_4_5_3_0_softmax_config13_s_invert_table #(
    .DataWidth( 18 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
invert_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(invert_table_address0),
    .ce0(invert_table_ce0),
    .q0(invert_table_q0)
);

myproject_mul_mul_18s_18s_28_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 28 ))
mul_mul_18s_18s_28_3_1_U421(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1389_p0),
    .din1(exp_res_V_0_reg_1677_pp0_iter11_reg),
    .ce(1'b1),
    .dout(grp_fu_1389_p2)
);

myproject_mul_mul_18s_18s_28_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 28 ))
mul_mul_18s_18s_28_3_1_U422(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1396_p0),
    .din1(exp_res_V_1_reg_1639_pp0_iter11_reg),
    .ce(1'b1),
    .dout(grp_fu_1396_p2)
);

myproject_mul_mul_18s_18s_28_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 28 ))
mul_mul_18s_18s_28_3_1_U423(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1403_p0),
    .din1(exp_res_V_2_reg_1645_pp0_iter11_reg),
    .ce(1'b1),
    .dout(grp_fu_1403_p2)
);

myproject_mul_mul_18s_18s_28_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 28 ))
mul_mul_18s_18s_28_3_1_U424(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1410_p0),
    .din1(exp_res_V_3_reg_1651_pp0_iter11_reg),
    .ce(1'b1),
    .dout(grp_fu_1410_p2)
);

myproject_mul_mul_18s_18s_28_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 28 ))
mul_mul_18s_18s_28_3_1_U425(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1417_p0),
    .din1(exp_res_V_4_reg_1683_pp0_iter11_reg),
    .ce(1'b1),
    .dout(grp_fu_1417_p2)
);

myproject_mul_mul_18s_18s_28_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 28 ))
mul_mul_18s_18s_28_3_1_U426(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1424_p0),
    .din1(exp_res_V_5_reg_1689_pp0_iter11_reg),
    .ce(1'b1),
    .dout(grp_fu_1424_p2)
);

myproject_mul_mul_18s_18s_28_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 28 ))
mul_mul_18s_18s_28_3_1_U427(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1431_p0),
    .din1(exp_res_V_6_reg_1695_pp0_iter11_reg),
    .ce(1'b1),
    .dout(grp_fu_1431_p2)
);

myproject_mul_mul_18s_18s_28_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 28 ))
mul_mul_18s_18s_28_3_1_U428(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1438_p0),
    .din1(exp_res_V_7_reg_1701_pp0_iter11_reg),
    .ce(1'b1),
    .dout(grp_fu_1438_p2)
);

myproject_mul_mul_18s_18s_28_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 28 ))
mul_mul_18s_18s_28_3_1_U429(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1445_p0),
    .din1(exp_res_V_8_reg_1722_pp0_iter11_reg),
    .ce(1'b1),
    .dout(grp_fu_1445_p2)
);

myproject_mul_mul_18s_18s_28_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 28 ))
mul_mul_18s_18s_28_3_1_U430(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1452_p0),
    .din1(exp_res_V_9_reg_1727_pp0_iter11_reg),
    .ce(1'b1),
    .dout(grp_fu_1452_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln712_2_reg_1737 <= add_ln712_2_fu_1169_p2;
        add_ln712_6_reg_1717 <= add_ln712_6_fu_1154_p2;
        add_ln712_7_reg_1742 <= add_ln712_7_fu_1178_p2;
        add_ln712_reg_1732 <= add_ln712_fu_1159_p2;
        exp_res_V_0_reg_1677_pp0_iter10_reg <= exp_res_V_0_reg_1677_pp0_iter9_reg;
        exp_res_V_0_reg_1677_pp0_iter11_reg <= exp_res_V_0_reg_1677_pp0_iter10_reg;
        exp_res_V_0_reg_1677_pp0_iter8_reg <= exp_res_V_0_reg_1677;
        exp_res_V_0_reg_1677_pp0_iter9_reg <= exp_res_V_0_reg_1677_pp0_iter8_reg;
        exp_res_V_1_reg_1639_pp0_iter10_reg <= exp_res_V_1_reg_1639_pp0_iter9_reg;
        exp_res_V_1_reg_1639_pp0_iter11_reg <= exp_res_V_1_reg_1639_pp0_iter10_reg;
        exp_res_V_1_reg_1639_pp0_iter7_reg <= exp_res_V_1_reg_1639;
        exp_res_V_1_reg_1639_pp0_iter8_reg <= exp_res_V_1_reg_1639_pp0_iter7_reg;
        exp_res_V_1_reg_1639_pp0_iter9_reg <= exp_res_V_1_reg_1639_pp0_iter8_reg;
        exp_res_V_2_reg_1645_pp0_iter10_reg <= exp_res_V_2_reg_1645_pp0_iter9_reg;
        exp_res_V_2_reg_1645_pp0_iter11_reg <= exp_res_V_2_reg_1645_pp0_iter10_reg;
        exp_res_V_2_reg_1645_pp0_iter7_reg <= exp_res_V_2_reg_1645;
        exp_res_V_2_reg_1645_pp0_iter8_reg <= exp_res_V_2_reg_1645_pp0_iter7_reg;
        exp_res_V_2_reg_1645_pp0_iter9_reg <= exp_res_V_2_reg_1645_pp0_iter8_reg;
        exp_res_V_3_reg_1651_pp0_iter10_reg <= exp_res_V_3_reg_1651_pp0_iter9_reg;
        exp_res_V_3_reg_1651_pp0_iter11_reg <= exp_res_V_3_reg_1651_pp0_iter10_reg;
        exp_res_V_3_reg_1651_pp0_iter7_reg <= exp_res_V_3_reg_1651;
        exp_res_V_3_reg_1651_pp0_iter8_reg <= exp_res_V_3_reg_1651_pp0_iter7_reg;
        exp_res_V_3_reg_1651_pp0_iter9_reg <= exp_res_V_3_reg_1651_pp0_iter8_reg;
        exp_res_V_4_reg_1683_pp0_iter10_reg <= exp_res_V_4_reg_1683_pp0_iter9_reg;
        exp_res_V_4_reg_1683_pp0_iter11_reg <= exp_res_V_4_reg_1683_pp0_iter10_reg;
        exp_res_V_4_reg_1683_pp0_iter8_reg <= exp_res_V_4_reg_1683;
        exp_res_V_4_reg_1683_pp0_iter9_reg <= exp_res_V_4_reg_1683_pp0_iter8_reg;
        exp_res_V_5_reg_1689_pp0_iter10_reg <= exp_res_V_5_reg_1689_pp0_iter9_reg;
        exp_res_V_5_reg_1689_pp0_iter11_reg <= exp_res_V_5_reg_1689_pp0_iter10_reg;
        exp_res_V_5_reg_1689_pp0_iter8_reg <= exp_res_V_5_reg_1689;
        exp_res_V_5_reg_1689_pp0_iter9_reg <= exp_res_V_5_reg_1689_pp0_iter8_reg;
        exp_res_V_6_reg_1695_pp0_iter10_reg <= exp_res_V_6_reg_1695_pp0_iter9_reg;
        exp_res_V_6_reg_1695_pp0_iter11_reg <= exp_res_V_6_reg_1695_pp0_iter10_reg;
        exp_res_V_6_reg_1695_pp0_iter8_reg <= exp_res_V_6_reg_1695;
        exp_res_V_6_reg_1695_pp0_iter9_reg <= exp_res_V_6_reg_1695_pp0_iter8_reg;
        exp_res_V_7_reg_1701_pp0_iter10_reg <= exp_res_V_7_reg_1701_pp0_iter9_reg;
        exp_res_V_7_reg_1701_pp0_iter11_reg <= exp_res_V_7_reg_1701_pp0_iter10_reg;
        exp_res_V_7_reg_1701_pp0_iter8_reg <= exp_res_V_7_reg_1701;
        exp_res_V_7_reg_1701_pp0_iter9_reg <= exp_res_V_7_reg_1701_pp0_iter8_reg;
        exp_res_V_8_reg_1722_pp0_iter10_reg <= exp_res_V_8_reg_1722_pp0_iter9_reg;
        exp_res_V_8_reg_1722_pp0_iter11_reg <= exp_res_V_8_reg_1722_pp0_iter10_reg;
        exp_res_V_8_reg_1722_pp0_iter9_reg <= exp_res_V_8_reg_1722;
        exp_res_V_9_reg_1727_pp0_iter10_reg <= exp_res_V_9_reg_1727_pp0_iter9_reg;
        exp_res_V_9_reg_1727_pp0_iter11_reg <= exp_res_V_9_reg_1727_pp0_iter10_reg;
        exp_res_V_9_reg_1727_pp0_iter9_reg <= exp_res_V_9_reg_1727;
        icmp_ln1549_7_reg_1559 <= icmp_ln1549_7_fu_384_p2;
        inv_exp_sum_V_reg_1757 <= invert_table_q0;
        p_read_10_reg_1515_pp0_iter2_reg <= p_read_10_reg_1515_pp0_iter1_reg;
        p_read_10_reg_1515_pp0_iter3_reg <= p_read_10_reg_1515_pp0_iter2_reg;
        p_read_1_reg_1459_pp0_iter2_reg <= p_read_1_reg_1459_pp0_iter1_reg;
        p_read_1_reg_1459_pp0_iter3_reg <= p_read_1_reg_1459_pp0_iter2_reg;
        p_read_2_reg_1466_pp0_iter2_reg <= p_read_2_reg_1466_pp0_iter1_reg;
        p_read_2_reg_1466_pp0_iter3_reg <= p_read_2_reg_1466_pp0_iter2_reg;
        p_read_3_reg_1473_pp0_iter2_reg <= p_read_3_reg_1473_pp0_iter1_reg;
        p_read_3_reg_1473_pp0_iter3_reg <= p_read_3_reg_1473_pp0_iter2_reg;
        p_read_4_reg_1479_pp0_iter2_reg <= p_read_4_reg_1479_pp0_iter1_reg;
        p_read_4_reg_1479_pp0_iter3_reg <= p_read_4_reg_1479_pp0_iter2_reg;
        p_read_5_reg_1485_pp0_iter2_reg <= p_read_5_reg_1485_pp0_iter1_reg;
        p_read_5_reg_1485_pp0_iter3_reg <= p_read_5_reg_1485_pp0_iter2_reg;
        p_read_6_reg_1491_pp0_iter2_reg <= p_read_6_reg_1491_pp0_iter1_reg;
        p_read_6_reg_1491_pp0_iter3_reg <= p_read_6_reg_1491_pp0_iter2_reg;
        p_read_7_reg_1497_pp0_iter2_reg <= p_read_7_reg_1497_pp0_iter1_reg;
        p_read_7_reg_1497_pp0_iter3_reg <= p_read_7_reg_1497_pp0_iter2_reg;
        p_read_8_reg_1503_pp0_iter2_reg <= p_read_8_reg_1503_pp0_iter1_reg;
        p_read_8_reg_1503_pp0_iter3_reg <= p_read_8_reg_1503_pp0_iter2_reg;
        p_read_9_reg_1509_pp0_iter2_reg <= p_read_9_reg_1509_pp0_iter1_reg;
        p_read_9_reg_1509_pp0_iter3_reg <= p_read_9_reg_1509_pp0_iter2_reg;
        select_ln65_6_reg_1553 <= select_ln65_6_fu_378_p3;
        x_max_V_reg_1564 <= x_max_V_fu_410_p3;
        y_10_reg_1747 <= {{exp_sum_V_fu_1187_p2[17:8]}};
        y_1_reg_1574 <= y_1_fu_894_p3;
        y_2_reg_1579 <= y_2_fu_920_p3;
        y_3_reg_1584 <= y_3_fu_946_p3;
        y_4_reg_1589 <= y_4_fu_972_p3;
        y_4_reg_1589_pp0_iter5_reg <= y_4_reg_1589;
        y_5_reg_1594 <= y_5_fu_998_p3;
        y_5_reg_1594_pp0_iter5_reg <= y_5_reg_1594;
        y_6_reg_1599 <= y_6_fu_1024_p3;
        y_6_reg_1599_pp0_iter5_reg <= y_6_reg_1599;
        y_7_reg_1604 <= y_7_fu_1050_p3;
        y_7_reg_1604_pp0_iter5_reg <= y_7_reg_1604;
        y_8_reg_1609 <= y_8_fu_1076_p3;
        y_8_reg_1609_pp0_iter5_reg <= y_8_reg_1609;
        y_8_reg_1609_pp0_iter6_reg <= y_8_reg_1609_pp0_iter5_reg;
        y_9_reg_1614 <= y_9_fu_1102_p3;
        y_9_reg_1614_pp0_iter5_reg <= y_9_reg_1614;
        y_9_reg_1614_pp0_iter6_reg <= y_9_reg_1614_pp0_iter5_reg;
        y_reg_1569 <= y_fu_868_p3;
        y_reg_1569_pp0_iter5_reg <= y_reg_1569;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        exp_res_V_0_reg_1677 <= exp_table_q6;
        exp_res_V_4_reg_1683 <= exp_table_q5;
        exp_res_V_5_reg_1689 <= exp_table_q4;
        exp_res_V_6_reg_1695 <= exp_table_q3;
        exp_res_V_7_reg_1701 <= exp_table_q2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        exp_res_V_1_reg_1639 <= exp_table_q9;
        exp_res_V_2_reg_1645 <= exp_table_q8;
        exp_res_V_3_reg_1651 <= exp_table_q7;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        exp_res_V_8_reg_1722 <= exp_table_q1;
        exp_res_V_9_reg_1727 <= exp_table_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1549_1_reg_1526 <= icmp_ln1549_1_fu_266_p2;
        icmp_ln1549_3_reg_1531 <= icmp_ln1549_3_fu_272_p2;
        icmp_ln1549_4_reg_1536 <= icmp_ln1549_4_fu_278_p2;
        icmp_ln1549_reg_1521 <= icmp_ln1549_fu_260_p2;
        p_read_10_reg_1515 <= p_read;
        p_read_10_reg_1515_pp0_iter1_reg <= p_read_10_reg_1515;
        p_read_1_reg_1459 <= p_read9;
        p_read_1_reg_1459_pp0_iter1_reg <= p_read_1_reg_1459;
        p_read_2_reg_1466 <= p_read8;
        p_read_2_reg_1466_pp0_iter1_reg <= p_read_2_reg_1466;
        p_read_3_reg_1473 <= p_read7;
        p_read_3_reg_1473_pp0_iter1_reg <= p_read_3_reg_1473;
        p_read_4_reg_1479 <= p_read6;
        p_read_4_reg_1479_pp0_iter1_reg <= p_read_4_reg_1479;
        p_read_5_reg_1485 <= p_read5;
        p_read_5_reg_1485_pp0_iter1_reg <= p_read_5_reg_1485;
        p_read_6_reg_1491 <= p_read4;
        p_read_6_reg_1491_pp0_iter1_reg <= p_read_6_reg_1491;
        p_read_7_reg_1497 <= p_read3;
        p_read_7_reg_1497_pp0_iter1_reg <= p_read_7_reg_1497;
        p_read_8_reg_1503 <= p_read2;
        p_read_8_reg_1503_pp0_iter1_reg <= p_read_8_reg_1503;
        p_read_9_reg_1509 <= p_read1;
        p_read_9_reg_1509_pp0_iter1_reg <= p_read_9_reg_1509;
        select_ln65_2_reg_1541 <= select_ln65_2_fu_318_p3;
        select_ln65_5_reg_1547 <= select_ln65_5_fu_360_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter14 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to13 = 1'b1;
    end else begin
        ap_idle_pp0_0to13 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to13 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        exp_table_ce0 = 1'b1;
    end else begin
        exp_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        exp_table_ce1 = 1'b1;
    end else begin
        exp_table_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        exp_table_ce2 = 1'b1;
    end else begin
        exp_table_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        exp_table_ce3 = 1'b1;
    end else begin
        exp_table_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        exp_table_ce4 = 1'b1;
    end else begin
        exp_table_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        exp_table_ce5 = 1'b1;
    end else begin
        exp_table_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        exp_table_ce6 = 1'b1;
    end else begin
        exp_table_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        exp_table_ce7 = 1'b1;
    end else begin
        exp_table_ce7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        exp_table_ce8 = 1'b1;
    end else begin
        exp_table_ce8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        exp_table_ce9 = 1'b1;
    end else begin
        exp_table_ce9 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        invert_table_ce0 = 1'b1;
    end else begin
        invert_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln712_1_fu_1165_p2 = ($signed(exp_res_V_5_reg_1689) + $signed(exp_res_V_6_reg_1695));

assign add_ln712_2_fu_1169_p2 = ($signed(add_ln712_1_fu_1165_p2) + $signed(exp_res_V_4_reg_1683));

assign add_ln712_3_fu_1183_p2 = (add_ln712_2_reg_1737 + add_ln712_reg_1732);

assign add_ln712_4_fu_1174_p2 = ($signed(exp_res_V_7_reg_1701) + $signed(exp_res_V_0_reg_1677));

assign add_ln712_5_fu_1150_p2 = ($signed(exp_res_V_2_reg_1645) + $signed(exp_res_V_3_reg_1651));

assign add_ln712_6_fu_1154_p2 = ($signed(add_ln712_5_fu_1150_p2) + $signed(exp_res_V_1_reg_1639));

assign add_ln712_7_fu_1178_p2 = (add_ln712_6_reg_1717 + add_ln712_4_fu_1174_p2);

assign add_ln712_fu_1159_p0 = exp_table_q0;

assign add_ln712_fu_1159_p1 = exp_table_q1;

assign add_ln712_fu_1159_p2 = ($signed(add_ln712_fu_1159_p0) + $signed(add_ln712_fu_1159_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return_0 = {{grp_fu_1389_p2[27:12]}};

assign ap_return_1 = {{grp_fu_1396_p2[27:12]}};

assign ap_return_2 = {{grp_fu_1403_p2[27:12]}};

assign ap_return_3 = {{grp_fu_1410_p2[27:12]}};

assign ap_return_4 = {{grp_fu_1417_p2[27:12]}};

assign ap_return_5 = {{grp_fu_1424_p2[27:12]}};

assign ap_return_6 = {{grp_fu_1431_p2[27:12]}};

assign ap_return_7 = {{grp_fu_1438_p2[27:12]}};

assign ap_return_8 = {{grp_fu_1445_p2[27:12]}};

assign ap_return_9 = {{grp_fu_1452_p2[27:12]}};

assign exp_sum_V_fu_1187_p2 = (add_ln712_7_reg_1742 + add_ln712_3_fu_1183_p2);

assign exp_table_address0 = zext_ln255_9_fu_1146_p1;

assign exp_table_address1 = zext_ln255_8_fu_1142_p1;

assign exp_table_address2 = zext_ln255_7_fu_1138_p1;

assign exp_table_address3 = zext_ln255_6_fu_1134_p1;

assign exp_table_address4 = zext_ln255_5_fu_1130_p1;

assign exp_table_address5 = zext_ln255_4_fu_1126_p1;

assign exp_table_address6 = zext_ln255_fu_1122_p1;

assign exp_table_address7 = zext_ln255_3_fu_1118_p1;

assign exp_table_address8 = zext_ln255_2_fu_1114_p1;

assign exp_table_address9 = zext_ln255_1_fu_1110_p1;

assign grp_fu_1389_p0 = sext_ln1171_fu_1206_p1;

assign grp_fu_1396_p0 = sext_ln1171_fu_1206_p1;

assign grp_fu_1403_p0 = sext_ln1171_fu_1206_p1;

assign grp_fu_1410_p0 = sext_ln1171_fu_1206_p1;

assign grp_fu_1417_p0 = sext_ln1171_fu_1206_p1;

assign grp_fu_1424_p0 = sext_ln1171_fu_1206_p1;

assign grp_fu_1431_p0 = sext_ln1171_fu_1206_p1;

assign grp_fu_1438_p0 = sext_ln1171_fu_1206_p1;

assign grp_fu_1445_p0 = sext_ln1171_fu_1206_p1;

assign grp_fu_1452_p0 = sext_ln1171_fu_1206_p1;

assign icmp_ln1549_1_fu_266_p0 = p_read2;

assign icmp_ln1549_1_fu_266_p1 = p_read3;

assign icmp_ln1549_1_fu_266_p2 = (($signed(icmp_ln1549_1_fu_266_p0) < $signed(icmp_ln1549_1_fu_266_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1549_2_fu_306_p2 = (($signed(select_ln65_fu_289_p3) < $signed(select_ln65_1_fu_300_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1549_3_fu_272_p0 = p_read4;

assign icmp_ln1549_3_fu_272_p1 = p_read5;

assign icmp_ln1549_3_fu_272_p2 = (($signed(icmp_ln1549_3_fu_272_p0) < $signed(icmp_ln1549_3_fu_272_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1549_4_fu_278_p0 = p_read6;

assign icmp_ln1549_4_fu_278_p1 = p_read7;

assign icmp_ln1549_4_fu_278_p2 = (($signed(icmp_ln1549_4_fu_278_p0) < $signed(icmp_ln1549_4_fu_278_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1549_5_fu_348_p2 = (($signed(select_ln65_3_fu_331_p3) < $signed(select_ln65_4_fu_342_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1549_6_fu_368_p2 = (($signed(select_ln65_2_reg_1541) < $signed(select_ln65_5_reg_1547)) ? 1'b1 : 1'b0);

assign icmp_ln1549_7_fu_384_p2 = (($signed(p_read_2_reg_1466_pp0_iter1_reg) < $signed(p_read_1_reg_1459_pp0_iter1_reg)) ? 1'b1 : 1'b0);

assign icmp_ln1549_8_fu_399_p2 = (($signed(select_ln65_6_reg_1553) < $signed(select_ln65_7_fu_393_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1549_fu_260_p0 = p_read;

assign icmp_ln1549_fu_260_p1 = p_read1;

assign icmp_ln1549_fu_260_p2 = (($signed(icmp_ln1549_fu_260_p0) < $signed(icmp_ln1549_fu_260_p1)) ? 1'b1 : 1'b0);

assign invert_table_address0 = zext_ln265_fu_1202_p1;

assign overflow_1_fu_494_p2 = (xor_ln794_1_fu_488_p2 & p_Result_14_fu_480_p3);

assign overflow_2_fu_537_p2 = (xor_ln794_2_fu_531_p2 & p_Result_16_fu_523_p3);

assign overflow_3_fu_580_p2 = (xor_ln794_3_fu_574_p2 & p_Result_18_fu_566_p3);

assign overflow_4_fu_623_p2 = (xor_ln794_4_fu_617_p2 & p_Result_20_fu_609_p3);

assign overflow_5_fu_666_p2 = (xor_ln794_5_fu_660_p2 & p_Result_22_fu_652_p3);

assign overflow_6_fu_709_p2 = (xor_ln794_6_fu_703_p2 & p_Result_24_fu_695_p3);

assign overflow_7_fu_752_p2 = (xor_ln794_7_fu_746_p2 & p_Result_26_fu_738_p3);

assign overflow_8_fu_795_p2 = (xor_ln794_8_fu_789_p2 & p_Result_28_fu_781_p3);

assign overflow_9_fu_838_p2 = (xor_ln794_9_fu_832_p2 & p_Result_30_fu_824_p3);

assign overflow_fu_451_p2 = (xor_ln794_fu_445_p2 & p_Result_12_fu_437_p3);

assign p_Result_11_fu_429_p3 = ret_V_fu_423_p2[32'd16];

assign p_Result_12_fu_437_p3 = ret_V_fu_423_p2[32'd15];

assign p_Result_13_fu_472_p3 = ret_V_1_fu_466_p2[32'd16];

assign p_Result_14_fu_480_p3 = ret_V_1_fu_466_p2[32'd15];

assign p_Result_15_fu_515_p3 = ret_V_2_fu_509_p2[32'd16];

assign p_Result_16_fu_523_p3 = ret_V_2_fu_509_p2[32'd15];

assign p_Result_17_fu_558_p3 = ret_V_3_fu_552_p2[32'd16];

assign p_Result_18_fu_566_p3 = ret_V_3_fu_552_p2[32'd15];

assign p_Result_19_fu_601_p3 = ret_V_4_fu_595_p2[32'd16];

assign p_Result_20_fu_609_p3 = ret_V_4_fu_595_p2[32'd15];

assign p_Result_21_fu_644_p3 = ret_V_5_fu_638_p2[32'd16];

assign p_Result_22_fu_652_p3 = ret_V_5_fu_638_p2[32'd15];

assign p_Result_23_fu_687_p3 = ret_V_6_fu_681_p2[32'd16];

assign p_Result_24_fu_695_p3 = ret_V_6_fu_681_p2[32'd15];

assign p_Result_25_fu_730_p3 = ret_V_7_fu_724_p2[32'd16];

assign p_Result_26_fu_738_p3 = ret_V_7_fu_724_p2[32'd15];

assign p_Result_27_fu_773_p3 = ret_V_8_fu_767_p2[32'd16];

assign p_Result_28_fu_781_p3 = ret_V_8_fu_767_p2[32'd15];

assign p_Result_29_fu_816_p3 = ret_V_9_fu_810_p2[32'd16];

assign p_Result_30_fu_824_p3 = ret_V_9_fu_810_p2[32'd15];

assign ret_V_1_fu_466_p2 = ($signed(sext_ln1246_2_fu_463_p1) - $signed(sext_ln1246_1_fu_420_p1));

assign ret_V_2_fu_509_p2 = ($signed(sext_ln1246_3_fu_506_p1) - $signed(sext_ln1246_1_fu_420_p1));

assign ret_V_3_fu_552_p2 = ($signed(sext_ln1246_4_fu_549_p1) - $signed(sext_ln1246_1_fu_420_p1));

assign ret_V_4_fu_595_p2 = ($signed(sext_ln1246_5_fu_592_p1) - $signed(sext_ln1246_1_fu_420_p1));

assign ret_V_5_fu_638_p2 = ($signed(sext_ln1246_6_fu_635_p1) - $signed(sext_ln1246_1_fu_420_p1));

assign ret_V_6_fu_681_p2 = ($signed(sext_ln1246_7_fu_678_p1) - $signed(sext_ln1246_1_fu_420_p1));

assign ret_V_7_fu_724_p2 = ($signed(sext_ln1246_8_fu_721_p1) - $signed(sext_ln1246_1_fu_420_p1));

assign ret_V_8_fu_767_p2 = ($signed(sext_ln1246_9_fu_764_p1) - $signed(sext_ln1246_1_fu_420_p1));

assign ret_V_9_fu_810_p2 = ($signed(sext_ln1246_10_fu_807_p1) - $signed(sext_ln1246_1_fu_420_p1));

assign ret_V_fu_423_p2 = ($signed(sext_ln1246_fu_417_p1) - $signed(sext_ln1246_1_fu_420_p1));

assign select_ln384_1_fu_876_p3 = ((overflow_1_fu_494_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln384_2_fu_902_p3 = ((overflow_2_fu_537_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln384_3_fu_928_p3 = ((overflow_3_fu_580_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln384_4_fu_954_p3 = ((overflow_4_fu_623_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln384_5_fu_980_p3 = ((overflow_5_fu_666_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln384_6_fu_1006_p3 = ((overflow_6_fu_709_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln384_7_fu_1032_p3 = ((overflow_7_fu_752_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln384_8_fu_1058_p3 = ((overflow_8_fu_795_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln384_9_fu_1084_p3 = ((overflow_9_fu_838_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln384_fu_850_p3 = ((overflow_fu_451_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln65_1_fu_300_p3 = ((xor_ln1549_1_fu_295_p2[0:0] == 1'b1) ? p_read_8_reg_1503 : p_read_7_reg_1497);

assign select_ln65_2_fu_318_p3 = ((xor_ln1549_2_fu_312_p2[0:0] == 1'b1) ? select_ln65_fu_289_p3 : select_ln65_1_fu_300_p3);

assign select_ln65_3_fu_331_p3 = ((xor_ln1549_3_fu_326_p2[0:0] == 1'b1) ? p_read_6_reg_1491 : p_read_5_reg_1485);

assign select_ln65_4_fu_342_p3 = ((xor_ln1549_4_fu_337_p2[0:0] == 1'b1) ? p_read_4_reg_1479 : p_read_3_reg_1473);

assign select_ln65_5_fu_360_p3 = ((xor_ln1549_5_fu_354_p2[0:0] == 1'b1) ? select_ln65_3_fu_331_p3 : select_ln65_4_fu_342_p3);

assign select_ln65_6_fu_378_p3 = ((xor_ln1549_6_fu_372_p2[0:0] == 1'b1) ? select_ln65_2_reg_1541 : select_ln65_5_reg_1547);

assign select_ln65_7_fu_393_p3 = ((xor_ln1549_7_fu_388_p2[0:0] == 1'b1) ? p_read_2_reg_1466_pp0_iter2_reg : p_read_1_reg_1459_pp0_iter2_reg);

assign select_ln65_fu_289_p3 = ((xor_ln1549_fu_284_p2[0:0] == 1'b1) ? p_read_10_reg_1515 : p_read_9_reg_1509);

assign sext_ln1171_fu_1206_p1 = $signed(inv_exp_sum_V_reg_1757);

assign sext_ln1246_10_fu_807_p1 = p_read_1_reg_1459_pp0_iter3_reg;

assign sext_ln1246_1_fu_420_p1 = $signed(x_max_V_reg_1564);

assign sext_ln1246_2_fu_463_p1 = p_read_9_reg_1509_pp0_iter3_reg;

assign sext_ln1246_3_fu_506_p1 = p_read_8_reg_1503_pp0_iter3_reg;

assign sext_ln1246_4_fu_549_p1 = p_read_7_reg_1497_pp0_iter3_reg;

assign sext_ln1246_5_fu_592_p1 = p_read_6_reg_1491_pp0_iter3_reg;

assign sext_ln1246_6_fu_635_p1 = p_read_5_reg_1485_pp0_iter3_reg;

assign sext_ln1246_7_fu_678_p1 = p_read_4_reg_1479_pp0_iter3_reg;

assign sext_ln1246_8_fu_721_p1 = p_read_3_reg_1473_pp0_iter3_reg;

assign sext_ln1246_9_fu_764_p1 = p_read_2_reg_1466_pp0_iter3_reg;

assign sext_ln1246_fu_417_p1 = p_read_10_reg_1515_pp0_iter3_reg;

assign tmp_1_fu_884_p4 = {{ret_V_1_fu_466_p2[15:6]}};

assign tmp_2_fu_910_p4 = {{ret_V_2_fu_509_p2[15:6]}};

assign tmp_3_fu_936_p4 = {{ret_V_3_fu_552_p2[15:6]}};

assign tmp_4_fu_962_p4 = {{ret_V_4_fu_595_p2[15:6]}};

assign tmp_5_fu_988_p4 = {{ret_V_5_fu_638_p2[15:6]}};

assign tmp_6_fu_1014_p4 = {{ret_V_6_fu_681_p2[15:6]}};

assign tmp_7_fu_1040_p4 = {{ret_V_7_fu_724_p2[15:6]}};

assign tmp_8_fu_1066_p4 = {{ret_V_8_fu_767_p2[15:6]}};

assign tmp_9_fu_1092_p4 = {{ret_V_9_fu_810_p2[15:6]}};

assign tmp_fu_858_p4 = {{ret_V_fu_423_p2[15:6]}};

assign x_max_V_fu_410_p3 = ((xor_ln1549_8_fu_404_p2[0:0] == 1'b1) ? select_ln65_6_reg_1553 : select_ln65_7_fu_393_p3);

assign xor_ln1549_1_fu_295_p2 = (icmp_ln1549_1_reg_1526 ^ 1'd1);

assign xor_ln1549_2_fu_312_p2 = (icmp_ln1549_2_fu_306_p2 ^ 1'd1);

assign xor_ln1549_3_fu_326_p2 = (icmp_ln1549_3_reg_1531 ^ 1'd1);

assign xor_ln1549_4_fu_337_p2 = (icmp_ln1549_4_reg_1536 ^ 1'd1);

assign xor_ln1549_5_fu_354_p2 = (icmp_ln1549_5_fu_348_p2 ^ 1'd1);

assign xor_ln1549_6_fu_372_p2 = (icmp_ln1549_6_fu_368_p2 ^ 1'd1);

assign xor_ln1549_7_fu_388_p2 = (icmp_ln1549_7_reg_1559 ^ 1'd1);

assign xor_ln1549_8_fu_404_p2 = (icmp_ln1549_8_fu_399_p2 ^ 1'd1);

assign xor_ln1549_fu_284_p2 = (icmp_ln1549_reg_1521 ^ 1'd1);

assign xor_ln340_1_fu_500_p2 = (p_Result_14_fu_480_p3 ^ p_Result_13_fu_472_p3);

assign xor_ln340_2_fu_543_p2 = (p_Result_16_fu_523_p3 ^ p_Result_15_fu_515_p3);

assign xor_ln340_3_fu_586_p2 = (p_Result_18_fu_566_p3 ^ p_Result_17_fu_558_p3);

assign xor_ln340_4_fu_629_p2 = (p_Result_20_fu_609_p3 ^ p_Result_19_fu_601_p3);

assign xor_ln340_5_fu_672_p2 = (p_Result_22_fu_652_p3 ^ p_Result_21_fu_644_p3);

assign xor_ln340_6_fu_715_p2 = (p_Result_24_fu_695_p3 ^ p_Result_23_fu_687_p3);

assign xor_ln340_7_fu_758_p2 = (p_Result_26_fu_738_p3 ^ p_Result_25_fu_730_p3);

assign xor_ln340_8_fu_801_p2 = (p_Result_28_fu_781_p3 ^ p_Result_27_fu_773_p3);

assign xor_ln340_9_fu_844_p2 = (p_Result_30_fu_824_p3 ^ p_Result_29_fu_816_p3);

assign xor_ln340_fu_457_p2 = (p_Result_12_fu_437_p3 ^ p_Result_11_fu_429_p3);

assign xor_ln794_1_fu_488_p2 = (p_Result_13_fu_472_p3 ^ 1'd1);

assign xor_ln794_2_fu_531_p2 = (p_Result_15_fu_515_p3 ^ 1'd1);

assign xor_ln794_3_fu_574_p2 = (p_Result_17_fu_558_p3 ^ 1'd1);

assign xor_ln794_4_fu_617_p2 = (p_Result_19_fu_601_p3 ^ 1'd1);

assign xor_ln794_5_fu_660_p2 = (p_Result_21_fu_644_p3 ^ 1'd1);

assign xor_ln794_6_fu_703_p2 = (p_Result_23_fu_687_p3 ^ 1'd1);

assign xor_ln794_7_fu_746_p2 = (p_Result_25_fu_730_p3 ^ 1'd1);

assign xor_ln794_8_fu_789_p2 = (p_Result_27_fu_773_p3 ^ 1'd1);

assign xor_ln794_9_fu_832_p2 = (p_Result_29_fu_816_p3 ^ 1'd1);

assign xor_ln794_fu_445_p2 = (p_Result_11_fu_429_p3 ^ 1'd1);

assign y_1_fu_894_p3 = ((xor_ln340_1_fu_500_p2[0:0] == 1'b1) ? select_ln384_1_fu_876_p3 : tmp_1_fu_884_p4);

assign y_2_fu_920_p3 = ((xor_ln340_2_fu_543_p2[0:0] == 1'b1) ? select_ln384_2_fu_902_p3 : tmp_2_fu_910_p4);

assign y_3_fu_946_p3 = ((xor_ln340_3_fu_586_p2[0:0] == 1'b1) ? select_ln384_3_fu_928_p3 : tmp_3_fu_936_p4);

assign y_4_fu_972_p3 = ((xor_ln340_4_fu_629_p2[0:0] == 1'b1) ? select_ln384_4_fu_954_p3 : tmp_4_fu_962_p4);

assign y_5_fu_998_p3 = ((xor_ln340_5_fu_672_p2[0:0] == 1'b1) ? select_ln384_5_fu_980_p3 : tmp_5_fu_988_p4);

assign y_6_fu_1024_p3 = ((xor_ln340_6_fu_715_p2[0:0] == 1'b1) ? select_ln384_6_fu_1006_p3 : tmp_6_fu_1014_p4);

assign y_7_fu_1050_p3 = ((xor_ln340_7_fu_758_p2[0:0] == 1'b1) ? select_ln384_7_fu_1032_p3 : tmp_7_fu_1040_p4);

assign y_8_fu_1076_p3 = ((xor_ln340_8_fu_801_p2[0:0] == 1'b1) ? select_ln384_8_fu_1058_p3 : tmp_8_fu_1066_p4);

assign y_9_fu_1102_p3 = ((xor_ln340_9_fu_844_p2[0:0] == 1'b1) ? select_ln384_9_fu_1084_p3 : tmp_9_fu_1092_p4);

assign y_fu_868_p3 = ((xor_ln340_fu_457_p2[0:0] == 1'b1) ? select_ln384_fu_850_p3 : tmp_fu_858_p4);

assign zext_ln255_1_fu_1110_p1 = y_1_reg_1574;

assign zext_ln255_2_fu_1114_p1 = y_2_reg_1579;

assign zext_ln255_3_fu_1118_p1 = y_3_reg_1584;

assign zext_ln255_4_fu_1126_p1 = y_4_reg_1589_pp0_iter5_reg;

assign zext_ln255_5_fu_1130_p1 = y_5_reg_1594_pp0_iter5_reg;

assign zext_ln255_6_fu_1134_p1 = y_6_reg_1599_pp0_iter5_reg;

assign zext_ln255_7_fu_1138_p1 = y_7_reg_1604_pp0_iter5_reg;

assign zext_ln255_8_fu_1142_p1 = y_8_reg_1609_pp0_iter6_reg;

assign zext_ln255_9_fu_1146_p1 = y_9_reg_1614_pp0_iter6_reg;

assign zext_ln255_fu_1122_p1 = y_reg_1569_pp0_iter5_reg;

assign zext_ln265_fu_1202_p1 = y_10_reg_1747;

endmodule //myproject_softmax_stable_ap_fixed_ap_fixed_16_4_5_3_0_softmax_config13_s
