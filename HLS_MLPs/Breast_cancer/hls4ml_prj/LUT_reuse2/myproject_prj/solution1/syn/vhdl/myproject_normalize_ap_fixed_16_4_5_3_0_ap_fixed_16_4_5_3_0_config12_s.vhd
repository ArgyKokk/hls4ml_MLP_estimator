-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject_normalize_ap_fixed_16_4_5_3_0_ap_fixed_16_4_5_3_0_config12_s is
port (
    ap_ready : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (14 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (14 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of myproject_normalize_ap_fixed_16_4_5_3_0_ap_fixed_16_4_5_3_0_config12_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv28_3E0000 : STD_LOGIC_VECTOR (27 downto 0) := "0000001111100000000000000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv28_FC20000 : STD_LOGIC_VECTOR (27 downto 0) := "1111110000100000000000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal shl_ln_fu_48_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln1245_fu_56_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln1171_1_fu_72_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln1245_1_fu_80_p2 : STD_LOGIC_VECTOR (27 downto 0);


begin



    add_ln1245_1_fu_80_p2 <= std_logic_vector(unsigned(shl_ln1171_1_fu_72_p3) + unsigned(ap_const_lv28_FC20000));
    add_ln1245_fu_56_p2 <= std_logic_vector(unsigned(shl_ln_fu_48_p3) + unsigned(ap_const_lv28_3E0000));
    ap_ready <= ap_const_logic_1;
    ap_return_0 <= add_ln1245_fu_56_p2(27 downto 12);
    ap_return_1 <= add_ln1245_1_fu_80_p2(27 downto 12);
    shl_ln1171_1_fu_72_p3 <= (p_read1 & ap_const_lv13_0);
    shl_ln_fu_48_p3 <= (p_read & ap_const_lv13_0);
end behav;
