// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module myproject_dense_latency_ap_ufixed_8_0_4_0_0_ap_fixed_16_4_5_3_0_config5_s (
        ap_clk,
        ap_rst,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        ap_return_0,
        ap_return_1,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [7:0] p_read;
input  [7:0] p_read1;
input  [7:0] p_read2;
input  [7:0] p_read3;
input  [7:0] p_read4;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
input   ap_ce;

reg[15:0] ap_return_0;
reg[15:0] ap_return_1;

reg   [7:0] p_read_12_reg_746;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg   [7:0] p_read111_reg_752;
reg   [7:0] p_read_13_reg_759;
reg   [8:0] lshr_ln_reg_764;
reg   [11:0] trunc_ln1171_1_reg_769;
reg   [12:0] trunc_ln717_1_reg_774;
reg   [10:0] lshr_ln717_s_reg_779;
reg   [12:0] trunc_ln717_2_reg_784;
reg   [11:0] trunc_ln717_3_reg_789;
reg   [10:0] lshr_ln717_8_reg_794;
reg   [11:0] trunc_ln6_reg_799;
wire   [13:0] add_ln712_fu_652_p2;
reg   [13:0] add_ln712_reg_804;
wire   [12:0] add_ln712_3_fu_667_p2;
reg   [12:0] add_ln712_3_reg_809;
wire   [13:0] add_ln712_7_fu_683_p2;
reg   [13:0] add_ln712_7_reg_814;
wire   [7:0] mul_ln717_fu_108_p0;
wire   [4:0] mul_ln717_fu_108_p1;
wire    ap_block_pp0_stage0;
wire   [7:0] mul_ln1171_4_fu_110_p0;
wire   [6:0] mul_ln1171_4_fu_110_p1;
wire   [7:0] mul_ln1171_fu_111_p0;
wire   [6:0] mul_ln1171_fu_111_p1;
wire   [7:0] mul_ln1171_1_fu_112_p0;
wire  signed [6:0] mul_ln1171_1_fu_112_p1;
wire   [7:0] mul_ln1171_3_fu_113_p0;
wire  signed [7:0] mul_ln1171_3_fu_113_p1;
wire   [7:0] mul_ln1171_5_fu_114_p0;
wire  signed [7:0] mul_ln1171_5_fu_114_p1;
wire   [7:0] mul_ln1171_2_fu_117_p0;
wire   [7:0] mul_ln1171_2_fu_117_p1;
wire   [11:0] mul_ln717_fu_108_p2;
wire   [14:0] mul_ln1171_2_fu_117_p2;
wire   [15:0] mul_ln1171_3_fu_113_p2;
wire   [13:0] mul_ln1171_4_fu_110_p2;
wire   [15:0] mul_ln1171_5_fu_114_p2;
wire   [12:0] shl_ln1171_8_fu_487_p3;
wire   [13:0] zext_ln1171_15_fu_495_p1;
wire   [13:0] sub_ln1171_1_fu_499_p2;
wire  signed [14:0] sext_ln1171_4_fu_505_p1;
wire   [14:0] zext_ln1171_14_fu_473_p1;
wire   [14:0] sub_ln1171_2_fu_509_p2;
wire   [13:0] mul_ln1171_fu_111_p2;
wire   [13:0] shl_ln_fu_546_p3;
wire   [9:0] shl_ln1171_5_fu_557_p3;
wire   [14:0] zext_ln1171_7_fu_553_p1;
wire   [14:0] zext_ln1171_8_fu_564_p1;
wire   [14:0] add_ln1171_fu_568_p2;
wire   [11:0] trunc_ln_fu_574_p4;
wire   [14:0] mul_ln1171_1_fu_112_p2;
wire   [12:0] shl_ln1171_6_fu_598_p3;
wire   [10:0] shl_ln1171_7_fu_609_p3;
wire   [13:0] zext_ln1171_12_fu_616_p1;
wire   [13:0] zext_ln1171_11_fu_605_p1;
wire   [13:0] sub_ln1171_fu_620_p2;
wire   [10:0] trunc_ln717_s_fu_626_p4;
wire  signed [13:0] sext_ln1171_fu_640_p1;
wire  signed [13:0] sext_ln1171_3_fu_646_p1;
wire   [11:0] zext_ln717_1_fu_529_p1;
wire   [11:0] add_ln712_2_fu_658_p2;
wire   [12:0] zext_ln712_fu_663_p1;
wire   [12:0] zext_ln1171_9_fu_584_p1;
wire  signed [12:0] sext_ln712_fu_649_p1;
wire   [12:0] lshr_ln717_cast_fu_643_p1;
wire   [12:0] add_ln712_6_fu_673_p2;
wire  signed [13:0] sext_ln712_5_fu_679_p1;
wire  signed [13:0] trunc_ln717_cast_fu_636_p1;
wire   [14:0] zext_ln712_1_fu_698_p1;
wire  signed [14:0] sext_ln712_2_fu_695_p1;
wire   [14:0] add_ln712_4_fu_701_p2;
wire  signed [12:0] sext_ln1171_5_fu_692_p1;
wire   [12:0] zext_ln1171_16_fu_689_p1;
wire   [12:0] add_ln712_5_fu_711_p2;
wire  signed [14:0] sext_ln712_6_fu_721_p1;
wire  signed [14:0] sext_ln712_4_fu_717_p1;
wire   [14:0] add_ln712_8_fu_724_p2;
wire  signed [15:0] sext_ln712_3_fu_707_p1;
wire  signed [15:0] add_ln712_8_cast_fu_730_p1;
reg    ap_ce_reg;
reg   [7:0] p_read_int_reg;
reg   [7:0] p_read1_int_reg;
reg   [7:0] p_read2_int_reg;
reg   [7:0] p_read3_int_reg;
reg   [7:0] p_read4_int_reg;
reg   [15:0] ap_return_0_int_reg;
reg   [15:0] ap_return_1_int_reg;
wire   [14:0] mul_ln1171_1_fu_112_p00;
wire   [14:0] mul_ln1171_2_fu_117_p00;
wire   [15:0] mul_ln1171_3_fu_113_p00;
wire   [13:0] mul_ln1171_4_fu_110_p00;
wire   [15:0] mul_ln1171_5_fu_114_p00;
wire   [13:0] mul_ln1171_fu_111_p00;
wire   [11:0] mul_ln717_fu_108_p00;

myproject_mul_8ns_5ns_12_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 12 ))
mul_8ns_5ns_12_1_0_U39(
    .din0(mul_ln717_fu_108_p0),
    .din1(mul_ln717_fu_108_p1),
    .dout(mul_ln717_fu_108_p2)
);

myproject_mul_8ns_7ns_14_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 14 ))
mul_8ns_7ns_14_1_0_U40(
    .din0(mul_ln1171_4_fu_110_p0),
    .din1(mul_ln1171_4_fu_110_p1),
    .dout(mul_ln1171_4_fu_110_p2)
);

myproject_mul_8ns_7ns_14_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 14 ))
mul_8ns_7ns_14_1_0_U41(
    .din0(mul_ln1171_fu_111_p0),
    .din1(mul_ln1171_fu_111_p1),
    .dout(mul_ln1171_fu_111_p2)
);

myproject_mul_8ns_7s_15_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 15 ))
mul_8ns_7s_15_1_0_U42(
    .din0(mul_ln1171_1_fu_112_p0),
    .din1(mul_ln1171_1_fu_112_p1),
    .dout(mul_ln1171_1_fu_112_p2)
);

myproject_mul_8ns_8s_16_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8s_16_1_0_U43(
    .din0(mul_ln1171_3_fu_113_p0),
    .din1(mul_ln1171_3_fu_113_p1),
    .dout(mul_ln1171_3_fu_113_p2)
);

myproject_mul_8ns_8s_16_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8s_16_1_0_U44(
    .din0(mul_ln1171_5_fu_114_p0),
    .din1(mul_ln1171_5_fu_114_p1),
    .dout(mul_ln1171_5_fu_114_p2)
);

myproject_mul_8ns_8ns_15_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 15 ))
mul_8ns_8ns_15_1_0_U45(
    .din0(mul_ln1171_2_fu_117_p0),
    .din1(mul_ln1171_2_fu_117_p1),
    .dout(mul_ln1171_2_fu_117_p2)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        add_ln712_3_reg_809 <= add_ln712_3_fu_667_p2;
        add_ln712_7_reg_814 <= add_ln712_7_fu_683_p2;
        add_ln712_reg_804 <= add_ln712_fu_652_p2;
        lshr_ln717_8_reg_794 <= {{mul_ln1171_fu_111_p2[13:3]}};
        lshr_ln717_s_reg_779 <= {{mul_ln1171_4_fu_110_p2[13:3]}};
        lshr_ln_reg_764 <= {{mul_ln717_fu_108_p2[11:3]}};
        p_read111_reg_752 <= p_read1_int_reg;
        p_read_12_reg_746 <= p_read2_int_reg;
        p_read_13_reg_759 <= p_read_int_reg;
        trunc_ln1171_1_reg_769 <= {{mul_ln1171_2_fu_117_p2[14:3]}};
        trunc_ln6_reg_799 <= {{mul_ln1171_1_fu_112_p2[14:3]}};
        trunc_ln717_1_reg_774 <= {{mul_ln1171_3_fu_113_p2[15:3]}};
        trunc_ln717_2_reg_784 <= {{mul_ln1171_5_fu_114_p2[15:3]}};
        trunc_ln717_3_reg_789 <= {{sub_ln1171_2_fu_509_p2[14:3]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_0_int_reg <= sext_ln712_3_fu_707_p1;
        ap_return_1_int_reg <= add_ln712_8_cast_fu_730_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        p_read1_int_reg <= p_read1;
        p_read2_int_reg <= p_read2;
        p_read3_int_reg <= p_read3;
        p_read4_int_reg <= p_read4;
        p_read_int_reg <= p_read;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_0 = ap_return_0_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_0 = sext_ln712_3_fu_707_p1;
    end else begin
        ap_return_0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_1 = ap_return_1_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_1 = add_ln712_8_cast_fu_730_p1;
    end else begin
        ap_return_1 = 'bx;
    end
end

assign add_ln1171_fu_568_p2 = (zext_ln1171_7_fu_553_p1 + zext_ln1171_8_fu_564_p1);

assign add_ln712_2_fu_658_p2 = (zext_ln717_1_fu_529_p1 + trunc_ln1171_1_reg_769);

assign add_ln712_3_fu_667_p2 = (zext_ln712_fu_663_p1 + zext_ln1171_9_fu_584_p1);

assign add_ln712_4_fu_701_p2 = ($signed(zext_ln712_1_fu_698_p1) + $signed(sext_ln712_2_fu_695_p1));

assign add_ln712_5_fu_711_p2 = ($signed(sext_ln1171_5_fu_692_p1) + $signed(zext_ln1171_16_fu_689_p1));

assign add_ln712_6_fu_673_p2 = ($signed(sext_ln712_fu_649_p1) + $signed(lshr_ln717_cast_fu_643_p1));

assign add_ln712_7_fu_683_p2 = ($signed(sext_ln712_5_fu_679_p1) + $signed(trunc_ln717_cast_fu_636_p1));

assign add_ln712_8_cast_fu_730_p1 = $signed(add_ln712_8_fu_724_p2);

assign add_ln712_8_fu_724_p2 = ($signed(sext_ln712_6_fu_721_p1) + $signed(sext_ln712_4_fu_717_p1));

assign add_ln712_fu_652_p2 = ($signed(sext_ln1171_fu_640_p1) + $signed(sext_ln1171_3_fu_646_p1));

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign lshr_ln717_cast_fu_643_p1 = lshr_ln717_s_reg_779;

assign mul_ln1171_1_fu_112_p0 = mul_ln1171_1_fu_112_p00;

assign mul_ln1171_1_fu_112_p00 = p_read111_reg_752;

assign mul_ln1171_1_fu_112_p1 = 15'd32722;

assign mul_ln1171_2_fu_117_p0 = mul_ln1171_2_fu_117_p00;

assign mul_ln1171_2_fu_117_p00 = p_read2_int_reg;

assign mul_ln1171_2_fu_117_p1 = 15'd100;

assign mul_ln1171_3_fu_113_p0 = mul_ln1171_3_fu_113_p00;

assign mul_ln1171_3_fu_113_p00 = p_read3_int_reg;

assign mul_ln1171_3_fu_113_p1 = 16'd65437;

assign mul_ln1171_4_fu_110_p0 = mul_ln1171_4_fu_110_p00;

assign mul_ln1171_4_fu_110_p00 = p_read3_int_reg;

assign mul_ln1171_4_fu_110_p1 = 14'd44;

assign mul_ln1171_5_fu_114_p0 = mul_ln1171_5_fu_114_p00;

assign mul_ln1171_5_fu_114_p00 = p_read4_int_reg;

assign mul_ln1171_5_fu_114_p1 = 16'd65469;

assign mul_ln1171_fu_111_p0 = mul_ln1171_fu_111_p00;

assign mul_ln1171_fu_111_p00 = p_read_13_reg_759;

assign mul_ln1171_fu_111_p1 = 14'd59;

assign mul_ln717_fu_108_p0 = mul_ln717_fu_108_p00;

assign mul_ln717_fu_108_p00 = p_read_int_reg;

assign mul_ln717_fu_108_p1 = 12'd11;

assign sext_ln1171_3_fu_646_p1 = $signed(trunc_ln717_2_reg_784);

assign sext_ln1171_4_fu_505_p1 = $signed(sub_ln1171_1_fu_499_p2);

assign sext_ln1171_5_fu_692_p1 = $signed(trunc_ln6_reg_799);

assign sext_ln1171_fu_640_p1 = $signed(trunc_ln717_1_reg_774);

assign sext_ln712_2_fu_695_p1 = $signed(add_ln712_reg_804);

assign sext_ln712_3_fu_707_p1 = $signed(add_ln712_4_fu_701_p2);

assign sext_ln712_4_fu_717_p1 = $signed(add_ln712_5_fu_711_p2);

assign sext_ln712_5_fu_679_p1 = $signed(add_ln712_6_fu_673_p2);

assign sext_ln712_6_fu_721_p1 = $signed(add_ln712_7_reg_814);

assign sext_ln712_fu_649_p1 = $signed(trunc_ln717_3_reg_789);

assign shl_ln1171_5_fu_557_p3 = {{p_read111_reg_752}, {2'd0}};

assign shl_ln1171_6_fu_598_p3 = {{p_read_12_reg_746}, {5'd0}};

assign shl_ln1171_7_fu_609_p3 = {{p_read_12_reg_746}, {3'd0}};

assign shl_ln1171_8_fu_487_p3 = {{p_read4_int_reg}, {5'd0}};

assign shl_ln_fu_546_p3 = {{p_read111_reg_752}, {6'd0}};

assign sub_ln1171_1_fu_499_p2 = (14'd0 - zext_ln1171_15_fu_495_p1);

assign sub_ln1171_2_fu_509_p2 = ($signed(sext_ln1171_4_fu_505_p1) - $signed(zext_ln1171_14_fu_473_p1));

assign sub_ln1171_fu_620_p2 = (zext_ln1171_12_fu_616_p1 - zext_ln1171_11_fu_605_p1);

assign trunc_ln717_cast_fu_636_p1 = $signed(trunc_ln717_s_fu_626_p4);

assign trunc_ln717_s_fu_626_p4 = {{sub_ln1171_fu_620_p2[13:3]}};

assign trunc_ln_fu_574_p4 = {{add_ln1171_fu_568_p2[14:3]}};

assign zext_ln1171_11_fu_605_p1 = shl_ln1171_6_fu_598_p3;

assign zext_ln1171_12_fu_616_p1 = shl_ln1171_7_fu_609_p3;

assign zext_ln1171_14_fu_473_p1 = p_read4_int_reg;

assign zext_ln1171_15_fu_495_p1 = shl_ln1171_8_fu_487_p3;

assign zext_ln1171_16_fu_689_p1 = lshr_ln717_8_reg_794;

assign zext_ln1171_7_fu_553_p1 = shl_ln_fu_546_p3;

assign zext_ln1171_8_fu_564_p1 = shl_ln1171_5_fu_557_p3;

assign zext_ln1171_9_fu_584_p1 = trunc_ln_fu_574_p4;

assign zext_ln712_1_fu_698_p1 = add_ln712_3_reg_809;

assign zext_ln712_fu_663_p1 = add_ln712_2_fu_658_p2;

assign zext_ln717_1_fu_529_p1 = lshr_ln_reg_764;

endmodule //myproject_dense_latency_ap_ufixed_8_0_4_0_0_ap_fixed_16_4_5_3_0_config5_s
