// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module myproject_relu_ap_fixed_16_4_5_3_0_ap_ufixed_8_0_4_0_0_relu_config4_s (
        ap_clk,
        ap_rst,
        p_read,
        p_read1,
        p_read2,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [15:0] p_read;
input  [15:0] p_read1;
input  [15:0] p_read2;
output  [7:0] ap_return_0;
output  [7:0] ap_return_1;
output  [7:0] ap_return_2;
input   ap_ce;

reg[7:0] ap_return_0;
reg[7:0] ap_return_1;
reg[7:0] ap_return_2;

reg   [15:0] p_read_4_reg_467;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [15:0] p_read14_reg_473;
reg   [15:0] p_read_5_reg_479;
wire   [7:0] add_ln415_fu_120_p2;
reg   [7:0] add_ln415_reg_485;
wire   [0:0] icmp_ln1049_fu_136_p2;
reg   [0:0] icmp_ln1049_reg_491;
wire   [0:0] icmp_ln777_fu_142_p2;
reg   [0:0] icmp_ln777_reg_496;
wire   [7:0] add_ln415_1_fu_200_p2;
reg   [7:0] add_ln415_1_reg_502;
wire   [0:0] icmp_ln1049_1_fu_216_p2;
reg   [0:0] icmp_ln1049_1_reg_508;
wire   [0:0] icmp_ln777_1_fu_222_p2;
reg   [0:0] icmp_ln777_1_reg_513;
wire   [7:0] add_ln415_2_fu_280_p2;
reg   [7:0] add_ln415_2_reg_519;
wire   [0:0] icmp_ln1049_2_fu_296_p2;
reg   [0:0] icmp_ln1049_2_reg_525;
wire   [0:0] icmp_ln777_2_fu_302_p2;
reg   [0:0] icmp_ln777_2_reg_530;
wire    ap_block_pp0_stage0;
wire   [2:0] trunc_ln727_fu_94_p1;
wire   [0:0] tmp_fu_78_p3;
wire   [0:0] icmp_ln727_fu_98_p2;
wire   [0:0] or_ln412_fu_104_p2;
wire   [0:0] tmp_9_fu_86_p3;
wire   [0:0] and_ln412_fu_110_p2;
wire   [7:0] trunc_ln1_fu_68_p4;
wire   [7:0] zext_ln415_fu_116_p1;
wire   [3:0] p_Result_s_fu_126_p4;
wire   [2:0] trunc_ln727_1_fu_174_p1;
wire   [0:0] tmp_12_fu_158_p3;
wire   [0:0] icmp_ln727_1_fu_178_p2;
wire   [0:0] or_ln412_1_fu_184_p2;
wire   [0:0] tmp_13_fu_166_p3;
wire   [0:0] and_ln412_1_fu_190_p2;
wire   [7:0] trunc_ln717_3_fu_148_p4;
wire   [7:0] zext_ln415_1_fu_196_p1;
wire   [3:0] p_Result_34_1_fu_206_p4;
wire   [2:0] trunc_ln727_2_fu_254_p1;
wire   [0:0] tmp_16_fu_238_p3;
wire   [0:0] icmp_ln727_2_fu_258_p2;
wire   [0:0] or_ln412_2_fu_264_p2;
wire   [0:0] tmp_17_fu_246_p3;
wire   [0:0] and_ln412_2_fu_270_p2;
wire   [7:0] trunc_ln717_4_fu_228_p4;
wire   [7:0] zext_ln415_2_fu_276_p1;
wire   [3:0] p_Result_34_2_fu_286_p4;
wire   [0:0] tmp_11_fu_320_p3;
wire   [0:0] tmp_10_fu_313_p3;
wire   [0:0] select_ln787_fu_327_p3;
wire   [0:0] select_ln403_fu_333_p3;
wire   [0:0] icmp_ln1547_fu_308_p2;
wire   [7:0] select_ln394_fu_340_p3;
wire   [0:0] tmp_15_fu_367_p3;
wire   [0:0] tmp_14_fu_360_p3;
wire   [0:0] select_ln787_1_fu_374_p3;
wire   [0:0] select_ln403_1_fu_380_p3;
wire   [0:0] icmp_ln1547_1_fu_355_p2;
wire   [7:0] select_ln394_1_fu_387_p3;
wire   [0:0] tmp_19_fu_414_p3;
wire   [0:0] tmp_18_fu_407_p3;
wire   [0:0] select_ln787_2_fu_421_p3;
wire   [0:0] select_ln403_2_fu_427_p3;
wire   [0:0] icmp_ln1547_2_fu_402_p2;
wire   [7:0] select_ln394_2_fu_434_p3;
wire   [7:0] select_ln1547_fu_347_p3;
wire   [7:0] select_ln1547_1_fu_394_p3;
wire   [7:0] select_ln1547_2_fu_441_p3;
reg    ap_ce_reg;
reg   [7:0] ap_return_0_int_reg;
reg   [7:0] ap_return_1_int_reg;
reg   [7:0] ap_return_2_int_reg;

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if (((1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln415_1_reg_502 <= add_ln415_1_fu_200_p2;
        add_ln415_2_reg_519 <= add_ln415_2_fu_280_p2;
        add_ln415_reg_485 <= add_ln415_fu_120_p2;
        icmp_ln1049_1_reg_508 <= icmp_ln1049_1_fu_216_p2;
        icmp_ln1049_2_reg_525 <= icmp_ln1049_2_fu_296_p2;
        icmp_ln1049_reg_491 <= icmp_ln1049_fu_136_p2;
        icmp_ln777_1_reg_513 <= icmp_ln777_1_fu_222_p2;
        icmp_ln777_2_reg_530 <= icmp_ln777_2_fu_302_p2;
        icmp_ln777_reg_496 <= icmp_ln777_fu_142_p2;
        p_read14_reg_473 <= p_read1;
        p_read_4_reg_467 <= p_read2;
        p_read_5_reg_479 <= p_read;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_0_int_reg <= select_ln1547_fu_347_p3;
        ap_return_1_int_reg <= select_ln1547_1_fu_394_p3;
        ap_return_2_int_reg <= select_ln1547_2_fu_441_p3;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_0 = ap_return_0_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_0 = select_ln1547_fu_347_p3;
    end else begin
        ap_return_0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_1 = ap_return_1_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_1 = select_ln1547_1_fu_394_p3;
    end else begin
        ap_return_1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_2 = ap_return_2_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_2 = select_ln1547_2_fu_441_p3;
    end else begin
        ap_return_2 = 'bx;
    end
end

assign add_ln415_1_fu_200_p2 = (trunc_ln717_3_fu_148_p4 + zext_ln415_1_fu_196_p1);

assign add_ln415_2_fu_280_p2 = (trunc_ln717_4_fu_228_p4 + zext_ln415_2_fu_276_p1);

assign add_ln415_fu_120_p2 = (trunc_ln1_fu_68_p4 + zext_ln415_fu_116_p1);

assign and_ln412_1_fu_190_p2 = (tmp_13_fu_166_p3 & or_ln412_1_fu_184_p2);

assign and_ln412_2_fu_270_p2 = (tmp_17_fu_246_p3 & or_ln412_2_fu_264_p2);

assign and_ln412_fu_110_p2 = (tmp_9_fu_86_p3 & or_ln412_fu_104_p2);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign icmp_ln1049_1_fu_216_p2 = ((p_Result_34_1_fu_206_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln1049_2_fu_296_p2 = ((p_Result_34_2_fu_286_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln1049_fu_136_p2 = ((p_Result_s_fu_126_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln1547_1_fu_355_p2 = (($signed(p_read14_reg_473) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1547_2_fu_402_p2 = (($signed(p_read_4_reg_467) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1547_fu_308_p2 = (($signed(p_read_5_reg_479) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln727_1_fu_178_p2 = ((trunc_ln727_1_fu_174_p1 != 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln727_2_fu_258_p2 = ((trunc_ln727_2_fu_254_p1 != 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln727_fu_98_p2 = ((trunc_ln727_fu_94_p1 != 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln777_1_fu_222_p2 = ((p_Result_34_1_fu_206_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln777_2_fu_302_p2 = ((p_Result_34_2_fu_286_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln777_fu_142_p2 = ((p_Result_s_fu_126_p4 == 4'd0) ? 1'b1 : 1'b0);

assign or_ln412_1_fu_184_p2 = (tmp_12_fu_158_p3 | icmp_ln727_1_fu_178_p2);

assign or_ln412_2_fu_264_p2 = (tmp_16_fu_238_p3 | icmp_ln727_2_fu_258_p2);

assign or_ln412_fu_104_p2 = (tmp_fu_78_p3 | icmp_ln727_fu_98_p2);

assign p_Result_34_1_fu_206_p4 = {{p_read1[15:12]}};

assign p_Result_34_2_fu_286_p4 = {{p_read2[15:12]}};

assign p_Result_s_fu_126_p4 = {{p_read[15:12]}};

assign select_ln1547_1_fu_394_p3 = ((icmp_ln1547_1_fu_355_p2[0:0] == 1'b1) ? select_ln394_1_fu_387_p3 : 8'd0);

assign select_ln1547_2_fu_441_p3 = ((icmp_ln1547_2_fu_402_p2[0:0] == 1'b1) ? select_ln394_2_fu_434_p3 : 8'd0);

assign select_ln1547_fu_347_p3 = ((icmp_ln1547_fu_308_p2[0:0] == 1'b1) ? select_ln394_fu_340_p3 : 8'd0);

assign select_ln394_1_fu_387_p3 = ((select_ln403_1_fu_380_p3[0:0] == 1'b1) ? add_ln415_1_reg_502 : 8'd255);

assign select_ln394_2_fu_434_p3 = ((select_ln403_2_fu_427_p3[0:0] == 1'b1) ? add_ln415_2_reg_519 : 8'd255);

assign select_ln394_fu_340_p3 = ((select_ln403_fu_333_p3[0:0] == 1'b1) ? add_ln415_reg_485 : 8'd255);

assign select_ln403_1_fu_380_p3 = ((tmp_14_fu_360_p3[0:0] == 1'b1) ? select_ln787_1_fu_374_p3 : icmp_ln777_1_reg_513);

assign select_ln403_2_fu_427_p3 = ((tmp_18_fu_407_p3[0:0] == 1'b1) ? select_ln787_2_fu_421_p3 : icmp_ln777_2_reg_530);

assign select_ln403_fu_333_p3 = ((tmp_10_fu_313_p3[0:0] == 1'b1) ? select_ln787_fu_327_p3 : icmp_ln777_reg_496);

assign select_ln787_1_fu_374_p3 = ((tmp_15_fu_367_p3[0:0] == 1'b1) ? icmp_ln777_1_reg_513 : icmp_ln1049_1_reg_508);

assign select_ln787_2_fu_421_p3 = ((tmp_19_fu_414_p3[0:0] == 1'b1) ? icmp_ln777_2_reg_530 : icmp_ln1049_2_reg_525);

assign select_ln787_fu_327_p3 = ((tmp_11_fu_320_p3[0:0] == 1'b1) ? icmp_ln777_reg_496 : icmp_ln1049_reg_491);

assign tmp_10_fu_313_p3 = p_read_5_reg_479[32'd11];

assign tmp_11_fu_320_p3 = add_ln415_reg_485[32'd7];

assign tmp_12_fu_158_p3 = p_read1[32'd4];

assign tmp_13_fu_166_p3 = p_read1[32'd3];

assign tmp_14_fu_360_p3 = p_read14_reg_473[32'd11];

assign tmp_15_fu_367_p3 = add_ln415_1_reg_502[32'd7];

assign tmp_16_fu_238_p3 = p_read2[32'd4];

assign tmp_17_fu_246_p3 = p_read2[32'd3];

assign tmp_18_fu_407_p3 = p_read_4_reg_467[32'd11];

assign tmp_19_fu_414_p3 = add_ln415_2_reg_519[32'd7];

assign tmp_9_fu_86_p3 = p_read[32'd3];

assign tmp_fu_78_p3 = p_read[32'd4];

assign trunc_ln1_fu_68_p4 = {{p_read[11:4]}};

assign trunc_ln717_3_fu_148_p4 = {{p_read1[11:4]}};

assign trunc_ln717_4_fu_228_p4 = {{p_read2[11:4]}};

assign trunc_ln727_1_fu_174_p1 = p_read1[2:0];

assign trunc_ln727_2_fu_254_p1 = p_read2[2:0];

assign trunc_ln727_fu_94_p1 = p_read[2:0];

assign zext_ln415_1_fu_196_p1 = and_ln412_1_fu_190_p2;

assign zext_ln415_2_fu_276_p1 = and_ln412_2_fu_270_p2;

assign zext_ln415_fu_116_p1 = and_ln412_fu_110_p2;

endmodule //myproject_relu_ap_fixed_16_4_5_3_0_ap_ufixed_8_0_4_0_0_relu_config4_s
