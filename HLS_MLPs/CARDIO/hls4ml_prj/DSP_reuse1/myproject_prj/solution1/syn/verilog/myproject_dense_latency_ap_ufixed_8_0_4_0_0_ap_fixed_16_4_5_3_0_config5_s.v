// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module myproject_dense_latency_ap_ufixed_8_0_4_0_0_ap_fixed_16_4_5_3_0_config5_s (
        ap_clk,
        ap_rst,
        p_read,
        p_read1,
        p_read2,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [7:0] p_read;
input  [7:0] p_read1;
input  [7:0] p_read2;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;
input   ap_ce;

reg[15:0] ap_return_0;
reg[15:0] ap_return_1;
reg[15:0] ap_return_2;

reg   [7:0] p_read25_reg_474;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
reg   [7:0] p_read25_reg_474_pp0_iter1_reg;
reg   [7:0] p_read14_reg_481;
reg   [7:0] p_read14_reg_481_pp0_iter1_reg;
reg   [7:0] p_read_6_reg_487;
reg   [7:0] p_read_6_reg_487_pp0_iter1_reg;
reg   [10:0] trunc_ln_reg_498;
reg   [10:0] trunc_ln717_5_reg_503;
reg   [10:0] trunc_ln717_6_reg_508;
reg   [10:0] trunc_ln717_7_reg_513;
reg   [10:0] trunc_ln717_8_reg_518;
reg   [10:0] trunc_ln3_reg_523;
reg   [10:0] trunc_ln712_1_reg_528;
reg   [9:0] trunc_ln712_2_reg_533;
reg   [10:0] trunc_ln4_reg_538;
wire   [11:0] add_ln740_3_fu_352_p2;
reg   [11:0] add_ln740_3_reg_543;
wire   [11:0] add_ln740_4_fu_358_p2;
reg   [11:0] add_ln740_4_reg_548;
wire   [11:0] add_ln740_5_fu_364_p2;
reg   [11:0] add_ln740_5_reg_553;
wire   [11:0] add_ln740_6_fu_370_p2;
reg   [11:0] add_ln740_6_reg_558;
wire   [11:0] add_ln740_7_fu_376_p2;
reg   [11:0] add_ln740_7_reg_563;
wire   [11:0] add_ln740_8_fu_382_p2;
reg   [11:0] add_ln740_8_reg_568;
wire   [7:0] grp_fu_83_p0;
wire   [7:0] grp_fu_83_p1;
wire    ap_block_pp0_stage0;
wire   [14:0] shl_ln_fu_137_p3;
wire   [15:0] zext_ln1171_fu_144_p1;
wire   [15:0] r_V_0_fu_134_p1;
wire   [15:0] sub_ln1171_7_fu_154_p2;
wire   [15:0] sub_ln1171_1_fu_170_p2;
wire   [14:0] shl_ln1171_1_fu_189_p3;
wire   [15:0] zext_ln1171_2_fu_196_p1;
wire   [15:0] sub_ln1171_2_fu_200_p2;
wire   [15:0] r_V_1_fu_186_p1;
wire   [14:0] shl_ln1171_2_fu_225_p3;
wire   [8:0] shl_ln1171_3_fu_236_p3;
wire   [15:0] zext_ln1171_4_fu_243_p1;
wire   [15:0] zext_ln1171_3_fu_232_p1;
wire   [15:0] sub_ln1171_4_fu_247_p2;
wire   [15:0] sub_ln1171_5_fu_263_p2;
wire   [15:0] r_V_2_fu_222_p1;
wire   [15:0] sub_ln1171_fu_148_p2;
wire   [15:0] sub_ln1171_3_fu_216_p2;
wire   [14:0] grp_fu_83_p2;
wire   [15:0] sub_ln1171_6_fu_279_p2;
wire  signed [11:0] sext_ln712_2_fu_334_p1;
wire  signed [11:0] sext_ln712_3_fu_343_p1;
wire   [11:0] zext_ln712_fu_325_p1;
wire  signed [11:0] sext_ln712_fu_328_p1;
wire  signed [11:0] sext_ln712_4_fu_346_p1;
wire   [11:0] zext_ln712_1_fu_337_p1;
wire  signed [11:0] sext_ln712_1_fu_331_p1;
wire   [11:0] zext_ln712_2_fu_340_p1;
wire   [11:0] zext_ln740_fu_349_p1;
wire   [13:0] zext_ln740_1_fu_391_p1;
wire  signed [13:0] sext_ln740_fu_388_p1;
wire   [13:0] add_ln740_fu_394_p2;
wire  signed [12:0] sext_ln740_2_fu_411_p1;
wire  signed [12:0] sext_ln740_1_fu_408_p1;
wire   [12:0] add_ln740_1_fu_414_p2;
wire   [14:0] tmp_1_fu_420_p3;
wire   [12:0] zext_ln740_2_fu_435_p1;
wire  signed [12:0] sext_ln740_4_fu_432_p1;
wire   [12:0] add_ln740_2_fu_438_p2;
wire   [14:0] tmp_2_fu_444_p3;
wire   [15:0] shl_ln1_fu_400_p3;
wire  signed [15:0] sext_ln740_3_fu_428_p1;
wire  signed [15:0] sext_ln740_5_fu_452_p1;
reg    grp_fu_83_ce;
reg    ap_ce_reg;
reg   [7:0] p_read_int_reg;
reg   [7:0] p_read1_int_reg;
reg   [7:0] p_read2_int_reg;
reg   [15:0] ap_return_0_int_reg;
reg   [15:0] ap_return_1_int_reg;
reg   [15:0] ap_return_2_int_reg;
wire   [14:0] grp_fu_83_p00;

myproject_mul_8ns_8ns_15_3_0 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 15 ))
mul_8ns_8ns_15_3_0_U44(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_83_p0),
    .din1(grp_fu_83_p1),
    .ce(grp_fu_83_ce),
    .dout(grp_fu_83_p2)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        add_ln740_3_reg_543 <= add_ln740_3_fu_352_p2;
        add_ln740_4_reg_548 <= add_ln740_4_fu_358_p2;
        add_ln740_5_reg_553 <= add_ln740_5_fu_364_p2;
        add_ln740_6_reg_558 <= add_ln740_6_fu_370_p2;
        add_ln740_7_reg_563[11 : 2] <= add_ln740_7_fu_376_p2[11 : 2];
        add_ln740_8_reg_568 <= add_ln740_8_fu_382_p2;
        p_read14_reg_481 <= p_read1_int_reg;
        p_read14_reg_481_pp0_iter1_reg <= p_read14_reg_481;
        p_read25_reg_474 <= p_read2_int_reg;
        p_read25_reg_474_pp0_iter1_reg <= p_read25_reg_474;
        p_read_6_reg_487 <= p_read_int_reg;
        p_read_6_reg_487_pp0_iter1_reg <= p_read_6_reg_487;
        trunc_ln3_reg_523 <= {{sub_ln1171_fu_148_p2[15:5]}};
        trunc_ln4_reg_538 <= {{sub_ln1171_6_fu_279_p2[15:5]}};
        trunc_ln712_1_reg_528 <= {{sub_ln1171_3_fu_216_p2[15:5]}};
        trunc_ln712_2_reg_533 <= {{grp_fu_83_p2[14:5]}};
        trunc_ln717_5_reg_503 <= {{sub_ln1171_1_fu_170_p2[15:5]}};
        trunc_ln717_6_reg_508 <= {{sub_ln1171_2_fu_200_p2[15:5]}};
        trunc_ln717_7_reg_513 <= {{sub_ln1171_4_fu_247_p2[15:5]}};
        trunc_ln717_8_reg_518 <= {{sub_ln1171_5_fu_263_p2[15:5]}};
        trunc_ln_reg_498 <= {{sub_ln1171_7_fu_154_p2[15:5]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_0_int_reg[15 : 2] <= shl_ln1_fu_400_p3[15 : 2];
        ap_return_1_int_reg[15 : 2] <= sext_ln740_3_fu_428_p1[15 : 2];
        ap_return_2_int_reg[15 : 2] <= sext_ln740_5_fu_452_p1[15 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        p_read1_int_reg <= p_read1;
        p_read2_int_reg <= p_read2;
        p_read_int_reg <= p_read;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_0 = ap_return_0_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_0 = shl_ln1_fu_400_p3;
    end else begin
        ap_return_0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_1 = ap_return_1_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_1 = sext_ln740_3_fu_428_p1;
    end else begin
        ap_return_1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_2 = ap_return_2_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_2 = sext_ln740_5_fu_452_p1;
    end else begin
        ap_return_2 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_83_ce = 1'b1;
    end else begin
        grp_fu_83_ce = 1'b0;
    end
end

assign add_ln740_1_fu_414_p2 = ($signed(sext_ln740_2_fu_411_p1) + $signed(sext_ln740_1_fu_408_p1));

assign add_ln740_2_fu_438_p2 = ($signed(zext_ln740_2_fu_435_p1) + $signed(sext_ln740_4_fu_432_p1));

assign add_ln740_3_fu_352_p2 = ($signed(sext_ln712_2_fu_334_p1) + $signed(sext_ln712_3_fu_343_p1));

assign add_ln740_4_fu_358_p2 = (zext_ln712_fu_325_p1 + 12'd936);

assign add_ln740_5_fu_364_p2 = ($signed(sext_ln712_fu_328_p1) + $signed(sext_ln712_4_fu_346_p1));

assign add_ln740_6_fu_370_p2 = ($signed(zext_ln712_1_fu_337_p1) + $signed(12'd3720));

assign add_ln740_7_fu_376_p2 = ($signed(sext_ln712_1_fu_331_p1) + $signed(12'd3072));

assign add_ln740_8_fu_382_p2 = (zext_ln712_2_fu_340_p1 + zext_ln740_fu_349_p1);

assign add_ln740_fu_394_p2 = ($signed(zext_ln740_1_fu_391_p1) + $signed(sext_ln740_fu_388_p1));

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign grp_fu_83_p0 = grp_fu_83_p00;

assign grp_fu_83_p00 = p_read1_int_reg;

assign grp_fu_83_p1 = 15'd122;

assign r_V_0_fu_134_p1 = p_read_6_reg_487_pp0_iter1_reg;

assign r_V_1_fu_186_p1 = p_read14_reg_481_pp0_iter1_reg;

assign r_V_2_fu_222_p1 = p_read25_reg_474_pp0_iter1_reg;

assign sext_ln712_1_fu_331_p1 = $signed(trunc_ln717_5_reg_503);

assign sext_ln712_2_fu_334_p1 = $signed(trunc_ln717_6_reg_508);

assign sext_ln712_3_fu_343_p1 = $signed(trunc_ln717_7_reg_513);

assign sext_ln712_4_fu_346_p1 = $signed(trunc_ln717_8_reg_518);

assign sext_ln712_fu_328_p1 = $signed(trunc_ln_reg_498);

assign sext_ln740_1_fu_408_p1 = $signed(add_ln740_5_reg_553);

assign sext_ln740_2_fu_411_p1 = $signed(add_ln740_6_reg_558);

assign sext_ln740_3_fu_428_p1 = $signed(tmp_1_fu_420_p3);

assign sext_ln740_4_fu_432_p1 = $signed(add_ln740_7_reg_563);

assign sext_ln740_5_fu_452_p1 = $signed(tmp_2_fu_444_p3);

assign sext_ln740_fu_388_p1 = $signed(add_ln740_3_reg_543);

assign shl_ln1171_1_fu_189_p3 = {{p_read14_reg_481_pp0_iter1_reg}, {7'd0}};

assign shl_ln1171_2_fu_225_p3 = {{p_read25_reg_474_pp0_iter1_reg}, {7'd0}};

assign shl_ln1171_3_fu_236_p3 = {{p_read25_reg_474_pp0_iter1_reg}, {1'd0}};

assign shl_ln1_fu_400_p3 = {{add_ln740_fu_394_p2}, {2'd0}};

assign shl_ln_fu_137_p3 = {{p_read_6_reg_487_pp0_iter1_reg}, {7'd0}};

assign sub_ln1171_1_fu_170_p2 = (16'd0 - zext_ln1171_fu_144_p1);

assign sub_ln1171_2_fu_200_p2 = (16'd0 - zext_ln1171_2_fu_196_p1);

assign sub_ln1171_3_fu_216_p2 = (zext_ln1171_2_fu_196_p1 - r_V_1_fu_186_p1);

assign sub_ln1171_4_fu_247_p2 = (zext_ln1171_4_fu_243_p1 - zext_ln1171_3_fu_232_p1);

assign sub_ln1171_5_fu_263_p2 = (16'd0 - zext_ln1171_3_fu_232_p1);

assign sub_ln1171_6_fu_279_p2 = (zext_ln1171_3_fu_232_p1 - r_V_2_fu_222_p1);

assign sub_ln1171_7_fu_154_p2 = (r_V_0_fu_134_p1 - zext_ln1171_fu_144_p1);

assign sub_ln1171_fu_148_p2 = (zext_ln1171_fu_144_p1 - r_V_0_fu_134_p1);

assign tmp_1_fu_420_p3 = {{add_ln740_1_fu_414_p2}, {2'd0}};

assign tmp_2_fu_444_p3 = {{add_ln740_2_fu_438_p2}, {2'd0}};

assign zext_ln1171_2_fu_196_p1 = shl_ln1171_1_fu_189_p3;

assign zext_ln1171_3_fu_232_p1 = shl_ln1171_2_fu_225_p3;

assign zext_ln1171_4_fu_243_p1 = shl_ln1171_3_fu_236_p3;

assign zext_ln1171_fu_144_p1 = shl_ln_fu_137_p3;

assign zext_ln712_1_fu_337_p1 = trunc_ln712_1_reg_528;

assign zext_ln712_2_fu_340_p1 = trunc_ln712_2_reg_533;

assign zext_ln712_fu_325_p1 = trunc_ln3_reg_523;

assign zext_ln740_1_fu_391_p1 = add_ln740_4_reg_548;

assign zext_ln740_2_fu_435_p1 = add_ln740_8_reg_568;

assign zext_ln740_fu_349_p1 = trunc_ln4_reg_538;

always @ (posedge ap_clk) begin
    add_ln740_7_reg_563[1:0] <= 2'b00;
    ap_return_0_int_reg[1:0] <= 2'b00;
    ap_return_1_int_reg[1:0] <= 2'b00;
    ap_return_2_int_reg[1:0] <= 2'b00;
end

endmodule //myproject_dense_latency_ap_ufixed_8_0_4_0_0_ap_fixed_16_4_5_3_0_config5_s
