-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject_dense_latency_ap_ufixed_8_0_4_0_0_ap_fixed_16_4_5_3_0_config5_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of myproject_dense_latency_ap_ufixed_8_0_4_0_0_ap_fixed_16_4_5_3_0_config5_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv15_7A : STD_LOGIC_VECTOR (14 downto 0) := "000000001111010";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv12_3A8 : STD_LOGIC_VECTOR (11 downto 0) := "001110101000";
    constant ap_const_lv12_E88 : STD_LOGIC_VECTOR (11 downto 0) := "111010001000";
    constant ap_const_lv12_C00 : STD_LOGIC_VECTOR (11 downto 0) := "110000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";

attribute shreg_extract : string;
    signal p_read25_reg_474 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal p_read25_reg_474_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_read14_reg_481 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_read14_reg_481_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_read_6_reg_487 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_read_6_reg_487_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln_reg_498 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln717_5_reg_503 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln717_6_reg_508 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln717_7_reg_513 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln717_8_reg_518 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln3_reg_523 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln712_1_reg_528 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln712_2_reg_533 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln4_reg_538 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln740_3_fu_352_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln740_3_reg_543 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln740_4_fu_358_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln740_4_reg_548 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln740_5_fu_364_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln740_5_reg_553 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln740_6_fu_370_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln740_6_reg_558 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln740_7_fu_376_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln740_7_reg_563 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln740_8_fu_382_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln740_8_reg_568 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_83_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_83_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal shl_ln_fu_137_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln1171_fu_144_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_0_fu_134_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln1171_7_fu_154_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln1171_1_fu_170_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1171_1_fu_189_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln1171_2_fu_196_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln1171_2_fu_200_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_1_fu_186_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1171_2_fu_225_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln1171_3_fu_236_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1171_4_fu_243_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln1171_3_fu_232_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln1171_4_fu_247_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln1171_5_fu_263_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_2_fu_222_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln1171_fu_148_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln1171_3_fu_216_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_83_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sub_ln1171_6_fu_279_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln712_2_fu_334_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln712_3_fu_343_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln712_fu_325_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln712_fu_328_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln712_4_fu_346_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln712_1_fu_337_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln712_1_fu_331_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln712_2_fu_340_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln740_fu_349_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln740_1_fu_391_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln740_fu_388_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln740_fu_394_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln740_2_fu_411_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln740_1_fu_408_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln740_1_fu_414_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_1_fu_420_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln740_2_fu_435_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln740_4_fu_432_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln740_2_fu_438_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_2_fu_444_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln1_fu_400_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln740_3_fu_428_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln740_5_fu_452_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_83_ce : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;
    signal p_read_int_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_read1_int_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_read2_int_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_return_0_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_return_1_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_return_2_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_83_p00 : STD_LOGIC_VECTOR (14 downto 0);

    component myproject_mul_8ns_8ns_15_3_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;



begin
    mul_8ns_8ns_15_3_0_U44 : component myproject_mul_8ns_8ns_15_3_0
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_83_p0,
        din1 => grp_fu_83_p1,
        ce => grp_fu_83_ce,
        dout => grp_fu_83_p2);





    ap_ce_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ce_reg <= ap_ce;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then
                add_ln740_3_reg_543 <= add_ln740_3_fu_352_p2;
                add_ln740_4_reg_548 <= add_ln740_4_fu_358_p2;
                add_ln740_5_reg_553 <= add_ln740_5_fu_364_p2;
                add_ln740_6_reg_558 <= add_ln740_6_fu_370_p2;
                    add_ln740_7_reg_563(11 downto 2) <= add_ln740_7_fu_376_p2(11 downto 2);
                add_ln740_8_reg_568 <= add_ln740_8_fu_382_p2;
                p_read14_reg_481 <= p_read1_int_reg;
                p_read14_reg_481_pp0_iter1_reg <= p_read14_reg_481;
                p_read25_reg_474 <= p_read2_int_reg;
                p_read25_reg_474_pp0_iter1_reg <= p_read25_reg_474;
                p_read_6_reg_487 <= p_read_int_reg;
                p_read_6_reg_487_pp0_iter1_reg <= p_read_6_reg_487;
                trunc_ln3_reg_523 <= sub_ln1171_fu_148_p2(15 downto 5);
                trunc_ln4_reg_538 <= sub_ln1171_6_fu_279_p2(15 downto 5);
                trunc_ln712_1_reg_528 <= sub_ln1171_3_fu_216_p2(15 downto 5);
                trunc_ln712_2_reg_533 <= grp_fu_83_p2(14 downto 5);
                trunc_ln717_5_reg_503 <= sub_ln1171_1_fu_170_p2(15 downto 5);
                trunc_ln717_6_reg_508 <= sub_ln1171_2_fu_200_p2(15 downto 5);
                trunc_ln717_7_reg_513 <= sub_ln1171_4_fu_247_p2(15 downto 5);
                trunc_ln717_8_reg_518 <= sub_ln1171_5_fu_263_p2(15 downto 5);
                trunc_ln_reg_498 <= sub_ln1171_7_fu_154_p2(15 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce_reg)) then
                    ap_return_0_int_reg(15 downto 2) <= shl_ln1_fu_400_p3(15 downto 2);
                    ap_return_1_int_reg(15 downto 2) <= sext_ln740_3_fu_428_p1(15 downto 2);
                    ap_return_2_int_reg(15 downto 2) <= sext_ln740_5_fu_452_p1(15 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                p_read1_int_reg <= p_read1;
                p_read2_int_reg <= p_read2;
                p_read_int_reg <= p_read;
            end if;
        end if;
    end process;
    add_ln740_7_reg_563(1 downto 0) <= "00";
    ap_return_0_int_reg(1 downto 0) <= "00";
    ap_return_1_int_reg(1 downto 0) <= "00";
    ap_return_2_int_reg(1 downto 0) <= "00";
    add_ln740_1_fu_414_p2 <= std_logic_vector(signed(sext_ln740_2_fu_411_p1) + signed(sext_ln740_1_fu_408_p1));
    add_ln740_2_fu_438_p2 <= std_logic_vector(unsigned(zext_ln740_2_fu_435_p1) + unsigned(sext_ln740_4_fu_432_p1));
    add_ln740_3_fu_352_p2 <= std_logic_vector(signed(sext_ln712_2_fu_334_p1) + signed(sext_ln712_3_fu_343_p1));
    add_ln740_4_fu_358_p2 <= std_logic_vector(unsigned(zext_ln712_fu_325_p1) + unsigned(ap_const_lv12_3A8));
    add_ln740_5_fu_364_p2 <= std_logic_vector(signed(sext_ln712_fu_328_p1) + signed(sext_ln712_4_fu_346_p1));
    add_ln740_6_fu_370_p2 <= std_logic_vector(unsigned(zext_ln712_1_fu_337_p1) + unsigned(ap_const_lv12_E88));
    add_ln740_7_fu_376_p2 <= std_logic_vector(signed(sext_ln712_1_fu_331_p1) + signed(ap_const_lv12_C00));
    add_ln740_8_fu_382_p2 <= std_logic_vector(unsigned(zext_ln712_2_fu_340_p1) + unsigned(zext_ln740_fu_349_p1));
    add_ln740_fu_394_p2 <= std_logic_vector(unsigned(zext_ln740_1_fu_391_p1) + unsigned(sext_ln740_fu_388_p1));
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_return_0_assign_proc : process(shl_ln1_fu_400_p3, ap_ce_reg, ap_return_0_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_0 <= ap_return_0_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_0 <= shl_ln1_fu_400_p3;
        else 
            ap_return_0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_return_1_assign_proc : process(sext_ln740_3_fu_428_p1, ap_ce_reg, ap_return_1_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_1 <= ap_return_1_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_1 <= sext_ln740_3_fu_428_p1;
        else 
            ap_return_1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_return_2_assign_proc : process(sext_ln740_5_fu_452_p1, ap_ce_reg, ap_return_2_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_2 <= ap_return_2_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_2 <= sext_ln740_5_fu_452_p1;
        else 
            ap_return_2 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_83_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_83_ce <= ap_const_logic_1;
        else 
            grp_fu_83_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_83_p0 <= grp_fu_83_p00(8 - 1 downto 0);
    grp_fu_83_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read1_int_reg),15));
    grp_fu_83_p1 <= ap_const_lv15_7A(8 - 1 downto 0);
    r_V_0_fu_134_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read_6_reg_487_pp0_iter1_reg),16));
    r_V_1_fu_186_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read14_reg_481_pp0_iter1_reg),16));
    r_V_2_fu_222_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read25_reg_474_pp0_iter1_reg),16));
        sext_ln712_1_fu_331_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln717_5_reg_503),12));

        sext_ln712_2_fu_334_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln717_6_reg_508),12));

        sext_ln712_3_fu_343_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln717_7_reg_513),12));

        sext_ln712_4_fu_346_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln717_8_reg_518),12));

        sext_ln712_fu_328_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_reg_498),12));

        sext_ln740_1_fu_408_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln740_5_reg_553),13));

        sext_ln740_2_fu_411_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln740_6_reg_558),13));

        sext_ln740_3_fu_428_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1_fu_420_p3),16));

        sext_ln740_4_fu_432_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln740_7_reg_563),13));

        sext_ln740_5_fu_452_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_2_fu_444_p3),16));

        sext_ln740_fu_388_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln740_3_reg_543),14));

    shl_ln1171_1_fu_189_p3 <= (p_read14_reg_481_pp0_iter1_reg & ap_const_lv7_0);
    shl_ln1171_2_fu_225_p3 <= (p_read25_reg_474_pp0_iter1_reg & ap_const_lv7_0);
    shl_ln1171_3_fu_236_p3 <= (p_read25_reg_474_pp0_iter1_reg & ap_const_lv1_0);
    shl_ln1_fu_400_p3 <= (add_ln740_fu_394_p2 & ap_const_lv2_0);
    shl_ln_fu_137_p3 <= (p_read_6_reg_487_pp0_iter1_reg & ap_const_lv7_0);
    sub_ln1171_1_fu_170_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(zext_ln1171_fu_144_p1));
    sub_ln1171_2_fu_200_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(zext_ln1171_2_fu_196_p1));
    sub_ln1171_3_fu_216_p2 <= std_logic_vector(unsigned(zext_ln1171_2_fu_196_p1) - unsigned(r_V_1_fu_186_p1));
    sub_ln1171_4_fu_247_p2 <= std_logic_vector(unsigned(zext_ln1171_4_fu_243_p1) - unsigned(zext_ln1171_3_fu_232_p1));
    sub_ln1171_5_fu_263_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(zext_ln1171_3_fu_232_p1));
    sub_ln1171_6_fu_279_p2 <= std_logic_vector(unsigned(zext_ln1171_3_fu_232_p1) - unsigned(r_V_2_fu_222_p1));
    sub_ln1171_7_fu_154_p2 <= std_logic_vector(unsigned(r_V_0_fu_134_p1) - unsigned(zext_ln1171_fu_144_p1));
    sub_ln1171_fu_148_p2 <= std_logic_vector(unsigned(zext_ln1171_fu_144_p1) - unsigned(r_V_0_fu_134_p1));
    tmp_1_fu_420_p3 <= (add_ln740_1_fu_414_p2 & ap_const_lv2_0);
    tmp_2_fu_444_p3 <= (add_ln740_2_fu_438_p2 & ap_const_lv2_0);
    zext_ln1171_2_fu_196_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1171_1_fu_189_p3),16));
    zext_ln1171_3_fu_232_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1171_2_fu_225_p3),16));
    zext_ln1171_4_fu_243_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1171_3_fu_236_p3),16));
    zext_ln1171_fu_144_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_137_p3),16));
    zext_ln712_1_fu_337_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln712_1_reg_528),12));
    zext_ln712_2_fu_340_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln712_2_reg_533),12));
    zext_ln712_fu_325_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln3_reg_523),12));
    zext_ln740_1_fu_391_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln740_4_reg_548),14));
    zext_ln740_2_fu_435_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln740_8_reg_568),13));
    zext_ln740_fu_349_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln4_reg_538),12));
end behav;
