-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config7_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read4 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read5 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read6 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read7 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read8 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read9 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read10 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read11 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read12 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read13 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read14 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read15 : IN STD_LOGIC_VECTOR (15 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_10 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_11 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_12 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_13 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_14 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_15 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of myproject_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config7_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv10_1FF : STD_LOGIC_VECTOR (9 downto 0) := "0111111111";
    constant ap_const_lv10_200 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal exp_table_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_ce0 : STD_LOGIC;
    signal exp_table_q0 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_table_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_ce1 : STD_LOGIC;
    signal exp_table_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_table_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_ce2 : STD_LOGIC;
    signal exp_table_q2 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_table_address3 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_ce3 : STD_LOGIC;
    signal exp_table_q3 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_table_address4 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_ce4 : STD_LOGIC;
    signal exp_table_q4 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_table_address5 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_ce5 : STD_LOGIC;
    signal exp_table_q5 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_table_address6 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_ce6 : STD_LOGIC;
    signal exp_table_q6 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_table_address7 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_ce7 : STD_LOGIC;
    signal exp_table_q7 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_table_address8 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_ce8 : STD_LOGIC;
    signal exp_table_q8 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_table_address9 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_ce9 : STD_LOGIC;
    signal exp_table_q9 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_table_address10 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_ce10 : STD_LOGIC;
    signal exp_table_q10 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_table_address11 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_ce11 : STD_LOGIC;
    signal exp_table_q11 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_table_address12 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_ce12 : STD_LOGIC;
    signal exp_table_q12 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_table_address13 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_ce13 : STD_LOGIC;
    signal exp_table_q13 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_table_address14 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_ce14 : STD_LOGIC;
    signal exp_table_q14 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_table_address15 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_ce15 : STD_LOGIC;
    signal exp_table_q15 : STD_LOGIC_VECTOR (17 downto 0);
    signal invert_table_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal invert_table_ce0 : STD_LOGIC;
    signal invert_table_q0 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_read_1_reg_2307 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal p_read_1_reg_2307_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_1_reg_2307_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_1_reg_2307_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_2_reg_2313 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_2_reg_2313_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_2_reg_2313_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_2_reg_2313_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_3_reg_2319 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_3_reg_2319_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_3_reg_2319_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_3_reg_2319_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_4_reg_2325 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_4_reg_2325_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_4_reg_2325_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_4_reg_2325_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_5_reg_2331 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_5_reg_2331_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_5_reg_2331_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_5_reg_2331_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_6_reg_2337 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_6_reg_2337_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_6_reg_2337_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_6_reg_2337_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_7_reg_2343 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_7_reg_2343_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_7_reg_2343_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_7_reg_2343_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_8_reg_2349 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_8_reg_2349_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_8_reg_2349_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_8_reg_2349_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_9_reg_2355 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_9_reg_2355_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_9_reg_2355_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_9_reg_2355_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_10_reg_2361 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_10_reg_2361_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_10_reg_2361_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_10_reg_2361_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_11_reg_2367 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_11_reg_2367_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_11_reg_2367_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_11_reg_2367_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_12_reg_2373 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_12_reg_2373_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_12_reg_2373_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_12_reg_2373_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_13_reg_2379 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_13_reg_2379_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_13_reg_2379_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_13_reg_2379_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_14_reg_2385 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_14_reg_2385_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_14_reg_2385_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_14_reg_2385_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_15_reg_2391 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_15_reg_2391_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_15_reg_2391_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_15_reg_2391_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read16_reg_2397 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read16_reg_2397_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read16_reg_2397_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read16_reg_2397_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1549_fu_380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1549_reg_2403 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1549_1_fu_386_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1549_1_reg_2408 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1549_3_fu_392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1549_3_reg_2413 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1549_4_fu_398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1549_4_reg_2418 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1549_7_fu_404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1549_7_reg_2423 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1549_8_fu_410_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1549_8_reg_2428 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1549_10_fu_416_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1549_10_reg_2433 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1549_11_fu_422_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1549_11_reg_2438 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_2_fu_462_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_2_reg_2443 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_5_fu_504_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_5_reg_2449 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_9_fu_546_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_9_reg_2455 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_12_fu_588_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_12_reg_2461 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_6_fu_606_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_6_reg_2467 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_13_fu_622_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_13_reg_2473 : STD_LOGIC_VECTOR (15 downto 0);
    signal x_max_V_fu_638_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal x_max_V_reg_2479 : STD_LOGIC_VECTOR (15 downto 0);
    signal y_fu_1353_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_reg_2484 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_reg_2484_pp0_iter5_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal y_1_fu_1379_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_1_reg_2489 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_1_reg_2489_pp0_iter5_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal y_2_fu_1405_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_2_reg_2494 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_2_reg_2494_pp0_iter5_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal y_3_fu_1431_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_3_reg_2499 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_3_reg_2499_pp0_iter5_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal y_4_fu_1457_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_4_reg_2504 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_4_reg_2504_pp0_iter5_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal y_5_fu_1483_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_5_reg_2509 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_5_reg_2509_pp0_iter5_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal y_6_fu_1509_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_6_reg_2514 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_6_reg_2514_pp0_iter5_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal y_7_fu_1535_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_7_reg_2519 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_7_reg_2519_pp0_iter5_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal y_8_fu_1561_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_8_reg_2524 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_9_fu_1587_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_9_reg_2529 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_10_fu_1613_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_10_reg_2534 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_11_fu_1639_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_11_reg_2539 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_12_fu_1665_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_12_reg_2544 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_12_reg_2544_pp0_iter5_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal y_13_fu_1691_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_13_reg_2549 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_13_reg_2549_pp0_iter5_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal y_14_fu_1717_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_14_reg_2554 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_14_reg_2554_pp0_iter5_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal y_15_fu_1743_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_15_reg_2559 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_15_reg_2559_pp0_iter5_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_res_V_8_reg_2624 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_8_reg_2624_pp0_iter7_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_8_reg_2624_pp0_iter8_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_8_reg_2624_pp0_iter9_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_8_reg_2624_pp0_iter10_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_8_reg_2624_pp0_iter11_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_9_reg_2630 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_9_reg_2630_pp0_iter7_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_9_reg_2630_pp0_iter8_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_9_reg_2630_pp0_iter9_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_9_reg_2630_pp0_iter10_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_9_reg_2630_pp0_iter11_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_10_reg_2636 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_10_reg_2636_pp0_iter7_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_10_reg_2636_pp0_iter8_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_10_reg_2636_pp0_iter9_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_10_reg_2636_pp0_iter10_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_10_reg_2636_pp0_iter11_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_11_reg_2641 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_11_reg_2641_pp0_iter7_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_11_reg_2641_pp0_iter8_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_11_reg_2641_pp0_iter9_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_11_reg_2641_pp0_iter10_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_11_reg_2641_pp0_iter11_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln712_11_fu_1815_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln712_11_reg_2666 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_0_reg_2671 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_0_reg_2671_pp0_iter8_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_0_reg_2671_pp0_iter9_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_0_reg_2671_pp0_iter10_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_0_reg_2671_pp0_iter11_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_1_reg_2676 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_1_reg_2676_pp0_iter8_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_1_reg_2676_pp0_iter9_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_1_reg_2676_pp0_iter10_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_1_reg_2676_pp0_iter11_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_2_reg_2681 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_2_reg_2681_pp0_iter8_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_2_reg_2681_pp0_iter9_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_2_reg_2681_pp0_iter10_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_2_reg_2681_pp0_iter11_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_3_reg_2687 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_3_reg_2687_pp0_iter8_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_3_reg_2687_pp0_iter9_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_3_reg_2687_pp0_iter10_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_3_reg_2687_pp0_iter11_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_4_reg_2693 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_4_reg_2693_pp0_iter8_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_4_reg_2693_pp0_iter9_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_4_reg_2693_pp0_iter10_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_4_reg_2693_pp0_iter11_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_5_reg_2699 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_5_reg_2699_pp0_iter8_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_5_reg_2699_pp0_iter9_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_5_reg_2699_pp0_iter10_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_5_reg_2699_pp0_iter11_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_6_reg_2705 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_6_reg_2705_pp0_iter8_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_6_reg_2705_pp0_iter9_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_6_reg_2705_pp0_iter10_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_6_reg_2705_pp0_iter11_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_7_reg_2710 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_7_reg_2710_pp0_iter8_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_7_reg_2710_pp0_iter9_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_7_reg_2710_pp0_iter10_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_7_reg_2710_pp0_iter11_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_12_reg_2715 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_12_reg_2715_pp0_iter8_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_12_reg_2715_pp0_iter9_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_12_reg_2715_pp0_iter10_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_12_reg_2715_pp0_iter11_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_13_reg_2720 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_13_reg_2720_pp0_iter8_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_13_reg_2720_pp0_iter9_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_13_reg_2720_pp0_iter10_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_13_reg_2720_pp0_iter11_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_14_reg_2725 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_14_reg_2725_pp0_iter8_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_14_reg_2725_pp0_iter9_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_14_reg_2725_pp0_iter10_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_14_reg_2725_pp0_iter11_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_15_reg_2730 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_15_reg_2730_pp0_iter8_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_15_reg_2730_pp0_iter9_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_15_reg_2730_pp0_iter10_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_15_reg_2730_pp0_iter11_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln712_1_fu_1821_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln712_1_reg_2735 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln712_4_fu_1827_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln712_4_reg_2740 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln712_7_fu_1833_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln712_7_reg_2745 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln712_8_fu_1839_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln712_8_reg_2750 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln712_12_fu_1849_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln712_12_reg_2755 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln712_2_fu_1858_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln712_2_reg_2760 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln712_5_fu_1867_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln712_5_reg_2765 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln712_13_fu_1876_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln712_13_reg_2770 : STD_LOGIC_VECTOR (17 downto 0);
    signal y_16_reg_2775 : STD_LOGIC_VECTOR (9 downto 0);
    signal inv_exp_sum_V_reg_2785 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln255_8_fu_1751_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln255_9_fu_1755_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln255_10_fu_1759_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln255_11_fu_1763_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln255_fu_1767_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln255_1_fu_1771_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln255_2_fu_1775_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln255_3_fu_1779_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln255_4_fu_1783_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln255_5_fu_1787_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln255_6_fu_1791_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln255_7_fu_1795_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln255_12_fu_1799_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln255_13_fu_1803_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln255_14_fu_1807_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln255_15_fu_1811_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln265_fu_1900_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln1549_fu_380_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1549_fu_380_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1549_1_fu_386_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1549_1_fu_386_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1549_3_fu_392_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1549_3_fu_392_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1549_4_fu_398_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1549_4_fu_398_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1549_7_fu_404_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1549_7_fu_404_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1549_8_fu_410_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1549_8_fu_410_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1549_10_fu_416_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1549_10_fu_416_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1549_11_fu_422_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1549_11_fu_422_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal xor_ln1549_fu_428_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1549_1_fu_439_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_fu_433_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_1_fu_444_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1549_2_fu_450_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1549_2_fu_456_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1549_3_fu_470_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1549_4_fu_481_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_3_fu_475_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_4_fu_486_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1549_5_fu_492_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1549_5_fu_498_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1549_7_fu_512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1549_8_fu_523_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_7_fu_517_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_8_fu_528_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1549_9_fu_534_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1549_9_fu_540_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1549_10_fu_554_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1549_11_fu_565_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_10_fu_559_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_11_fu_570_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1549_12_fu_576_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1549_12_fu_582_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1549_6_fu_596_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1549_6_fu_600_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1549_13_fu_612_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1549_13_fu_616_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1549_14_fu_628_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1549_14_fu_632_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1246_fu_644_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1246_1_fu_647_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_fu_650_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_17_fu_656_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_18_fu_664_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln794_fu_672_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1246_2_fu_690_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_1_fu_693_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_19_fu_699_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_20_fu_707_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln794_1_fu_715_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1246_3_fu_733_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_2_fu_736_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_21_fu_742_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_22_fu_750_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln794_2_fu_758_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1246_4_fu_776_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_3_fu_779_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_23_fu_785_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_24_fu_793_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln794_3_fu_801_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1246_5_fu_819_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_4_fu_822_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_25_fu_828_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_26_fu_836_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln794_4_fu_844_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1246_6_fu_862_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_5_fu_865_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_27_fu_871_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_28_fu_879_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln794_5_fu_887_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1246_7_fu_905_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_6_fu_908_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_29_fu_914_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_30_fu_922_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln794_6_fu_930_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1246_8_fu_948_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_7_fu_951_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_31_fu_957_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_32_fu_965_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln794_7_fu_973_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1246_9_fu_991_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_8_fu_994_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_33_fu_1000_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_34_fu_1008_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln794_8_fu_1016_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1246_10_fu_1034_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_9_fu_1037_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_35_fu_1043_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_36_fu_1051_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln794_9_fu_1059_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1246_11_fu_1077_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_10_fu_1080_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_37_fu_1086_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_38_fu_1094_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln794_10_fu_1102_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1246_12_fu_1120_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_11_fu_1123_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_39_fu_1129_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_40_fu_1137_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln794_11_fu_1145_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1246_13_fu_1163_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_12_fu_1166_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_41_fu_1172_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_42_fu_1180_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln794_12_fu_1188_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1246_14_fu_1206_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_13_fu_1209_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_43_fu_1215_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_44_fu_1223_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln794_13_fu_1231_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1246_15_fu_1249_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_14_fu_1252_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_45_fu_1258_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_46_fu_1266_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln794_14_fu_1274_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1246_16_fu_1292_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_15_fu_1295_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_47_fu_1301_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_48_fu_1309_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln794_15_fu_1317_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_fu_678_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_fu_684_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln384_fu_1335_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_2_fu_1343_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal overflow_1_fu_721_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_1_fu_727_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln384_1_fu_1361_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_3_fu_1369_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal overflow_2_fu_764_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_2_fu_770_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln384_2_fu_1387_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_4_fu_1395_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal overflow_3_fu_807_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_3_fu_813_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln384_3_fu_1413_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_5_fu_1421_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal overflow_4_fu_850_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_4_fu_856_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln384_4_fu_1439_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_6_fu_1447_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal overflow_5_fu_893_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_5_fu_899_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln384_5_fu_1465_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_7_fu_1473_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal overflow_6_fu_936_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_6_fu_942_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln384_6_fu_1491_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_8_fu_1499_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal overflow_7_fu_979_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_7_fu_985_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln384_7_fu_1517_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_9_fu_1525_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal overflow_8_fu_1022_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_8_fu_1028_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln384_8_fu_1543_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_s_fu_1551_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal overflow_9_fu_1065_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_9_fu_1071_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln384_9_fu_1569_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_1_fu_1577_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal overflow_10_fu_1108_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_10_fu_1114_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln384_10_fu_1595_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_10_fu_1603_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal overflow_11_fu_1151_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_11_fu_1157_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln384_11_fu_1621_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_11_fu_1629_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal overflow_12_fu_1194_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_12_fu_1200_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln384_12_fu_1647_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_12_fu_1655_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal overflow_13_fu_1237_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_13_fu_1243_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln384_13_fu_1673_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_13_fu_1681_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal overflow_14_fu_1280_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_14_fu_1286_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln384_14_fu_1699_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_14_fu_1707_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal overflow_15_fu_1323_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_15_fu_1329_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln384_15_fu_1725_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_15_fu_1733_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln712_11_fu_1815_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln712_11_fu_1815_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln712_1_fu_1821_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln712_1_fu_1821_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln712_4_fu_1827_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln712_4_fu_1827_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln712_7_fu_1833_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln712_7_fu_1833_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln712_8_fu_1839_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln712_8_fu_1839_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln712_10_fu_1845_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln712_fu_1854_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln712_3_fu_1863_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln712_9_fu_1872_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln712_6_fu_1881_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_sum_V_fu_1885_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1168_fu_1910_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1171_fu_1904_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln1168_fu_1910_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln1168_1_fu_1929_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1168_1_fu_1929_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln1168_2_fu_1948_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1168_2_fu_1948_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln1168_3_fu_1967_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1168_3_fu_1967_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln1168_4_fu_1986_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1168_4_fu_1986_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln1168_5_fu_2005_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1168_5_fu_2005_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln1168_6_fu_2024_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1168_6_fu_2024_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln1168_7_fu_2043_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1168_7_fu_2043_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln1168_8_fu_2062_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1168_8_fu_2062_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln1168_9_fu_2081_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1168_9_fu_2081_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln1168_10_fu_2100_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1168_10_fu_2100_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln1168_11_fu_2119_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1168_11_fu_2119_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln1168_12_fu_2138_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1168_12_fu_2138_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln1168_13_fu_2157_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1168_13_fu_2157_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln1168_14_fu_2176_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1168_14_fu_2176_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln1168_15_fu_2195_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1168_15_fu_2195_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to11 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component myproject_mul_18s_18s_30_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component myproject_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config7_s_exp_table IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (17 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (17 downto 0);
        address2 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (17 downto 0);
        address3 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (17 downto 0);
        address4 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce4 : IN STD_LOGIC;
        q4 : OUT STD_LOGIC_VECTOR (17 downto 0);
        address5 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce5 : IN STD_LOGIC;
        q5 : OUT STD_LOGIC_VECTOR (17 downto 0);
        address6 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce6 : IN STD_LOGIC;
        q6 : OUT STD_LOGIC_VECTOR (17 downto 0);
        address7 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce7 : IN STD_LOGIC;
        q7 : OUT STD_LOGIC_VECTOR (17 downto 0);
        address8 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce8 : IN STD_LOGIC;
        q8 : OUT STD_LOGIC_VECTOR (17 downto 0);
        address9 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce9 : IN STD_LOGIC;
        q9 : OUT STD_LOGIC_VECTOR (17 downto 0);
        address10 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce10 : IN STD_LOGIC;
        q10 : OUT STD_LOGIC_VECTOR (17 downto 0);
        address11 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce11 : IN STD_LOGIC;
        q11 : OUT STD_LOGIC_VECTOR (17 downto 0);
        address12 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce12 : IN STD_LOGIC;
        q12 : OUT STD_LOGIC_VECTOR (17 downto 0);
        address13 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce13 : IN STD_LOGIC;
        q13 : OUT STD_LOGIC_VECTOR (17 downto 0);
        address14 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce14 : IN STD_LOGIC;
        q14 : OUT STD_LOGIC_VECTOR (17 downto 0);
        address15 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce15 : IN STD_LOGIC;
        q15 : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component myproject_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config7_s_invert_table IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;



begin
    exp_table_U : component myproject_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config7_s_exp_table
    generic map (
        DataWidth => 18,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => exp_table_address0,
        ce0 => exp_table_ce0,
        q0 => exp_table_q0,
        address1 => exp_table_address1,
        ce1 => exp_table_ce1,
        q1 => exp_table_q1,
        address2 => exp_table_address2,
        ce2 => exp_table_ce2,
        q2 => exp_table_q2,
        address3 => exp_table_address3,
        ce3 => exp_table_ce3,
        q3 => exp_table_q3,
        address4 => exp_table_address4,
        ce4 => exp_table_ce4,
        q4 => exp_table_q4,
        address5 => exp_table_address5,
        ce5 => exp_table_ce5,
        q5 => exp_table_q5,
        address6 => exp_table_address6,
        ce6 => exp_table_ce6,
        q6 => exp_table_q6,
        address7 => exp_table_address7,
        ce7 => exp_table_ce7,
        q7 => exp_table_q7,
        address8 => exp_table_address8,
        ce8 => exp_table_ce8,
        q8 => exp_table_q8,
        address9 => exp_table_address9,
        ce9 => exp_table_ce9,
        q9 => exp_table_q9,
        address10 => exp_table_address10,
        ce10 => exp_table_ce10,
        q10 => exp_table_q10,
        address11 => exp_table_address11,
        ce11 => exp_table_ce11,
        q11 => exp_table_q11,
        address12 => exp_table_address12,
        ce12 => exp_table_ce12,
        q12 => exp_table_q12,
        address13 => exp_table_address13,
        ce13 => exp_table_ce13,
        q13 => exp_table_q13,
        address14 => exp_table_address14,
        ce14 => exp_table_ce14,
        q14 => exp_table_q14,
        address15 => exp_table_address15,
        ce15 => exp_table_ce15,
        q15 => exp_table_q15);

    invert_table_U : component myproject_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config7_s_invert_table
    generic map (
        DataWidth => 18,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => invert_table_address0,
        ce0 => invert_table_ce0,
        q0 => invert_table_q0);

    mul_18s_18s_30_1_1_U188 : component myproject_mul_18s_18s_30_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        dout_WIDTH => 30)
    port map (
        din0 => mul_ln1168_fu_1910_p0,
        din1 => exp_res_V_0_reg_2671_pp0_iter11_reg,
        dout => mul_ln1168_fu_1910_p2);

    mul_18s_18s_30_1_1_U189 : component myproject_mul_18s_18s_30_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        dout_WIDTH => 30)
    port map (
        din0 => mul_ln1168_1_fu_1929_p0,
        din1 => exp_res_V_1_reg_2676_pp0_iter11_reg,
        dout => mul_ln1168_1_fu_1929_p2);

    mul_18s_18s_30_1_1_U190 : component myproject_mul_18s_18s_30_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        dout_WIDTH => 30)
    port map (
        din0 => mul_ln1168_2_fu_1948_p0,
        din1 => exp_res_V_2_reg_2681_pp0_iter11_reg,
        dout => mul_ln1168_2_fu_1948_p2);

    mul_18s_18s_30_1_1_U191 : component myproject_mul_18s_18s_30_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        dout_WIDTH => 30)
    port map (
        din0 => mul_ln1168_3_fu_1967_p0,
        din1 => exp_res_V_3_reg_2687_pp0_iter11_reg,
        dout => mul_ln1168_3_fu_1967_p2);

    mul_18s_18s_30_1_1_U192 : component myproject_mul_18s_18s_30_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        dout_WIDTH => 30)
    port map (
        din0 => mul_ln1168_4_fu_1986_p0,
        din1 => exp_res_V_4_reg_2693_pp0_iter11_reg,
        dout => mul_ln1168_4_fu_1986_p2);

    mul_18s_18s_30_1_1_U193 : component myproject_mul_18s_18s_30_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        dout_WIDTH => 30)
    port map (
        din0 => mul_ln1168_5_fu_2005_p0,
        din1 => exp_res_V_5_reg_2699_pp0_iter11_reg,
        dout => mul_ln1168_5_fu_2005_p2);

    mul_18s_18s_30_1_1_U194 : component myproject_mul_18s_18s_30_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        dout_WIDTH => 30)
    port map (
        din0 => mul_ln1168_6_fu_2024_p0,
        din1 => exp_res_V_6_reg_2705_pp0_iter11_reg,
        dout => mul_ln1168_6_fu_2024_p2);

    mul_18s_18s_30_1_1_U195 : component myproject_mul_18s_18s_30_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        dout_WIDTH => 30)
    port map (
        din0 => mul_ln1168_7_fu_2043_p0,
        din1 => exp_res_V_7_reg_2710_pp0_iter11_reg,
        dout => mul_ln1168_7_fu_2043_p2);

    mul_18s_18s_30_1_1_U196 : component myproject_mul_18s_18s_30_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        dout_WIDTH => 30)
    port map (
        din0 => mul_ln1168_8_fu_2062_p0,
        din1 => exp_res_V_8_reg_2624_pp0_iter11_reg,
        dout => mul_ln1168_8_fu_2062_p2);

    mul_18s_18s_30_1_1_U197 : component myproject_mul_18s_18s_30_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        dout_WIDTH => 30)
    port map (
        din0 => mul_ln1168_9_fu_2081_p0,
        din1 => exp_res_V_9_reg_2630_pp0_iter11_reg,
        dout => mul_ln1168_9_fu_2081_p2);

    mul_18s_18s_30_1_1_U198 : component myproject_mul_18s_18s_30_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        dout_WIDTH => 30)
    port map (
        din0 => mul_ln1168_10_fu_2100_p0,
        din1 => exp_res_V_10_reg_2636_pp0_iter11_reg,
        dout => mul_ln1168_10_fu_2100_p2);

    mul_18s_18s_30_1_1_U199 : component myproject_mul_18s_18s_30_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        dout_WIDTH => 30)
    port map (
        din0 => exp_res_V_11_reg_2641_pp0_iter11_reg,
        din1 => mul_ln1168_11_fu_2119_p1,
        dout => mul_ln1168_11_fu_2119_p2);

    mul_18s_18s_30_1_1_U200 : component myproject_mul_18s_18s_30_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        dout_WIDTH => 30)
    port map (
        din0 => exp_res_V_12_reg_2715_pp0_iter11_reg,
        din1 => mul_ln1168_12_fu_2138_p1,
        dout => mul_ln1168_12_fu_2138_p2);

    mul_18s_18s_30_1_1_U201 : component myproject_mul_18s_18s_30_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        dout_WIDTH => 30)
    port map (
        din0 => exp_res_V_13_reg_2720_pp0_iter11_reg,
        din1 => mul_ln1168_13_fu_2157_p1,
        dout => mul_ln1168_13_fu_2157_p2);

    mul_18s_18s_30_1_1_U202 : component myproject_mul_18s_18s_30_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        dout_WIDTH => 30)
    port map (
        din0 => exp_res_V_14_reg_2725_pp0_iter11_reg,
        din1 => mul_ln1168_14_fu_2176_p1,
        dout => mul_ln1168_14_fu_2176_p2);

    mul_18s_18s_30_1_1_U203 : component myproject_mul_18s_18s_30_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        dout_WIDTH => 30)
    port map (
        din0 => exp_res_V_15_reg_2730_pp0_iter11_reg,
        din1 => mul_ln1168_15_fu_2195_p1,
        dout => mul_ln1168_15_fu_2195_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln712_11_reg_2666 <= add_ln712_11_fu_1815_p2;
                add_ln712_12_reg_2755 <= add_ln712_12_fu_1849_p2;
                add_ln712_13_reg_2770 <= add_ln712_13_fu_1876_p2;
                add_ln712_1_reg_2735 <= add_ln712_1_fu_1821_p2;
                add_ln712_2_reg_2760 <= add_ln712_2_fu_1858_p2;
                add_ln712_4_reg_2740 <= add_ln712_4_fu_1827_p2;
                add_ln712_5_reg_2765 <= add_ln712_5_fu_1867_p2;
                add_ln712_7_reg_2745 <= add_ln712_7_fu_1833_p2;
                add_ln712_8_reg_2750 <= add_ln712_8_fu_1839_p2;
                exp_res_V_0_reg_2671_pp0_iter10_reg <= exp_res_V_0_reg_2671_pp0_iter9_reg;
                exp_res_V_0_reg_2671_pp0_iter11_reg <= exp_res_V_0_reg_2671_pp0_iter10_reg;
                exp_res_V_0_reg_2671_pp0_iter8_reg <= exp_res_V_0_reg_2671;
                exp_res_V_0_reg_2671_pp0_iter9_reg <= exp_res_V_0_reg_2671_pp0_iter8_reg;
                exp_res_V_10_reg_2636_pp0_iter10_reg <= exp_res_V_10_reg_2636_pp0_iter9_reg;
                exp_res_V_10_reg_2636_pp0_iter11_reg <= exp_res_V_10_reg_2636_pp0_iter10_reg;
                exp_res_V_10_reg_2636_pp0_iter7_reg <= exp_res_V_10_reg_2636;
                exp_res_V_10_reg_2636_pp0_iter8_reg <= exp_res_V_10_reg_2636_pp0_iter7_reg;
                exp_res_V_10_reg_2636_pp0_iter9_reg <= exp_res_V_10_reg_2636_pp0_iter8_reg;
                exp_res_V_11_reg_2641_pp0_iter10_reg <= exp_res_V_11_reg_2641_pp0_iter9_reg;
                exp_res_V_11_reg_2641_pp0_iter11_reg <= exp_res_V_11_reg_2641_pp0_iter10_reg;
                exp_res_V_11_reg_2641_pp0_iter7_reg <= exp_res_V_11_reg_2641;
                exp_res_V_11_reg_2641_pp0_iter8_reg <= exp_res_V_11_reg_2641_pp0_iter7_reg;
                exp_res_V_11_reg_2641_pp0_iter9_reg <= exp_res_V_11_reg_2641_pp0_iter8_reg;
                exp_res_V_12_reg_2715_pp0_iter10_reg <= exp_res_V_12_reg_2715_pp0_iter9_reg;
                exp_res_V_12_reg_2715_pp0_iter11_reg <= exp_res_V_12_reg_2715_pp0_iter10_reg;
                exp_res_V_12_reg_2715_pp0_iter8_reg <= exp_res_V_12_reg_2715;
                exp_res_V_12_reg_2715_pp0_iter9_reg <= exp_res_V_12_reg_2715_pp0_iter8_reg;
                exp_res_V_13_reg_2720_pp0_iter10_reg <= exp_res_V_13_reg_2720_pp0_iter9_reg;
                exp_res_V_13_reg_2720_pp0_iter11_reg <= exp_res_V_13_reg_2720_pp0_iter10_reg;
                exp_res_V_13_reg_2720_pp0_iter8_reg <= exp_res_V_13_reg_2720;
                exp_res_V_13_reg_2720_pp0_iter9_reg <= exp_res_V_13_reg_2720_pp0_iter8_reg;
                exp_res_V_14_reg_2725_pp0_iter10_reg <= exp_res_V_14_reg_2725_pp0_iter9_reg;
                exp_res_V_14_reg_2725_pp0_iter11_reg <= exp_res_V_14_reg_2725_pp0_iter10_reg;
                exp_res_V_14_reg_2725_pp0_iter8_reg <= exp_res_V_14_reg_2725;
                exp_res_V_14_reg_2725_pp0_iter9_reg <= exp_res_V_14_reg_2725_pp0_iter8_reg;
                exp_res_V_15_reg_2730_pp0_iter10_reg <= exp_res_V_15_reg_2730_pp0_iter9_reg;
                exp_res_V_15_reg_2730_pp0_iter11_reg <= exp_res_V_15_reg_2730_pp0_iter10_reg;
                exp_res_V_15_reg_2730_pp0_iter8_reg <= exp_res_V_15_reg_2730;
                exp_res_V_15_reg_2730_pp0_iter9_reg <= exp_res_V_15_reg_2730_pp0_iter8_reg;
                exp_res_V_1_reg_2676_pp0_iter10_reg <= exp_res_V_1_reg_2676_pp0_iter9_reg;
                exp_res_V_1_reg_2676_pp0_iter11_reg <= exp_res_V_1_reg_2676_pp0_iter10_reg;
                exp_res_V_1_reg_2676_pp0_iter8_reg <= exp_res_V_1_reg_2676;
                exp_res_V_1_reg_2676_pp0_iter9_reg <= exp_res_V_1_reg_2676_pp0_iter8_reg;
                exp_res_V_2_reg_2681_pp0_iter10_reg <= exp_res_V_2_reg_2681_pp0_iter9_reg;
                exp_res_V_2_reg_2681_pp0_iter11_reg <= exp_res_V_2_reg_2681_pp0_iter10_reg;
                exp_res_V_2_reg_2681_pp0_iter8_reg <= exp_res_V_2_reg_2681;
                exp_res_V_2_reg_2681_pp0_iter9_reg <= exp_res_V_2_reg_2681_pp0_iter8_reg;
                exp_res_V_3_reg_2687_pp0_iter10_reg <= exp_res_V_3_reg_2687_pp0_iter9_reg;
                exp_res_V_3_reg_2687_pp0_iter11_reg <= exp_res_V_3_reg_2687_pp0_iter10_reg;
                exp_res_V_3_reg_2687_pp0_iter8_reg <= exp_res_V_3_reg_2687;
                exp_res_V_3_reg_2687_pp0_iter9_reg <= exp_res_V_3_reg_2687_pp0_iter8_reg;
                exp_res_V_4_reg_2693_pp0_iter10_reg <= exp_res_V_4_reg_2693_pp0_iter9_reg;
                exp_res_V_4_reg_2693_pp0_iter11_reg <= exp_res_V_4_reg_2693_pp0_iter10_reg;
                exp_res_V_4_reg_2693_pp0_iter8_reg <= exp_res_V_4_reg_2693;
                exp_res_V_4_reg_2693_pp0_iter9_reg <= exp_res_V_4_reg_2693_pp0_iter8_reg;
                exp_res_V_5_reg_2699_pp0_iter10_reg <= exp_res_V_5_reg_2699_pp0_iter9_reg;
                exp_res_V_5_reg_2699_pp0_iter11_reg <= exp_res_V_5_reg_2699_pp0_iter10_reg;
                exp_res_V_5_reg_2699_pp0_iter8_reg <= exp_res_V_5_reg_2699;
                exp_res_V_5_reg_2699_pp0_iter9_reg <= exp_res_V_5_reg_2699_pp0_iter8_reg;
                exp_res_V_6_reg_2705_pp0_iter10_reg <= exp_res_V_6_reg_2705_pp0_iter9_reg;
                exp_res_V_6_reg_2705_pp0_iter11_reg <= exp_res_V_6_reg_2705_pp0_iter10_reg;
                exp_res_V_6_reg_2705_pp0_iter8_reg <= exp_res_V_6_reg_2705;
                exp_res_V_6_reg_2705_pp0_iter9_reg <= exp_res_V_6_reg_2705_pp0_iter8_reg;
                exp_res_V_7_reg_2710_pp0_iter10_reg <= exp_res_V_7_reg_2710_pp0_iter9_reg;
                exp_res_V_7_reg_2710_pp0_iter11_reg <= exp_res_V_7_reg_2710_pp0_iter10_reg;
                exp_res_V_7_reg_2710_pp0_iter8_reg <= exp_res_V_7_reg_2710;
                exp_res_V_7_reg_2710_pp0_iter9_reg <= exp_res_V_7_reg_2710_pp0_iter8_reg;
                exp_res_V_8_reg_2624_pp0_iter10_reg <= exp_res_V_8_reg_2624_pp0_iter9_reg;
                exp_res_V_8_reg_2624_pp0_iter11_reg <= exp_res_V_8_reg_2624_pp0_iter10_reg;
                exp_res_V_8_reg_2624_pp0_iter7_reg <= exp_res_V_8_reg_2624;
                exp_res_V_8_reg_2624_pp0_iter8_reg <= exp_res_V_8_reg_2624_pp0_iter7_reg;
                exp_res_V_8_reg_2624_pp0_iter9_reg <= exp_res_V_8_reg_2624_pp0_iter8_reg;
                exp_res_V_9_reg_2630_pp0_iter10_reg <= exp_res_V_9_reg_2630_pp0_iter9_reg;
                exp_res_V_9_reg_2630_pp0_iter11_reg <= exp_res_V_9_reg_2630_pp0_iter10_reg;
                exp_res_V_9_reg_2630_pp0_iter7_reg <= exp_res_V_9_reg_2630;
                exp_res_V_9_reg_2630_pp0_iter8_reg <= exp_res_V_9_reg_2630_pp0_iter7_reg;
                exp_res_V_9_reg_2630_pp0_iter9_reg <= exp_res_V_9_reg_2630_pp0_iter8_reg;
                inv_exp_sum_V_reg_2785 <= invert_table_q0;
                p_read16_reg_2397_pp0_iter2_reg <= p_read16_reg_2397_pp0_iter1_reg;
                p_read16_reg_2397_pp0_iter3_reg <= p_read16_reg_2397_pp0_iter2_reg;
                p_read_10_reg_2361_pp0_iter2_reg <= p_read_10_reg_2361_pp0_iter1_reg;
                p_read_10_reg_2361_pp0_iter3_reg <= p_read_10_reg_2361_pp0_iter2_reg;
                p_read_11_reg_2367_pp0_iter2_reg <= p_read_11_reg_2367_pp0_iter1_reg;
                p_read_11_reg_2367_pp0_iter3_reg <= p_read_11_reg_2367_pp0_iter2_reg;
                p_read_12_reg_2373_pp0_iter2_reg <= p_read_12_reg_2373_pp0_iter1_reg;
                p_read_12_reg_2373_pp0_iter3_reg <= p_read_12_reg_2373_pp0_iter2_reg;
                p_read_13_reg_2379_pp0_iter2_reg <= p_read_13_reg_2379_pp0_iter1_reg;
                p_read_13_reg_2379_pp0_iter3_reg <= p_read_13_reg_2379_pp0_iter2_reg;
                p_read_14_reg_2385_pp0_iter2_reg <= p_read_14_reg_2385_pp0_iter1_reg;
                p_read_14_reg_2385_pp0_iter3_reg <= p_read_14_reg_2385_pp0_iter2_reg;
                p_read_15_reg_2391_pp0_iter2_reg <= p_read_15_reg_2391_pp0_iter1_reg;
                p_read_15_reg_2391_pp0_iter3_reg <= p_read_15_reg_2391_pp0_iter2_reg;
                p_read_1_reg_2307_pp0_iter2_reg <= p_read_1_reg_2307_pp0_iter1_reg;
                p_read_1_reg_2307_pp0_iter3_reg <= p_read_1_reg_2307_pp0_iter2_reg;
                p_read_2_reg_2313_pp0_iter2_reg <= p_read_2_reg_2313_pp0_iter1_reg;
                p_read_2_reg_2313_pp0_iter3_reg <= p_read_2_reg_2313_pp0_iter2_reg;
                p_read_3_reg_2319_pp0_iter2_reg <= p_read_3_reg_2319_pp0_iter1_reg;
                p_read_3_reg_2319_pp0_iter3_reg <= p_read_3_reg_2319_pp0_iter2_reg;
                p_read_4_reg_2325_pp0_iter2_reg <= p_read_4_reg_2325_pp0_iter1_reg;
                p_read_4_reg_2325_pp0_iter3_reg <= p_read_4_reg_2325_pp0_iter2_reg;
                p_read_5_reg_2331_pp0_iter2_reg <= p_read_5_reg_2331_pp0_iter1_reg;
                p_read_5_reg_2331_pp0_iter3_reg <= p_read_5_reg_2331_pp0_iter2_reg;
                p_read_6_reg_2337_pp0_iter2_reg <= p_read_6_reg_2337_pp0_iter1_reg;
                p_read_6_reg_2337_pp0_iter3_reg <= p_read_6_reg_2337_pp0_iter2_reg;
                p_read_7_reg_2343_pp0_iter2_reg <= p_read_7_reg_2343_pp0_iter1_reg;
                p_read_7_reg_2343_pp0_iter3_reg <= p_read_7_reg_2343_pp0_iter2_reg;
                p_read_8_reg_2349_pp0_iter2_reg <= p_read_8_reg_2349_pp0_iter1_reg;
                p_read_8_reg_2349_pp0_iter3_reg <= p_read_8_reg_2349_pp0_iter2_reg;
                p_read_9_reg_2355_pp0_iter2_reg <= p_read_9_reg_2355_pp0_iter1_reg;
                p_read_9_reg_2355_pp0_iter3_reg <= p_read_9_reg_2355_pp0_iter2_reg;
                select_ln65_13_reg_2473 <= select_ln65_13_fu_622_p3;
                select_ln65_6_reg_2467 <= select_ln65_6_fu_606_p3;
                x_max_V_reg_2479 <= x_max_V_fu_638_p3;
                y_10_reg_2534 <= y_10_fu_1613_p3;
                y_11_reg_2539 <= y_11_fu_1639_p3;
                y_12_reg_2544 <= y_12_fu_1665_p3;
                y_12_reg_2544_pp0_iter5_reg <= y_12_reg_2544;
                y_13_reg_2549 <= y_13_fu_1691_p3;
                y_13_reg_2549_pp0_iter5_reg <= y_13_reg_2549;
                y_14_reg_2554 <= y_14_fu_1717_p3;
                y_14_reg_2554_pp0_iter5_reg <= y_14_reg_2554;
                y_15_reg_2559 <= y_15_fu_1743_p3;
                y_15_reg_2559_pp0_iter5_reg <= y_15_reg_2559;
                y_16_reg_2775 <= exp_sum_V_fu_1885_p2(17 downto 8);
                y_1_reg_2489 <= y_1_fu_1379_p3;
                y_1_reg_2489_pp0_iter5_reg <= y_1_reg_2489;
                y_2_reg_2494 <= y_2_fu_1405_p3;
                y_2_reg_2494_pp0_iter5_reg <= y_2_reg_2494;
                y_3_reg_2499 <= y_3_fu_1431_p3;
                y_3_reg_2499_pp0_iter5_reg <= y_3_reg_2499;
                y_4_reg_2504 <= y_4_fu_1457_p3;
                y_4_reg_2504_pp0_iter5_reg <= y_4_reg_2504;
                y_5_reg_2509 <= y_5_fu_1483_p3;
                y_5_reg_2509_pp0_iter5_reg <= y_5_reg_2509;
                y_6_reg_2514 <= y_6_fu_1509_p3;
                y_6_reg_2514_pp0_iter5_reg <= y_6_reg_2514;
                y_7_reg_2519 <= y_7_fu_1535_p3;
                y_7_reg_2519_pp0_iter5_reg <= y_7_reg_2519;
                y_8_reg_2524 <= y_8_fu_1561_p3;
                y_9_reg_2529 <= y_9_fu_1587_p3;
                y_reg_2484 <= y_fu_1353_p3;
                y_reg_2484_pp0_iter5_reg <= y_reg_2484;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then
                exp_res_V_0_reg_2671 <= exp_table_q11;
                exp_res_V_12_reg_2715 <= exp_table_q3;
                exp_res_V_13_reg_2720 <= exp_table_q2;
                exp_res_V_14_reg_2725 <= exp_table_q1;
                exp_res_V_15_reg_2730 <= exp_table_q0;
                exp_res_V_1_reg_2676 <= exp_table_q10;
                exp_res_V_2_reg_2681 <= exp_table_q9;
                exp_res_V_3_reg_2687 <= exp_table_q8;
                exp_res_V_4_reg_2693 <= exp_table_q7;
                exp_res_V_5_reg_2699 <= exp_table_q6;
                exp_res_V_6_reg_2705 <= exp_table_q5;
                exp_res_V_7_reg_2710 <= exp_table_q4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then
                exp_res_V_10_reg_2636 <= exp_table_q13;
                exp_res_V_11_reg_2641 <= exp_table_q12;
                exp_res_V_8_reg_2624 <= exp_table_q15;
                exp_res_V_9_reg_2630 <= exp_table_q14;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln1549_10_reg_2433 <= icmp_ln1549_10_fu_416_p2;
                icmp_ln1549_11_reg_2438 <= icmp_ln1549_11_fu_422_p2;
                icmp_ln1549_1_reg_2408 <= icmp_ln1549_1_fu_386_p2;
                icmp_ln1549_3_reg_2413 <= icmp_ln1549_3_fu_392_p2;
                icmp_ln1549_4_reg_2418 <= icmp_ln1549_4_fu_398_p2;
                icmp_ln1549_7_reg_2423 <= icmp_ln1549_7_fu_404_p2;
                icmp_ln1549_8_reg_2428 <= icmp_ln1549_8_fu_410_p2;
                icmp_ln1549_reg_2403 <= icmp_ln1549_fu_380_p2;
                p_read16_reg_2397 <= p_read;
                p_read16_reg_2397_pp0_iter1_reg <= p_read16_reg_2397;
                p_read_10_reg_2361 <= p_read6;
                p_read_10_reg_2361_pp0_iter1_reg <= p_read_10_reg_2361;
                p_read_11_reg_2367 <= p_read5;
                p_read_11_reg_2367_pp0_iter1_reg <= p_read_11_reg_2367;
                p_read_12_reg_2373 <= p_read4;
                p_read_12_reg_2373_pp0_iter1_reg <= p_read_12_reg_2373;
                p_read_13_reg_2379 <= p_read3;
                p_read_13_reg_2379_pp0_iter1_reg <= p_read_13_reg_2379;
                p_read_14_reg_2385 <= p_read2;
                p_read_14_reg_2385_pp0_iter1_reg <= p_read_14_reg_2385;
                p_read_15_reg_2391 <= p_read1;
                p_read_15_reg_2391_pp0_iter1_reg <= p_read_15_reg_2391;
                p_read_1_reg_2307 <= p_read15;
                p_read_1_reg_2307_pp0_iter1_reg <= p_read_1_reg_2307;
                p_read_2_reg_2313 <= p_read14;
                p_read_2_reg_2313_pp0_iter1_reg <= p_read_2_reg_2313;
                p_read_3_reg_2319 <= p_read13;
                p_read_3_reg_2319_pp0_iter1_reg <= p_read_3_reg_2319;
                p_read_4_reg_2325 <= p_read12;
                p_read_4_reg_2325_pp0_iter1_reg <= p_read_4_reg_2325;
                p_read_5_reg_2331 <= p_read11;
                p_read_5_reg_2331_pp0_iter1_reg <= p_read_5_reg_2331;
                p_read_6_reg_2337 <= p_read10;
                p_read_6_reg_2337_pp0_iter1_reg <= p_read_6_reg_2337;
                p_read_7_reg_2343 <= p_read9;
                p_read_7_reg_2343_pp0_iter1_reg <= p_read_7_reg_2343;
                p_read_8_reg_2349 <= p_read8;
                p_read_8_reg_2349_pp0_iter1_reg <= p_read_8_reg_2349;
                p_read_9_reg_2355 <= p_read7;
                p_read_9_reg_2355_pp0_iter1_reg <= p_read_9_reg_2355;
                select_ln65_12_reg_2461 <= select_ln65_12_fu_588_p3;
                select_ln65_2_reg_2443 <= select_ln65_2_fu_462_p3;
                select_ln65_5_reg_2449 <= select_ln65_5_fu_504_p3;
                select_ln65_9_reg_2455 <= select_ln65_9_fu_546_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln712_10_fu_1845_p2 <= std_logic_vector(signed(exp_res_V_8_reg_2624) + signed(exp_res_V_9_reg_2630));
    add_ln712_11_fu_1815_p0 <= exp_table_q13;
    add_ln712_11_fu_1815_p1 <= exp_table_q12;
    add_ln712_11_fu_1815_p2 <= std_logic_vector(signed(add_ln712_11_fu_1815_p0) + signed(add_ln712_11_fu_1815_p1));
    add_ln712_12_fu_1849_p2 <= std_logic_vector(unsigned(add_ln712_11_reg_2666) + unsigned(add_ln712_10_fu_1845_p2));
    add_ln712_13_fu_1876_p2 <= std_logic_vector(unsigned(add_ln712_12_reg_2755) + unsigned(add_ln712_9_fu_1872_p2));
    add_ln712_1_fu_1821_p0 <= exp_table_q11;
    add_ln712_1_fu_1821_p1 <= exp_table_q10;
    add_ln712_1_fu_1821_p2 <= std_logic_vector(signed(add_ln712_1_fu_1821_p0) + signed(add_ln712_1_fu_1821_p1));
    add_ln712_2_fu_1858_p2 <= std_logic_vector(unsigned(add_ln712_1_reg_2735) + unsigned(add_ln712_fu_1854_p2));
    add_ln712_3_fu_1863_p2 <= std_logic_vector(signed(exp_res_V_4_reg_2693) + signed(exp_res_V_5_reg_2699));
    add_ln712_4_fu_1827_p0 <= exp_table_q5;
    add_ln712_4_fu_1827_p1 <= exp_table_q4;
    add_ln712_4_fu_1827_p2 <= std_logic_vector(signed(add_ln712_4_fu_1827_p0) + signed(add_ln712_4_fu_1827_p1));
    add_ln712_5_fu_1867_p2 <= std_logic_vector(unsigned(add_ln712_4_reg_2740) + unsigned(add_ln712_3_fu_1863_p2));
    add_ln712_6_fu_1881_p2 <= std_logic_vector(unsigned(add_ln712_5_reg_2765) + unsigned(add_ln712_2_reg_2760));
    add_ln712_7_fu_1833_p0 <= exp_table_q3;
    add_ln712_7_fu_1833_p1 <= exp_table_q2;
    add_ln712_7_fu_1833_p2 <= std_logic_vector(signed(add_ln712_7_fu_1833_p0) + signed(add_ln712_7_fu_1833_p1));
    add_ln712_8_fu_1839_p0 <= exp_table_q1;
    add_ln712_8_fu_1839_p1 <= exp_table_q0;
    add_ln712_8_fu_1839_p2 <= std_logic_vector(signed(add_ln712_8_fu_1839_p0) + signed(add_ln712_8_fu_1839_p1));
    add_ln712_9_fu_1872_p2 <= std_logic_vector(unsigned(add_ln712_8_reg_2750) + unsigned(add_ln712_7_reg_2745));
    add_ln712_fu_1854_p2 <= std_logic_vector(signed(exp_res_V_3_reg_2687) + signed(exp_res_V_2_reg_2681));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to11_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to11 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to11)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to11 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= mul_ln1168_fu_1910_p2(29 downto 14);
    ap_return_1 <= mul_ln1168_1_fu_1929_p2(29 downto 14);
    ap_return_10 <= mul_ln1168_10_fu_2100_p2(29 downto 14);
    ap_return_11 <= mul_ln1168_11_fu_2119_p2(29 downto 14);
    ap_return_12 <= mul_ln1168_12_fu_2138_p2(29 downto 14);
    ap_return_13 <= mul_ln1168_13_fu_2157_p2(29 downto 14);
    ap_return_14 <= mul_ln1168_14_fu_2176_p2(29 downto 14);
    ap_return_15 <= mul_ln1168_15_fu_2195_p2(29 downto 14);
    ap_return_2 <= mul_ln1168_2_fu_1948_p2(29 downto 14);
    ap_return_3 <= mul_ln1168_3_fu_1967_p2(29 downto 14);
    ap_return_4 <= mul_ln1168_4_fu_1986_p2(29 downto 14);
    ap_return_5 <= mul_ln1168_5_fu_2005_p2(29 downto 14);
    ap_return_6 <= mul_ln1168_6_fu_2024_p2(29 downto 14);
    ap_return_7 <= mul_ln1168_7_fu_2043_p2(29 downto 14);
    ap_return_8 <= mul_ln1168_8_fu_2062_p2(29 downto 14);
    ap_return_9 <= mul_ln1168_9_fu_2081_p2(29 downto 14);
    exp_sum_V_fu_1885_p2 <= std_logic_vector(unsigned(add_ln712_13_reg_2770) + unsigned(add_ln712_6_fu_1881_p2));
    exp_table_address0 <= zext_ln255_15_fu_1811_p1(10 - 1 downto 0);
    exp_table_address1 <= zext_ln255_14_fu_1807_p1(10 - 1 downto 0);
    exp_table_address10 <= zext_ln255_1_fu_1771_p1(10 - 1 downto 0);
    exp_table_address11 <= zext_ln255_fu_1767_p1(10 - 1 downto 0);
    exp_table_address12 <= zext_ln255_11_fu_1763_p1(10 - 1 downto 0);
    exp_table_address13 <= zext_ln255_10_fu_1759_p1(10 - 1 downto 0);
    exp_table_address14 <= zext_ln255_9_fu_1755_p1(10 - 1 downto 0);
    exp_table_address15 <= zext_ln255_8_fu_1751_p1(10 - 1 downto 0);
    exp_table_address2 <= zext_ln255_13_fu_1803_p1(10 - 1 downto 0);
    exp_table_address3 <= zext_ln255_12_fu_1799_p1(10 - 1 downto 0);
    exp_table_address4 <= zext_ln255_7_fu_1795_p1(10 - 1 downto 0);
    exp_table_address5 <= zext_ln255_6_fu_1791_p1(10 - 1 downto 0);
    exp_table_address6 <= zext_ln255_5_fu_1787_p1(10 - 1 downto 0);
    exp_table_address7 <= zext_ln255_4_fu_1783_p1(10 - 1 downto 0);
    exp_table_address8 <= zext_ln255_3_fu_1779_p1(10 - 1 downto 0);
    exp_table_address9 <= zext_ln255_2_fu_1775_p1(10 - 1 downto 0);

    exp_table_ce0_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            exp_table_ce0 <= ap_const_logic_1;
        else 
            exp_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table_ce1_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            exp_table_ce1 <= ap_const_logic_1;
        else 
            exp_table_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table_ce10_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            exp_table_ce10 <= ap_const_logic_1;
        else 
            exp_table_ce10 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table_ce11_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            exp_table_ce11 <= ap_const_logic_1;
        else 
            exp_table_ce11 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table_ce12_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            exp_table_ce12 <= ap_const_logic_1;
        else 
            exp_table_ce12 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table_ce13_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            exp_table_ce13 <= ap_const_logic_1;
        else 
            exp_table_ce13 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table_ce14_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            exp_table_ce14 <= ap_const_logic_1;
        else 
            exp_table_ce14 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table_ce15_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            exp_table_ce15 <= ap_const_logic_1;
        else 
            exp_table_ce15 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table_ce2_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            exp_table_ce2 <= ap_const_logic_1;
        else 
            exp_table_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table_ce3_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            exp_table_ce3 <= ap_const_logic_1;
        else 
            exp_table_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table_ce4_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            exp_table_ce4 <= ap_const_logic_1;
        else 
            exp_table_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table_ce5_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            exp_table_ce5 <= ap_const_logic_1;
        else 
            exp_table_ce5 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table_ce6_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            exp_table_ce6 <= ap_const_logic_1;
        else 
            exp_table_ce6 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table_ce7_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            exp_table_ce7 <= ap_const_logic_1;
        else 
            exp_table_ce7 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table_ce8_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            exp_table_ce8 <= ap_const_logic_1;
        else 
            exp_table_ce8 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table_ce9_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            exp_table_ce9 <= ap_const_logic_1;
        else 
            exp_table_ce9 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln1549_10_fu_416_p0 <= p_read12;
    icmp_ln1549_10_fu_416_p1 <= p_read13;
    icmp_ln1549_10_fu_416_p2 <= "1" when (signed(icmp_ln1549_10_fu_416_p0) < signed(icmp_ln1549_10_fu_416_p1)) else "0";
    icmp_ln1549_11_fu_422_p0 <= p_read14;
    icmp_ln1549_11_fu_422_p1 <= p_read15;
    icmp_ln1549_11_fu_422_p2 <= "1" when (signed(icmp_ln1549_11_fu_422_p0) < signed(icmp_ln1549_11_fu_422_p1)) else "0";
    icmp_ln1549_12_fu_576_p2 <= "1" when (signed(select_ln65_10_fu_559_p3) < signed(select_ln65_11_fu_570_p3)) else "0";
    icmp_ln1549_13_fu_612_p2 <= "1" when (signed(select_ln65_9_reg_2455) < signed(select_ln65_12_reg_2461)) else "0";
    icmp_ln1549_14_fu_628_p2 <= "1" when (signed(select_ln65_6_reg_2467) < signed(select_ln65_13_reg_2473)) else "0";
    icmp_ln1549_1_fu_386_p0 <= p_read2;
    icmp_ln1549_1_fu_386_p1 <= p_read3;
    icmp_ln1549_1_fu_386_p2 <= "1" when (signed(icmp_ln1549_1_fu_386_p0) < signed(icmp_ln1549_1_fu_386_p1)) else "0";
    icmp_ln1549_2_fu_450_p2 <= "1" when (signed(select_ln65_fu_433_p3) < signed(select_ln65_1_fu_444_p3)) else "0";
    icmp_ln1549_3_fu_392_p0 <= p_read4;
    icmp_ln1549_3_fu_392_p1 <= p_read5;
    icmp_ln1549_3_fu_392_p2 <= "1" when (signed(icmp_ln1549_3_fu_392_p0) < signed(icmp_ln1549_3_fu_392_p1)) else "0";
    icmp_ln1549_4_fu_398_p0 <= p_read6;
    icmp_ln1549_4_fu_398_p1 <= p_read7;
    icmp_ln1549_4_fu_398_p2 <= "1" when (signed(icmp_ln1549_4_fu_398_p0) < signed(icmp_ln1549_4_fu_398_p1)) else "0";
    icmp_ln1549_5_fu_492_p2 <= "1" when (signed(select_ln65_3_fu_475_p3) < signed(select_ln65_4_fu_486_p3)) else "0";
    icmp_ln1549_6_fu_596_p2 <= "1" when (signed(select_ln65_2_reg_2443) < signed(select_ln65_5_reg_2449)) else "0";
    icmp_ln1549_7_fu_404_p0 <= p_read8;
    icmp_ln1549_7_fu_404_p1 <= p_read9;
    icmp_ln1549_7_fu_404_p2 <= "1" when (signed(icmp_ln1549_7_fu_404_p0) < signed(icmp_ln1549_7_fu_404_p1)) else "0";
    icmp_ln1549_8_fu_410_p0 <= p_read10;
    icmp_ln1549_8_fu_410_p1 <= p_read11;
    icmp_ln1549_8_fu_410_p2 <= "1" when (signed(icmp_ln1549_8_fu_410_p0) < signed(icmp_ln1549_8_fu_410_p1)) else "0";
    icmp_ln1549_9_fu_534_p2 <= "1" when (signed(select_ln65_7_fu_517_p3) < signed(select_ln65_8_fu_528_p3)) else "0";
    icmp_ln1549_fu_380_p0 <= p_read;
    icmp_ln1549_fu_380_p1 <= p_read1;
    icmp_ln1549_fu_380_p2 <= "1" when (signed(icmp_ln1549_fu_380_p0) < signed(icmp_ln1549_fu_380_p1)) else "0";
    invert_table_address0 <= zext_ln265_fu_1900_p1(10 - 1 downto 0);

    invert_table_ce0_assign_proc : process(ap_enable_reg_pp0_iter10, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            invert_table_ce0 <= ap_const_logic_1;
        else 
            invert_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln1168_10_fu_2100_p0 <= sext_ln1171_fu_1904_p1(18 - 1 downto 0);
    mul_ln1168_11_fu_2119_p1 <= sext_ln1171_fu_1904_p1(18 - 1 downto 0);
    mul_ln1168_12_fu_2138_p1 <= sext_ln1171_fu_1904_p1(18 - 1 downto 0);
    mul_ln1168_13_fu_2157_p1 <= sext_ln1171_fu_1904_p1(18 - 1 downto 0);
    mul_ln1168_14_fu_2176_p1 <= sext_ln1171_fu_1904_p1(18 - 1 downto 0);
    mul_ln1168_15_fu_2195_p1 <= sext_ln1171_fu_1904_p1(18 - 1 downto 0);
    mul_ln1168_1_fu_1929_p0 <= sext_ln1171_fu_1904_p1(18 - 1 downto 0);
    mul_ln1168_2_fu_1948_p0 <= sext_ln1171_fu_1904_p1(18 - 1 downto 0);
    mul_ln1168_3_fu_1967_p0 <= sext_ln1171_fu_1904_p1(18 - 1 downto 0);
    mul_ln1168_4_fu_1986_p0 <= sext_ln1171_fu_1904_p1(18 - 1 downto 0);
    mul_ln1168_5_fu_2005_p0 <= sext_ln1171_fu_1904_p1(18 - 1 downto 0);
    mul_ln1168_6_fu_2024_p0 <= sext_ln1171_fu_1904_p1(18 - 1 downto 0);
    mul_ln1168_7_fu_2043_p0 <= sext_ln1171_fu_1904_p1(18 - 1 downto 0);
    mul_ln1168_8_fu_2062_p0 <= sext_ln1171_fu_1904_p1(18 - 1 downto 0);
    mul_ln1168_9_fu_2081_p0 <= sext_ln1171_fu_1904_p1(18 - 1 downto 0);
    mul_ln1168_fu_1910_p0 <= sext_ln1171_fu_1904_p1(18 - 1 downto 0);
    overflow_10_fu_1108_p2 <= (xor_ln794_10_fu_1102_p2 and p_Result_38_fu_1094_p3);
    overflow_11_fu_1151_p2 <= (xor_ln794_11_fu_1145_p2 and p_Result_40_fu_1137_p3);
    overflow_12_fu_1194_p2 <= (xor_ln794_12_fu_1188_p2 and p_Result_42_fu_1180_p3);
    overflow_13_fu_1237_p2 <= (xor_ln794_13_fu_1231_p2 and p_Result_44_fu_1223_p3);
    overflow_14_fu_1280_p2 <= (xor_ln794_14_fu_1274_p2 and p_Result_46_fu_1266_p3);
    overflow_15_fu_1323_p2 <= (xor_ln794_15_fu_1317_p2 and p_Result_48_fu_1309_p3);
    overflow_1_fu_721_p2 <= (xor_ln794_1_fu_715_p2 and p_Result_20_fu_707_p3);
    overflow_2_fu_764_p2 <= (xor_ln794_2_fu_758_p2 and p_Result_22_fu_750_p3);
    overflow_3_fu_807_p2 <= (xor_ln794_3_fu_801_p2 and p_Result_24_fu_793_p3);
    overflow_4_fu_850_p2 <= (xor_ln794_4_fu_844_p2 and p_Result_26_fu_836_p3);
    overflow_5_fu_893_p2 <= (xor_ln794_5_fu_887_p2 and p_Result_28_fu_879_p3);
    overflow_6_fu_936_p2 <= (xor_ln794_6_fu_930_p2 and p_Result_30_fu_922_p3);
    overflow_7_fu_979_p2 <= (xor_ln794_7_fu_973_p2 and p_Result_32_fu_965_p3);
    overflow_8_fu_1022_p2 <= (xor_ln794_8_fu_1016_p2 and p_Result_34_fu_1008_p3);
    overflow_9_fu_1065_p2 <= (xor_ln794_9_fu_1059_p2 and p_Result_36_fu_1051_p3);
    overflow_fu_678_p2 <= (xor_ln794_fu_672_p2 and p_Result_18_fu_664_p3);
    p_Result_17_fu_656_p3 <= ret_V_fu_650_p2(16 downto 16);
    p_Result_18_fu_664_p3 <= ret_V_fu_650_p2(15 downto 15);
    p_Result_19_fu_699_p3 <= ret_V_1_fu_693_p2(16 downto 16);
    p_Result_20_fu_707_p3 <= ret_V_1_fu_693_p2(15 downto 15);
    p_Result_21_fu_742_p3 <= ret_V_2_fu_736_p2(16 downto 16);
    p_Result_22_fu_750_p3 <= ret_V_2_fu_736_p2(15 downto 15);
    p_Result_23_fu_785_p3 <= ret_V_3_fu_779_p2(16 downto 16);
    p_Result_24_fu_793_p3 <= ret_V_3_fu_779_p2(15 downto 15);
    p_Result_25_fu_828_p3 <= ret_V_4_fu_822_p2(16 downto 16);
    p_Result_26_fu_836_p3 <= ret_V_4_fu_822_p2(15 downto 15);
    p_Result_27_fu_871_p3 <= ret_V_5_fu_865_p2(16 downto 16);
    p_Result_28_fu_879_p3 <= ret_V_5_fu_865_p2(15 downto 15);
    p_Result_29_fu_914_p3 <= ret_V_6_fu_908_p2(16 downto 16);
    p_Result_30_fu_922_p3 <= ret_V_6_fu_908_p2(15 downto 15);
    p_Result_31_fu_957_p3 <= ret_V_7_fu_951_p2(16 downto 16);
    p_Result_32_fu_965_p3 <= ret_V_7_fu_951_p2(15 downto 15);
    p_Result_33_fu_1000_p3 <= ret_V_8_fu_994_p2(16 downto 16);
    p_Result_34_fu_1008_p3 <= ret_V_8_fu_994_p2(15 downto 15);
    p_Result_35_fu_1043_p3 <= ret_V_9_fu_1037_p2(16 downto 16);
    p_Result_36_fu_1051_p3 <= ret_V_9_fu_1037_p2(15 downto 15);
    p_Result_37_fu_1086_p3 <= ret_V_10_fu_1080_p2(16 downto 16);
    p_Result_38_fu_1094_p3 <= ret_V_10_fu_1080_p2(15 downto 15);
    p_Result_39_fu_1129_p3 <= ret_V_11_fu_1123_p2(16 downto 16);
    p_Result_40_fu_1137_p3 <= ret_V_11_fu_1123_p2(15 downto 15);
    p_Result_41_fu_1172_p3 <= ret_V_12_fu_1166_p2(16 downto 16);
    p_Result_42_fu_1180_p3 <= ret_V_12_fu_1166_p2(15 downto 15);
    p_Result_43_fu_1215_p3 <= ret_V_13_fu_1209_p2(16 downto 16);
    p_Result_44_fu_1223_p3 <= ret_V_13_fu_1209_p2(15 downto 15);
    p_Result_45_fu_1258_p3 <= ret_V_14_fu_1252_p2(16 downto 16);
    p_Result_46_fu_1266_p3 <= ret_V_14_fu_1252_p2(15 downto 15);
    p_Result_47_fu_1301_p3 <= ret_V_15_fu_1295_p2(16 downto 16);
    p_Result_48_fu_1309_p3 <= ret_V_15_fu_1295_p2(15 downto 15);
    ret_V_10_fu_1080_p2 <= std_logic_vector(signed(sext_ln1246_11_fu_1077_p1) - signed(sext_ln1246_1_fu_647_p1));
    ret_V_11_fu_1123_p2 <= std_logic_vector(signed(sext_ln1246_12_fu_1120_p1) - signed(sext_ln1246_1_fu_647_p1));
    ret_V_12_fu_1166_p2 <= std_logic_vector(signed(sext_ln1246_13_fu_1163_p1) - signed(sext_ln1246_1_fu_647_p1));
    ret_V_13_fu_1209_p2 <= std_logic_vector(signed(sext_ln1246_14_fu_1206_p1) - signed(sext_ln1246_1_fu_647_p1));
    ret_V_14_fu_1252_p2 <= std_logic_vector(signed(sext_ln1246_15_fu_1249_p1) - signed(sext_ln1246_1_fu_647_p1));
    ret_V_15_fu_1295_p2 <= std_logic_vector(signed(sext_ln1246_16_fu_1292_p1) - signed(sext_ln1246_1_fu_647_p1));
    ret_V_1_fu_693_p2 <= std_logic_vector(signed(sext_ln1246_2_fu_690_p1) - signed(sext_ln1246_1_fu_647_p1));
    ret_V_2_fu_736_p2 <= std_logic_vector(signed(sext_ln1246_3_fu_733_p1) - signed(sext_ln1246_1_fu_647_p1));
    ret_V_3_fu_779_p2 <= std_logic_vector(signed(sext_ln1246_4_fu_776_p1) - signed(sext_ln1246_1_fu_647_p1));
    ret_V_4_fu_822_p2 <= std_logic_vector(signed(sext_ln1246_5_fu_819_p1) - signed(sext_ln1246_1_fu_647_p1));
    ret_V_5_fu_865_p2 <= std_logic_vector(signed(sext_ln1246_6_fu_862_p1) - signed(sext_ln1246_1_fu_647_p1));
    ret_V_6_fu_908_p2 <= std_logic_vector(signed(sext_ln1246_7_fu_905_p1) - signed(sext_ln1246_1_fu_647_p1));
    ret_V_7_fu_951_p2 <= std_logic_vector(signed(sext_ln1246_8_fu_948_p1) - signed(sext_ln1246_1_fu_647_p1));
    ret_V_8_fu_994_p2 <= std_logic_vector(signed(sext_ln1246_9_fu_991_p1) - signed(sext_ln1246_1_fu_647_p1));
    ret_V_9_fu_1037_p2 <= std_logic_vector(signed(sext_ln1246_10_fu_1034_p1) - signed(sext_ln1246_1_fu_647_p1));
    ret_V_fu_650_p2 <= std_logic_vector(signed(sext_ln1246_fu_644_p1) - signed(sext_ln1246_1_fu_647_p1));
    select_ln384_10_fu_1595_p3 <= 
        ap_const_lv10_1FF when (overflow_10_fu_1108_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln384_11_fu_1621_p3 <= 
        ap_const_lv10_1FF when (overflow_11_fu_1151_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln384_12_fu_1647_p3 <= 
        ap_const_lv10_1FF when (overflow_12_fu_1194_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln384_13_fu_1673_p3 <= 
        ap_const_lv10_1FF when (overflow_13_fu_1237_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln384_14_fu_1699_p3 <= 
        ap_const_lv10_1FF when (overflow_14_fu_1280_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln384_15_fu_1725_p3 <= 
        ap_const_lv10_1FF when (overflow_15_fu_1323_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln384_1_fu_1361_p3 <= 
        ap_const_lv10_1FF when (overflow_1_fu_721_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln384_2_fu_1387_p3 <= 
        ap_const_lv10_1FF when (overflow_2_fu_764_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln384_3_fu_1413_p3 <= 
        ap_const_lv10_1FF when (overflow_3_fu_807_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln384_4_fu_1439_p3 <= 
        ap_const_lv10_1FF when (overflow_4_fu_850_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln384_5_fu_1465_p3 <= 
        ap_const_lv10_1FF when (overflow_5_fu_893_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln384_6_fu_1491_p3 <= 
        ap_const_lv10_1FF when (overflow_6_fu_936_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln384_7_fu_1517_p3 <= 
        ap_const_lv10_1FF when (overflow_7_fu_979_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln384_8_fu_1543_p3 <= 
        ap_const_lv10_1FF when (overflow_8_fu_1022_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln384_9_fu_1569_p3 <= 
        ap_const_lv10_1FF when (overflow_9_fu_1065_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln384_fu_1335_p3 <= 
        ap_const_lv10_1FF when (overflow_fu_678_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln65_10_fu_559_p3 <= 
        p_read_4_reg_2325 when (xor_ln1549_10_fu_554_p2(0) = '1') else 
        p_read_3_reg_2319;
    select_ln65_11_fu_570_p3 <= 
        p_read_2_reg_2313 when (xor_ln1549_11_fu_565_p2(0) = '1') else 
        p_read_1_reg_2307;
    select_ln65_12_fu_588_p3 <= 
        select_ln65_10_fu_559_p3 when (xor_ln1549_12_fu_582_p2(0) = '1') else 
        select_ln65_11_fu_570_p3;
    select_ln65_13_fu_622_p3 <= 
        select_ln65_9_reg_2455 when (xor_ln1549_13_fu_616_p2(0) = '1') else 
        select_ln65_12_reg_2461;
    select_ln65_1_fu_444_p3 <= 
        p_read_14_reg_2385 when (xor_ln1549_1_fu_439_p2(0) = '1') else 
        p_read_13_reg_2379;
    select_ln65_2_fu_462_p3 <= 
        select_ln65_fu_433_p3 when (xor_ln1549_2_fu_456_p2(0) = '1') else 
        select_ln65_1_fu_444_p3;
    select_ln65_3_fu_475_p3 <= 
        p_read_12_reg_2373 when (xor_ln1549_3_fu_470_p2(0) = '1') else 
        p_read_11_reg_2367;
    select_ln65_4_fu_486_p3 <= 
        p_read_10_reg_2361 when (xor_ln1549_4_fu_481_p2(0) = '1') else 
        p_read_9_reg_2355;
    select_ln65_5_fu_504_p3 <= 
        select_ln65_3_fu_475_p3 when (xor_ln1549_5_fu_498_p2(0) = '1') else 
        select_ln65_4_fu_486_p3;
    select_ln65_6_fu_606_p3 <= 
        select_ln65_2_reg_2443 when (xor_ln1549_6_fu_600_p2(0) = '1') else 
        select_ln65_5_reg_2449;
    select_ln65_7_fu_517_p3 <= 
        p_read_8_reg_2349 when (xor_ln1549_7_fu_512_p2(0) = '1') else 
        p_read_7_reg_2343;
    select_ln65_8_fu_528_p3 <= 
        p_read_6_reg_2337 when (xor_ln1549_8_fu_523_p2(0) = '1') else 
        p_read_5_reg_2331;
    select_ln65_9_fu_546_p3 <= 
        select_ln65_7_fu_517_p3 when (xor_ln1549_9_fu_540_p2(0) = '1') else 
        select_ln65_8_fu_528_p3;
    select_ln65_fu_433_p3 <= 
        p_read16_reg_2397 when (xor_ln1549_fu_428_p2(0) = '1') else 
        p_read_15_reg_2391;
        sext_ln1171_fu_1904_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(inv_exp_sum_V_reg_2785),30));

        sext_ln1246_10_fu_1034_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_read_7_reg_2343_pp0_iter3_reg),17));

        sext_ln1246_11_fu_1077_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_read_6_reg_2337_pp0_iter3_reg),17));

        sext_ln1246_12_fu_1120_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_read_5_reg_2331_pp0_iter3_reg),17));

        sext_ln1246_13_fu_1163_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_read_4_reg_2325_pp0_iter3_reg),17));

        sext_ln1246_14_fu_1206_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_read_3_reg_2319_pp0_iter3_reg),17));

        sext_ln1246_15_fu_1249_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_read_2_reg_2313_pp0_iter3_reg),17));

        sext_ln1246_16_fu_1292_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_read_1_reg_2307_pp0_iter3_reg),17));

        sext_ln1246_1_fu_647_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_max_V_reg_2479),17));

        sext_ln1246_2_fu_690_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_read_15_reg_2391_pp0_iter3_reg),17));

        sext_ln1246_3_fu_733_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_read_14_reg_2385_pp0_iter3_reg),17));

        sext_ln1246_4_fu_776_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_read_13_reg_2379_pp0_iter3_reg),17));

        sext_ln1246_5_fu_819_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_read_12_reg_2373_pp0_iter3_reg),17));

        sext_ln1246_6_fu_862_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_read_11_reg_2367_pp0_iter3_reg),17));

        sext_ln1246_7_fu_905_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_read_10_reg_2361_pp0_iter3_reg),17));

        sext_ln1246_8_fu_948_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_read_9_reg_2355_pp0_iter3_reg),17));

        sext_ln1246_9_fu_991_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_read_8_reg_2349_pp0_iter3_reg),17));

        sext_ln1246_fu_644_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_read16_reg_2397_pp0_iter3_reg),17));

    tmp_10_fu_1603_p4 <= ret_V_10_fu_1080_p2(15 downto 6);
    tmp_11_fu_1629_p4 <= ret_V_11_fu_1123_p2(15 downto 6);
    tmp_12_fu_1655_p4 <= ret_V_12_fu_1166_p2(15 downto 6);
    tmp_13_fu_1681_p4 <= ret_V_13_fu_1209_p2(15 downto 6);
    tmp_14_fu_1707_p4 <= ret_V_14_fu_1252_p2(15 downto 6);
    tmp_15_fu_1733_p4 <= ret_V_15_fu_1295_p2(15 downto 6);
    tmp_1_fu_1577_p4 <= ret_V_9_fu_1037_p2(15 downto 6);
    tmp_2_fu_1343_p4 <= ret_V_fu_650_p2(15 downto 6);
    tmp_3_fu_1369_p4 <= ret_V_1_fu_693_p2(15 downto 6);
    tmp_4_fu_1395_p4 <= ret_V_2_fu_736_p2(15 downto 6);
    tmp_5_fu_1421_p4 <= ret_V_3_fu_779_p2(15 downto 6);
    tmp_6_fu_1447_p4 <= ret_V_4_fu_822_p2(15 downto 6);
    tmp_7_fu_1473_p4 <= ret_V_5_fu_865_p2(15 downto 6);
    tmp_8_fu_1499_p4 <= ret_V_6_fu_908_p2(15 downto 6);
    tmp_9_fu_1525_p4 <= ret_V_7_fu_951_p2(15 downto 6);
    tmp_s_fu_1551_p4 <= ret_V_8_fu_994_p2(15 downto 6);
    x_max_V_fu_638_p3 <= 
        select_ln65_6_reg_2467 when (xor_ln1549_14_fu_632_p2(0) = '1') else 
        select_ln65_13_reg_2473;
    xor_ln1549_10_fu_554_p2 <= (icmp_ln1549_10_reg_2433 xor ap_const_lv1_1);
    xor_ln1549_11_fu_565_p2 <= (icmp_ln1549_11_reg_2438 xor ap_const_lv1_1);
    xor_ln1549_12_fu_582_p2 <= (icmp_ln1549_12_fu_576_p2 xor ap_const_lv1_1);
    xor_ln1549_13_fu_616_p2 <= (icmp_ln1549_13_fu_612_p2 xor ap_const_lv1_1);
    xor_ln1549_14_fu_632_p2 <= (icmp_ln1549_14_fu_628_p2 xor ap_const_lv1_1);
    xor_ln1549_1_fu_439_p2 <= (icmp_ln1549_1_reg_2408 xor ap_const_lv1_1);
    xor_ln1549_2_fu_456_p2 <= (icmp_ln1549_2_fu_450_p2 xor ap_const_lv1_1);
    xor_ln1549_3_fu_470_p2 <= (icmp_ln1549_3_reg_2413 xor ap_const_lv1_1);
    xor_ln1549_4_fu_481_p2 <= (icmp_ln1549_4_reg_2418 xor ap_const_lv1_1);
    xor_ln1549_5_fu_498_p2 <= (icmp_ln1549_5_fu_492_p2 xor ap_const_lv1_1);
    xor_ln1549_6_fu_600_p2 <= (icmp_ln1549_6_fu_596_p2 xor ap_const_lv1_1);
    xor_ln1549_7_fu_512_p2 <= (icmp_ln1549_7_reg_2423 xor ap_const_lv1_1);
    xor_ln1549_8_fu_523_p2 <= (icmp_ln1549_8_reg_2428 xor ap_const_lv1_1);
    xor_ln1549_9_fu_540_p2 <= (icmp_ln1549_9_fu_534_p2 xor ap_const_lv1_1);
    xor_ln1549_fu_428_p2 <= (icmp_ln1549_reg_2403 xor ap_const_lv1_1);
    xor_ln340_10_fu_1114_p2 <= (p_Result_38_fu_1094_p3 xor p_Result_37_fu_1086_p3);
    xor_ln340_11_fu_1157_p2 <= (p_Result_40_fu_1137_p3 xor p_Result_39_fu_1129_p3);
    xor_ln340_12_fu_1200_p2 <= (p_Result_42_fu_1180_p3 xor p_Result_41_fu_1172_p3);
    xor_ln340_13_fu_1243_p2 <= (p_Result_44_fu_1223_p3 xor p_Result_43_fu_1215_p3);
    xor_ln340_14_fu_1286_p2 <= (p_Result_46_fu_1266_p3 xor p_Result_45_fu_1258_p3);
    xor_ln340_15_fu_1329_p2 <= (p_Result_48_fu_1309_p3 xor p_Result_47_fu_1301_p3);
    xor_ln340_1_fu_727_p2 <= (p_Result_20_fu_707_p3 xor p_Result_19_fu_699_p3);
    xor_ln340_2_fu_770_p2 <= (p_Result_22_fu_750_p3 xor p_Result_21_fu_742_p3);
    xor_ln340_3_fu_813_p2 <= (p_Result_24_fu_793_p3 xor p_Result_23_fu_785_p3);
    xor_ln340_4_fu_856_p2 <= (p_Result_26_fu_836_p3 xor p_Result_25_fu_828_p3);
    xor_ln340_5_fu_899_p2 <= (p_Result_28_fu_879_p3 xor p_Result_27_fu_871_p3);
    xor_ln340_6_fu_942_p2 <= (p_Result_30_fu_922_p3 xor p_Result_29_fu_914_p3);
    xor_ln340_7_fu_985_p2 <= (p_Result_32_fu_965_p3 xor p_Result_31_fu_957_p3);
    xor_ln340_8_fu_1028_p2 <= (p_Result_34_fu_1008_p3 xor p_Result_33_fu_1000_p3);
    xor_ln340_9_fu_1071_p2 <= (p_Result_36_fu_1051_p3 xor p_Result_35_fu_1043_p3);
    xor_ln340_fu_684_p2 <= (p_Result_18_fu_664_p3 xor p_Result_17_fu_656_p3);
    xor_ln794_10_fu_1102_p2 <= (p_Result_37_fu_1086_p3 xor ap_const_lv1_1);
    xor_ln794_11_fu_1145_p2 <= (p_Result_39_fu_1129_p3 xor ap_const_lv1_1);
    xor_ln794_12_fu_1188_p2 <= (p_Result_41_fu_1172_p3 xor ap_const_lv1_1);
    xor_ln794_13_fu_1231_p2 <= (p_Result_43_fu_1215_p3 xor ap_const_lv1_1);
    xor_ln794_14_fu_1274_p2 <= (p_Result_45_fu_1258_p3 xor ap_const_lv1_1);
    xor_ln794_15_fu_1317_p2 <= (p_Result_47_fu_1301_p3 xor ap_const_lv1_1);
    xor_ln794_1_fu_715_p2 <= (p_Result_19_fu_699_p3 xor ap_const_lv1_1);
    xor_ln794_2_fu_758_p2 <= (p_Result_21_fu_742_p3 xor ap_const_lv1_1);
    xor_ln794_3_fu_801_p2 <= (p_Result_23_fu_785_p3 xor ap_const_lv1_1);
    xor_ln794_4_fu_844_p2 <= (p_Result_25_fu_828_p3 xor ap_const_lv1_1);
    xor_ln794_5_fu_887_p2 <= (p_Result_27_fu_871_p3 xor ap_const_lv1_1);
    xor_ln794_6_fu_930_p2 <= (p_Result_29_fu_914_p3 xor ap_const_lv1_1);
    xor_ln794_7_fu_973_p2 <= (p_Result_31_fu_957_p3 xor ap_const_lv1_1);
    xor_ln794_8_fu_1016_p2 <= (p_Result_33_fu_1000_p3 xor ap_const_lv1_1);
    xor_ln794_9_fu_1059_p2 <= (p_Result_35_fu_1043_p3 xor ap_const_lv1_1);
    xor_ln794_fu_672_p2 <= (p_Result_17_fu_656_p3 xor ap_const_lv1_1);
    y_10_fu_1613_p3 <= 
        select_ln384_10_fu_1595_p3 when (xor_ln340_10_fu_1114_p2(0) = '1') else 
        tmp_10_fu_1603_p4;
    y_11_fu_1639_p3 <= 
        select_ln384_11_fu_1621_p3 when (xor_ln340_11_fu_1157_p2(0) = '1') else 
        tmp_11_fu_1629_p4;
    y_12_fu_1665_p3 <= 
        select_ln384_12_fu_1647_p3 when (xor_ln340_12_fu_1200_p2(0) = '1') else 
        tmp_12_fu_1655_p4;
    y_13_fu_1691_p3 <= 
        select_ln384_13_fu_1673_p3 when (xor_ln340_13_fu_1243_p2(0) = '1') else 
        tmp_13_fu_1681_p4;
    y_14_fu_1717_p3 <= 
        select_ln384_14_fu_1699_p3 when (xor_ln340_14_fu_1286_p2(0) = '1') else 
        tmp_14_fu_1707_p4;
    y_15_fu_1743_p3 <= 
        select_ln384_15_fu_1725_p3 when (xor_ln340_15_fu_1329_p2(0) = '1') else 
        tmp_15_fu_1733_p4;
    y_1_fu_1379_p3 <= 
        select_ln384_1_fu_1361_p3 when (xor_ln340_1_fu_727_p2(0) = '1') else 
        tmp_3_fu_1369_p4;
    y_2_fu_1405_p3 <= 
        select_ln384_2_fu_1387_p3 when (xor_ln340_2_fu_770_p2(0) = '1') else 
        tmp_4_fu_1395_p4;
    y_3_fu_1431_p3 <= 
        select_ln384_3_fu_1413_p3 when (xor_ln340_3_fu_813_p2(0) = '1') else 
        tmp_5_fu_1421_p4;
    y_4_fu_1457_p3 <= 
        select_ln384_4_fu_1439_p3 when (xor_ln340_4_fu_856_p2(0) = '1') else 
        tmp_6_fu_1447_p4;
    y_5_fu_1483_p3 <= 
        select_ln384_5_fu_1465_p3 when (xor_ln340_5_fu_899_p2(0) = '1') else 
        tmp_7_fu_1473_p4;
    y_6_fu_1509_p3 <= 
        select_ln384_6_fu_1491_p3 when (xor_ln340_6_fu_942_p2(0) = '1') else 
        tmp_8_fu_1499_p4;
    y_7_fu_1535_p3 <= 
        select_ln384_7_fu_1517_p3 when (xor_ln340_7_fu_985_p2(0) = '1') else 
        tmp_9_fu_1525_p4;
    y_8_fu_1561_p3 <= 
        select_ln384_8_fu_1543_p3 when (xor_ln340_8_fu_1028_p2(0) = '1') else 
        tmp_s_fu_1551_p4;
    y_9_fu_1587_p3 <= 
        select_ln384_9_fu_1569_p3 when (xor_ln340_9_fu_1071_p2(0) = '1') else 
        tmp_1_fu_1577_p4;
    y_fu_1353_p3 <= 
        select_ln384_fu_1335_p3 when (xor_ln340_fu_684_p2(0) = '1') else 
        tmp_2_fu_1343_p4;
    zext_ln255_10_fu_1759_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_10_reg_2534),64));
    zext_ln255_11_fu_1763_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_11_reg_2539),64));
    zext_ln255_12_fu_1799_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_12_reg_2544_pp0_iter5_reg),64));
    zext_ln255_13_fu_1803_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_13_reg_2549_pp0_iter5_reg),64));
    zext_ln255_14_fu_1807_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_14_reg_2554_pp0_iter5_reg),64));
    zext_ln255_15_fu_1811_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_15_reg_2559_pp0_iter5_reg),64));
    zext_ln255_1_fu_1771_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_1_reg_2489_pp0_iter5_reg),64));
    zext_ln255_2_fu_1775_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_2_reg_2494_pp0_iter5_reg),64));
    zext_ln255_3_fu_1779_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_3_reg_2499_pp0_iter5_reg),64));
    zext_ln255_4_fu_1783_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_4_reg_2504_pp0_iter5_reg),64));
    zext_ln255_5_fu_1787_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_5_reg_2509_pp0_iter5_reg),64));
    zext_ln255_6_fu_1791_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_6_reg_2514_pp0_iter5_reg),64));
    zext_ln255_7_fu_1795_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_7_reg_2519_pp0_iter5_reg),64));
    zext_ln255_8_fu_1751_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_8_reg_2524),64));
    zext_ln255_9_fu_1755_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_9_reg_2529),64));
    zext_ln255_fu_1767_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_reg_2484_pp0_iter5_reg),64));
    zext_ln265_fu_1900_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_16_reg_2775),64));
end behav;
